{"version":3,"file":"scripting_test.js","sourceRoot":"","sources":["../../../test/adaptivity/scripting_test.ts"],"names":[],"mappings":"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","sourcesContent":["import { CapiVariable, CapiVariableTypes } from 'adaptivity/capi';\nimport {\n  applyState,\n  ApplyStateOperation,\n  evalScript,\n  getAssignScript,\n  getValue,\n  getExpressionStringForValue,\n  looksLikeJson,\n} from 'adaptivity/scripting';\nimport { Environment } from 'janus-script';\n\ndescribe('Scripting Interface', () => {\n  describe('looksLikeJson', () => {\n    it('should return true for a valid json string', () => {\n      expect(looksLikeJson('{ \"a\": 1 }')).toBe(true);\n    });\n    it('should return false for an invalid json string', () => {\n      expect(looksLikeJson('{ a: 1 }')).toBe(false);\n    });\n    it('should return true for the config from FIB', () => {\n      const jsonVal =\n        '{\"content\":{\"ops\":[{\"insert\":\"An eclipse happens when \"},{\"insert\":{\"dropdown\":{\"id\":\"dropdown-aac4d92a-c396-46e6-a0df-358afc3824b2\"}}},{\"insert\":\" blocks&#xa;sunlight from reaching another celestial body, &#xa;\"},{\"insert\":{\"dropdown\":{\"id\":\"dropdown-66aa9663-d1c9-418c-abac-942387472141\"}}},{\"insert\":\".&#xa;\"}]},\"dropdowns\":{\"dropdown-aac4d92a-c396-46e6-a0df-358afc3824b2\":{\"correct\":\"option8\",\"options\":{\"option6\":\"the Sun\",\"option7\":\"a dragon\",\"option8\":\"a celestial body\",\"option9\":\"Earth\",\"option10\":\"the Moon\"}},\"dropdown-66aa9663-d1c9-418c-abac-942387472141\":{\"correct\":\"option2\",\"options\":{\"option1\":\"destroying the Sun\",\"option2\":\"casting a shadow\",\"option3\":\"eating the Sun\",\"option4\":\"destroying the Moon\"}}},\"textInputs\":{}}';\n\n      expect(looksLikeJson(jsonVal)).toBe(true);\n    });\n  });\n\n  describe('ApplyState', () => {\n    it('should support the adding and + operator', () => {\n      const env = new Environment();\n      evalScript('let x = 1;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: 'adding',\n        value: 2,\n      };\n      applyState(applyOperation, env);\n      const x = getValue('x', env);\n      expect(x).toBe(3);\n      applyOperation.operator = '+';\n      applyState(applyOperation, env);\n      const y = getValue('x', env);\n      expect(y).toBe(5);\n    });\n\n    it('should support the subtracting and - operator', () => {\n      const env = new Environment();\n      evalScript('let x = 10;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: 'subtracting',\n        value: 2,\n      };\n      applyState(applyOperation, env);\n      const x = getValue('x', env);\n      expect(x).toBe(8);\n      applyOperation.operator = '-';\n      applyState(applyOperation, env);\n      const y = getValue('x', env);\n      expect(y).toBe(6);\n    });\n\n    it('should support assignment of Enum types', () => {\n      const env = new Environment();\n      evalScript('let x = \"A\";', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: '=',\n        value: 'B',\n        type: CapiVariableTypes.ENUM,\n      };\n      applyState(applyOperation, env);\n      const x = getValue('x', env);\n      expect(x).toBe('B');\n    });\n\n    it('should support assignment of expressions', () => {\n      const env = new Environment();\n      evalScript('let x = 1;let y = 2;let {session.currentQuestionScore} = 50;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: '=',\n        value: '{x} + {y} + 1',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation, env);\n      const x = getValue('x', env);\n      expect(x).toBe(4);\n      const applyOperation1: ApplyStateOperation = {\n        target: 'y',\n        operator: '=',\n        value: '100 - {session.currentQuestionScore}',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation1, env);\n      const y = getValue('y', env);\n      expect(y).toBe(50);\n    });\n\n    it('should support addition of expressions', () => {\n      const env = new Environment();\n      evalScript('let x = 1;let y = 2;let {session.currentQuestionScore} = 50;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: 'adding',\n        value: '{session.currentQuestionScore}',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation, env);\n      const x = getValue('x', env);\n      expect(x).toBe(51);\n      const applyOperation1: ApplyStateOperation = {\n        target: 'y',\n        operator: 'adding',\n        value: '100 - {x}',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation1, env);\n      const y = getValue('y', env);\n      expect(y).toBe(51);\n    });\n\n    it('should support subtraction of expressions', () => {\n      const env = new Environment();\n      evalScript('let x = 1;let y = 2;let {session.currentQuestionScore} = 50;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: 'subtracting',\n        value: '{session.currentQuestionScore}',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation, env);\n      const x = getValue('x', env);\n      expect(x).toBe(-49);\n      const applyOperation1: ApplyStateOperation = {\n        target: 'y',\n        operator: 'subtracting',\n        value: '100 - {x}',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation1, env);\n      const y = getValue('y', env);\n      expect(y).toBe(-49);\n    });\n\n    it('should support the \"bind to\" operator', () => {\n      const env = new Environment();\n      evalScript('let x = 1;let {session.currentQuestionScore} = 50;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: 'bind to',\n        value: 'session.currentQuestionScore',\n        type: CapiVariableTypes.NUMBER,\n      };\n      applyState(applyOperation, env);\n      let x = getValue('x', env);\n      expect(x).toBe(50);\n      evalScript('let {session.currentQuestionScore} = 75;', env);\n      x = getValue('x', env);\n      expect(x).toBe(75);\n    });\n\n    it('should not return result errors rather than throw them', () => {\n      const env = new Environment();\n      evalScript('let x = 1;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: 'x',\n        operator: '',\n        value: 7,\n        type: CapiVariableTypes.NUMBER,\n      };\n      const { result } = applyState(applyOperation, env);\n      expect(result.error).toEqual(true);\n    });\n\n    it('should trim target variables to prevent errors', () => {\n      const env = new Environment();\n      evalScript('let x = 1;', env);\n      const applyOperation: ApplyStateOperation = {\n        target: ' x',\n        operator: '+',\n        value: 7,\n        type: CapiVariableTypes.NUMBER,\n      };\n      const { result } = applyState(applyOperation, env);\n      expect(result).toEqual(null);\n    });\n  });\n\n  describe('getValue', () => {\n    it('should get the direct value for a scripting variable', () => {\n      const environment = new Environment();\n      evalScript('let x = \"42\";', environment);\n\n      const value = getValue('x', environment);\n      expect(value).toBe('42');\n    });\n  });\n\n  describe('evalScript', () => {\n    it('should return a reference to the environment', () => {\n      const environment = new Environment();\n      const result = evalScript('let x = \"42\";', environment);\n      expect(result.env).toBe(environment);\n    });\n  });\n\n  describe('getAssignScript', () => {\n    it('should return a script that assigns a value to a variable', () => {\n      const environment = new Environment();\n      const script = getAssignScript({ x: 42 }, environment);\n      const result = evalScript(script, environment);\n      const value = getValue('x', environment);\n      expect(script).toBe('let {x} = 42;');\n      expect(result.result).toBe(null);\n      expect(value).toBe(42);\n    });\n\n    it('it should correctly detect CSS and should be working for most of the CSS values', () => {\n      const environment = new Environment();\n      const varValueFormat1 =\n        'body[data-new-gr-c-s-check-loaded] #scene_Student{border-radius:3px;border:solid 1px #484848 !important;background-color: #161616;padding: 10px;box-sizing: border-box;}.columns-container {padding: 0;}.columns-container .items-column .item:last-child {margin-bottom: 0;}.container {overflow: hidden;}.items-column {height: 100%;}.items-column .items-container {height: 100%;display: flex;flex-direction: column;justify-content: space-between;}.columns-container .items-column .item {border: solid 0.5px #FFC627;background-color: black;padding: 10px;box-sizing: border-box;height: 40px;margin-bottom: 5px;height: 75px;}.item.link-hover {padding: 10px;}.columns-container .items-column .item .item-label {color: #ffffff;height: auto;position: relative;top: 50%;transform: translateY(calc(-50% + 4px));line-height:initial;}.columns-container .left-column .item {border-radius: 4px 100px 100px 4px;margin-left: 0;}.columns-container .left-column .item .item-label:after {content: \"\";width: 20px;height: 20px;box-sizing: border-box;position: absolute;background-color: transparent;border: solid 1px #FFC627;border-radius: 100px;margin: 0;padding: 0;top: 50%;transform: translateY(-50%);right: 5px;}.columns-container .right-column .item {border-radius: 100px 4px 4px 100px;margin-right: 0;}.columns-container .right-column .item .item-label:after {content: \"\";width: 20px;height: 20px;box-sizing: border-box;position: absolute;background-color: transparent;border: solid 1px #FFC627;border-radius: 100px;margin: 0;padding: 0;top: 50%;transform: translateY(-50%);left: 5px;}.columns-container .items-column .item.link-hover {border: solid 1px #FFC627;background-color: #222;padding: 0;box-sizing: border-box;box-shadow: none;}.columns-container .items-column .item[linked] {border: solid 2px #FFC627;background-color: #291b30;box-shadow: none;}.columns-container .items-column .item.preview-source-hover, .columns-container .items-column .item.preview-target-hover {border: solid 3px #ffcc00;background-color: #291b30;box-shadow: none;}.columns-container .items-column .item .remove-links:before {content: \"X\";margin-left: auto;margin-right: auto;position: relative;}.line-renderer line {stroke: #FFC627;stroke-width: 2px;}.line-renderer line.pointer {stroke: #ffcc00;stroke-width: 2px;}';\n      const varValueFormat2 =\n        'body[data-new-gr-c-s-check-loaded] #scene_Student{border-radius:3px;border:solid 1px #484848!important;background-color:#161616;padding:10px;box-sizing:border-box}.columns-container{padding:0}.columns-container .items-column .item:last-child{margin-bottom:0}.container{overflow:hidden}.items-column{height:100%}.items-column .items-container{height:100%}.columns-container .items-column .item{border:solid .5px #ffc627;background-color:#000;padding:10px;box-sizing:border-box;height:40px;margin-bottom:5px;height:75px}.item.link-hover{padding:10px}.columns-container .items-column .item .item-label{color:#fff;height:auto;position:relative;top:50%;transform:translateY(calc(-50% + 4px));line-height:initial}.columns-container .left-column .item{border-radius:4px 100px 100px 4px;margin-left:0}.columns-container .left-column .item .item-label:after{content:\"\";width:20px;height:20px;box-sizing:border-box;position:absolute;background-color:transparent;border:solid 1px #ffc627;border-radius:100px;margin:0;padding:0;top:50%;transform:translateY(-50%);right:5px}.columns-container .right-column .item{border-radius:100px 4px 4px 100px;margin-right:0}.columns-container .right-column .item .item-label:after{content:\"\";width:20px;height:20px;box-sizing:border-box;position:absolute;background-color:transparent;border:solid 1px #ffc627;border-radius:100px;margin:0;padding:0;top:50%;transform:translateY(-50%);left:5px}.columns-container .items-column .item.link-hover{border:solid 1px #ffc627;background-color:rgba(0,0,0,.2);padding:0;box-sizing:border-box;box-shadow:none}.columns-container .items-column .item[linked]{border:solid 2px #ffc627;background-color:#291b30;box-shadow:none}.columns-container .items-column .item.preview-source-hover,.columns-container .items-column .item.preview-target-hover{border:solid 3px #fc0;background-color:#291b30;box-shadow:none}.columns-container .items-column .item .remove-links:before{content:\"X\";margin-left:auto;margin-right:auto;position:relative}.line-renderer line{stroke:#ffc627;stroke-width:2px}.line-renderer line.pointer{stroke:#fc0;stroke-width:2px}';\n\n      const script = getAssignScript(\n        {\n          x: {\n            key: 'Custom CSS',\n            path: 'stage.x',\n            value: varValueFormat1,\n          },\n          y: {\n            key: 'Custom CSS',\n            path: 'stage.y',\n            value: varValueFormat2,\n          },\n        },\n        environment,\n      );\n      const result = evalScript(script, environment);\n      const valuex = getValue('stage.x', environment);\n      const valuey = getValue('stage.y', environment);\n      expect(result.result).toBe(null);\n      expect(valuex).toBe(varValueFormat1);\n      expect(valuey).toBe(varValueFormat2);\n    });\n\n    it('it should return math expression as it is', () => {\n      const environment = new Environment();\n\n      const script = getAssignScript(\n        {\n          x: {\n            key: 'Math Expression',\n            path: 'stage.x',\n            value: '2\\\\times\\\\frac{3}{2}=\\\\editable{}',\n          },\n        },\n        environment,\n      );\n      const result = evalScript(script, environment);\n      const valuex = getValue('stage.x', environment);\n      expect(result.result).toBe(null);\n      expect(valuex).toBe('2\\\\times\\\\frac{3}{2}=\\\\editable{}');\n    });\n\n    it('should assign variable expression value and calculate the expression', () => {\n      const environment = new Environment();\n      evalScript(\n        'let {stage.vft.Score} = 1;let {stage.vft.Map complete}=0;let {session.tutorialScore}=0',\n        environment,\n      );\n      const varValue =\n        '{stage.vft.Score}*70 + {stage.vft.Map complete}*100 - {session.tutorialScore}';\n      const script = getAssignScript(\n        {\n          x: {\n            key: 'score',\n            path: 'stage.x',\n            value: varValue,\n          },\n        },\n        environment,\n      );\n      const result = evalScript(script, environment);\n      const value = getValue('stage.x', environment);\n      expect(result.result).toBe(null);\n      expect(script).toBe(`let {stage.x} = ${varValue};`);\n      expect(value).toBe(70);\n    });\n\n    it('should return an assignment script from a capi-like variable', () => {\n      const environment = new Environment();\n      const script = getAssignScript({ x: { key: 'x', path: 'stage.x', value: 42 } }, environment);\n      const result = evalScript(script, environment);\n      const value = getValue('stage.x', environment);\n      expect(script).toBe('let {stage.x} = 42;');\n      expect(result.result).toBe(null);\n      expect(value).toBe(42);\n    });\n\n    it('should assign JSON values as strings', () => {\n      const environment = new Environment();\n      const script = getAssignScript(\n        {\n          x: {\n            type: CapiVariableTypes.STRING,\n            key: 'x',\n            path: 'stage.x',\n            value: '{\"a\":\"something\"}',\n          },\n        },\n        environment,\n      );\n      const result = evalScript(script, environment);\n      const value = getValue('stage.x', environment);\n      expect(script).toBe(`let {stage.x} = \"{\\\\\"a\\\\\":\\\\\"something\\\\\"}\";`);\n      expect(result.result).toBe(null);\n      expect(value).toBe('{\"a\":\"something\"}');\n    });\n\n    it('should assign empty JSON values as strings', () => {\n      const environment = new Environment();\n      const script = getAssignScript(\n        {\n          x: { type: CapiVariableTypes.STRING, key: 'x', path: 'stage.x', value: '{}' },\n        },\n        environment,\n      );\n      const result = evalScript(script, environment);\n      const value = getValue('stage.x', environment);\n      expect(script).toBe(`let {stage.x} = \"{}\";`);\n      expect(result.result).toBe(null);\n      expect(value).toBe('{}');\n    });\n  });\n\n  describe('getExpressionStringForValue', () => {\n    it('should return a script that assigns a value to a variable', () => {\n      const variable = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: 'foo',\n      };\n      const script = getExpressionStringForValue(variable);\n      expect(script).toBe('\"foo\"');\n    });\n\n    it('should allow janus-script variables to be assigned', () => {\n      const variable = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: '{q:1541204522672:818|stage.FillInTheBlanks.Input 1.Value}',\n      };\n      const script = getExpressionStringForValue(variable);\n      expect(script).toBe('{q:1541204522672:818|stage.FillInTheBlanks.Input 1.Value}');\n    });\n\n    it('should allow full janus-script expressions to be assigned', () => {\n      const variable = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: '{stage.foo} + {stage.bar}',\n      };\n      const variable1 = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: '{stage.vft.Score}*70 + {stage.vft.Map complete}*100 - {session.tutorialScore}',\n      };\n      const variable2 = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: '100 - {session.currentQuestionScore}',\n      };\n      const variable3 = {\n        type: CapiVariableTypes.NUMBER,\n        key: 'x',\n        value: 'round({stage.foo.something})',\n      };\n      const variable4 = {\n        type: CapiVariableTypes.ARRAY,\n        key: 'x',\n        value:\n          '[{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 1},{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 2}]',\n      };\n      const variable5 = {\n        type: CapiVariableTypes.ARRAY,\n        key: 'x',\n        value:\n          '{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 1},{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 2}',\n      };\n      const variable6 = {\n        type: CapiVariableTypes.ARRAY,\n        key: 'x',\n        value: '[1,2,3,4,5]',\n      };\n      const variable7 = {\n        type: CapiVariableTypes.NUMBER,\n        key: 'x',\n        value: 'Math.max(1, 7)',\n      };\n      const variable8 = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: 'he began (as he always did) to fidget',\n      };\n      let script = getExpressionStringForValue(variable);\n      expect(script).toBe('{stage.foo} + {stage.bar}');\n      script = getExpressionStringForValue(variable1);\n      expect(script).toBe(\n        '{stage.vft.Score}*70 + {stage.vft.Map complete}*100 - {session.tutorialScore}',\n      );\n      script = getExpressionStringForValue(variable2);\n      expect(script).toBe('100 - {session.currentQuestionScore}');\n      script = getExpressionStringForValue(variable3);\n      expect(script).toBe('round({stage.foo.something})');\n      script = getExpressionStringForValue(variable4);\n      expect(script).toBe(\n        '[{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 1},{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 2}]',\n      );\n      script = getExpressionStringForValue(variable5);\n      expect(script).toBe(\n        '[{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 1},{e:1617736969329:1|stage.HeatSourceSorting.Content Slots.Slot 2}]',\n      );\n      script = getExpressionStringForValue(variable6);\n      expect(script).toBe('[1,2,3,4,5]');\n      script = getExpressionStringForValue(variable7);\n      expect(script).toBe('Math.max(1, 7)');\n      script = getExpressionStringForValue(variable8);\n      expect(script).toBe('\"he began (as he always did) to fidget\"');\n    });\n\n    it('should assign numbers based on type', () => {\n      const variable = {\n        type: CapiVariableTypes.NUMBER,\n        key: 'x',\n        value: 5,\n      };\n      const variable1 = {\n        type: CapiVariableTypes.NUMBER,\n        key: 'x',\n        value: '5',\n      };\n      let script = getExpressionStringForValue(variable);\n      expect(script).toBe('5');\n      script = getExpressionStringForValue(variable1);\n      expect(script).toBe('5');\n    });\n\n    it('should wrap all strings in quotes', () => {\n      const variable = {\n        type: CapiVariableTypes.STRING,\n        key: 'x',\n        value: 'foo',\n      };\n      const variable1 = {\n        type: CapiVariableTypes.ENUM,\n        key: 'x',\n        value: 'TEST',\n      };\n      const variable2 = {\n        type: CapiVariableTypes.MATH_EXPR,\n        key: 'x',\n        value: 'x + 1 = 3',\n      };\n      const variable3 = {\n        type: CapiVariableTypes.UNKNOWN,\n        key: 'x',\n        value: 'foo',\n      };\n      let script = getExpressionStringForValue(variable);\n      expect(script).toBe('\"foo\"');\n      script = getExpressionStringForValue(variable1);\n      expect(script).toBe('\"TEST\"');\n      script = getExpressionStringForValue(variable2);\n      expect(script).toBe('\"x + 1 = 3\"');\n      script = getExpressionStringForValue(variable3);\n      expect(script).toBe('\"foo\"');\n    });\n\n    it('should deal with JSON values', () => {\n      const jsonVal = '{\"content\":{\"ops\":[1, 2, 3]}}';\n      const escapedVal = '{\\\\\"content\\\\\":{\\\\\"ops\\\\\":[1, 2, 3]}}';\n      const variable = {\n        type: 2,\n        value: jsonVal,\n      };\n      const script = getExpressionStringForValue(variable);\n      expect(script).toBe(`\"${escapedVal}\"`);\n    });\n\n    it('should deal with CSS that looks like expressions', () => {\n      const cssVal =\n        '@font-face{font-family:PTSerif;src:url(https://dev-etx.ws.asu.edu/fonts/PT%20Serif/PT_Serif-Web.ttf)}';\n      const variable = {\n        type: CapiVariableTypes.STRING,\n        value: cssVal,\n      };\n      const script = getExpressionStringForValue(variable);\n      expect(script).toBe(`\"${cssVal}\"`);\n    });\n\n    it('should handle Arrays', () => {\n      const variable = {\n        type: CapiVariableTypes.ARRAY,\n        key: 'x',\n        value: [1, 2, 3],\n      };\n      const variable1 = {\n        type: CapiVariableTypes.ARRAY,\n        key: 'x',\n        value: '[1,2,3]',\n      };\n      let script = getExpressionStringForValue(variable);\n      expect(script).toBe('[1,2,3]');\n      script = getExpressionStringForValue(variable1);\n      expect(script).toBe('[1,2,3]');\n    });\n\n    it('should handle boolean values', () => {\n      const variable = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: true,\n      };\n      const variable1 = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: 'true',\n      };\n      const variable2 = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: 'false',\n      };\n      const variable3 = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: 1,\n      };\n      const variable4 = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: 0,\n      };\n      const variable5 = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: '1',\n      };\n      const variable6 = {\n        type: CapiVariableTypes.BOOLEAN,\n        key: 'x',\n        value: '0',\n      };\n      let script = getExpressionStringForValue(variable);\n      expect(script).toBe('true');\n      script = getExpressionStringForValue(variable1);\n      expect(script).toBe('true');\n      script = getExpressionStringForValue(variable2);\n      expect(script).toBe('false');\n      script = getExpressionStringForValue(variable3);\n      expect(script).toBe('true');\n      script = getExpressionStringForValue(variable4);\n      expect(script).toBe('false');\n      script = getExpressionStringForValue(variable5);\n      expect(script).toBe('true');\n      script = getExpressionStringForValue(variable6);\n      expect(script).toBe('false');\n    });\n  });\n});\n"]}