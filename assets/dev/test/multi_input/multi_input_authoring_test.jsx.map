{"version":3,"file":"multi_input_authoring_test.jsx","sourceRoot":"","sources":["../../../test/multi_input/multi_input_authoring_test.tsx"],"names":[],"mappings":"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","sourcesContent":["import '@testing-library/jest-dom';\nimport { fireEvent, render, screen, waitFor } from '@testing-library/react';\nimport { AuthoringElementProvider } from 'components/activities/AuthoringElement';\nimport { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport { MultiInputActions } from 'components/activities/multi_input/actions';\nimport { MultiInputComponent } from 'components/activities/multi_input/MultiInputAuthoring';\nimport {\n  Dropdown,\n  FillInTheBlank,\n  MultiInputSchema,\n} from 'components/activities/multi_input/schema';\nimport { addTargetedFeedbackFillInTheBlank } from 'components/activities/multi_input/sections/AnswerKeyTab';\nimport { defaultModel, multiInputStem } from 'components/activities/multi_input/utils';\nimport {\n  makeChoice,\n  makeHint,\n  makePart,\n  makeTransformation,\n  Transform,\n} from 'components/activities/types';\nimport { Responses } from 'data/activities/model/responses';\nimport { inputRef } from 'data/content/model/elements/factories';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'state/store';\nimport { Operations } from 'utils/pathOperations';\nimport { dispatch } from 'utils/test_utils';\nimport { defaultAuthoringElementProps } from '../utils/activity_mocks';\n\nconst input = inputRef();\nconst choices = [makeChoice('Choice A'), makeChoice('Choice B')];\n\nconst _dropdownModel: MultiInputSchema = {\n  stem: multiInputStem(input),\n  choices,\n  inputs: [\n    {\n      inputType: 'dropdown',\n      id: input.id,\n      partId: DEFAULT_PART_ID,\n      choiceIds: choices.map((c) => c.id),\n    },\n  ],\n  authoring: {\n    parts: [makePart(Responses.forMultipleChoice(choices[0].id), [makeHint('')], DEFAULT_PART_ID)],\n    targeted: [],\n    transformations: [makeTransformation('choices', Transform.shuffle)],\n    previewText: 'Example question with a fill in the blank',\n  },\n};\n\nconst _numericModel: MultiInputSchema = {\n  stem: multiInputStem(input),\n  choices: [],\n  inputs: [{ inputType: 'numeric', id: input.id, partId: DEFAULT_PART_ID }],\n  authoring: {\n    parts: [makePart(Responses.forNumericInput(), [makeHint('')], DEFAULT_PART_ID)],\n    targeted: [],\n    transformations: [makeTransformation('choices', Transform.shuffle)],\n    previewText: 'Example question with a fill in the blank',\n  },\n};\n\ndescribe('multi input question - default (with text input)', () => {\n  const props = defaultAuthoringElementProps<MultiInputSchema>(defaultModel());\n  const { model } = props;\n  const store = configureStore();\n\n  it('has a stem with an input ref', () => {\n    expect(model).toHaveProperty('stem');\n  });\n\n  it('has an input', () => {\n    expect(model.inputs).toHaveLength(1);\n    expect(model.inputs[0]).toHaveProperty('inputType', 'text');\n    expect(model.inputs[0]).toHaveProperty('partId', '1');\n  });\n\n  it('has a part with text input responses', () => {\n    expect(model.authoring.parts).toHaveLength(1);\n    const part = model.authoring.parts[0];\n    expect(part.responses).toHaveLength(2);\n    expect(part.responses[0]).toHaveProperty('score', 1);\n    expect(part.responses[0].rule).toMatch(/contains/);\n    expect(part.responses[1]).toHaveProperty('score', 0);\n    expect(part.responses[1]).toHaveProperty('rule', 'input like {.*}');\n  });\n\n  it('has no choices', () => {\n    expect(model.choices).toHaveLength(0);\n  });\n\n  it('has no targeted responses / mappings', () => {\n    expect(model.authoring.targeted).toHaveLength(0);\n  });\n\n  it('has preview text', () => {\n    expect(model.authoring.previewText).toBeTruthy();\n  });\n\n  it('has one hint', () => {\n    expect(model.authoring.parts[0].hints).toHaveLength(1);\n  });\n\n  it('can add targeted feedback to a text input', async () => {\n    render(\n      <Provider store={store}>\n        <AuthoringElementProvider {...props}>\n          <MultiInputComponent />\n        </AuthoringElementProvider>\n      </Provider>,\n    );\n\n    fireEvent.click(screen.getByText('Answer Key'));\n    await screen.findByText('Add targeted feedback');\n    fireEvent.click(screen.getByText('Add targeted feedback'));\n    const responses = model.authoring.parts[0].responses;\n    expect(responses).toHaveLength(3);\n    expect(responses[1]).toHaveProperty('rule', 'input contains {another answer}');\n    expect(responses[1]).toHaveProperty('score', 0);\n  });\n\n  it('can switch from text to dropdown', () => {\n    // add targeted feedback\n    const input = model.inputs[0] as FillInTheBlank;\n    const withTargeted = dispatch(model, addTargetedFeedbackFillInTheBlank(input));\n\n    const updated = dispatch(withTargeted, MultiInputActions.setInputType(input.id, 'dropdown'));\n\n    // choices\n    expect(updated.choices).toHaveLength(2);\n    const updatedInput = updated.inputs[0] as Dropdown;\n    expect(updatedInput.inputType).toEqual('dropdown');\n    expect(updatedInput.choiceIds).toEqual(updated.choices.map((c) => c.id));\n\n    // responses\n    const responses = updated.authoring.parts[0].responses;\n    expect(responses).toHaveLength(2);\n    expect(responses.map((r) => ({ rule: r.rule, score: r.score }))).toEqual(\n      Responses.forMultipleChoice(updated.choices[0].id).map((r) => ({\n        rule: r.rule,\n        score: r.score,\n      })),\n    );\n  });\n\n  it('can add a new text input with the add input button', async () => {\n    render(\n      <Provider store={store}>\n        <AuthoringElementProvider {...props}>\n          <MultiInputComponent />\n        </AuthoringElementProvider>\n      </Provider>,\n    );\n\n    fireEvent.click(screen.getByText('Add Input'));\n\n    // stem should be updated with new input ref\n    await waitFor(() => {\n      const inputRefs = Operations.apply(\n        model,\n        Operations.find('$..children[?(@.type==\"input_ref\")]'),\n      );\n      return expect(inputRefs).toHaveLength(2);\n    });\n\n    // new part should be added with text input responses\n    expect(model.authoring.parts).toHaveLength(2);\n    expect(\n      model.authoring.parts[1].responses.map((r) => ({ rule: r.rule, score: r.score })),\n    ).toEqual(Responses.forTextInput().map((r) => ({ rule: r.rule, score: r.score })));\n\n    // input should be added as text input\n    expect(model.inputs).toHaveLength(2);\n    expect(model.inputs[1]).toHaveProperty('inputType', 'text');\n  });\n});\n"]}