{"version":3,"file":"activity_mocks.js","sourceRoot":"","sources":["../../../test/utils/activity_mocks.ts"],"names":[],"mappings":"AAEA,OAAO,EAGL,YAAY,EACZ,QAAQ,GAGT,MAAM,6BAA6B,CAAC;AAErC,MAAM,SAAS,GAAc;IAC3B,WAAW,EAAE,MAAM;IACnB,aAAa,EAAE,CAAC;IAChB,aAAa,EAAE,IAAI;IACnB,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,CAAC;IACT,eAAe,EAAE,IAAI;IACrB,YAAY,EAAE,IAAI;CACZ,CAAC;AAET,MAAM,CAAC,MAAM,YAAY,GAAkB;IACzC,WAAW,EAAE,MAAM;IACnB,aAAa,EAAE,CAAC;IAChB,aAAa,EAAE,IAAI;IACnB,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC,SAAS,CAAC;IAClB,eAAe,EAAE,IAAI;IACrB,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,MAAM,cAAc,GAAW;IAC7B,IAAI,EAAE,gBAAgB;IACtB,YAAY,EAAE,GAAG;IACjB,MAAM,EAAE,CAAC;IACT,KAAK,EAAE,CAAC;IACR,QAAQ,EAAE,YAAY,CAAC,kBAAkB,CAAC;CAC3C,CAAC;AAEF,MAAM,kBAAkB,GAAuB;IAC7C,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,CAAC,cAAc,CAAC;CAC1B,CAAC;AAEF,MAAM,mBAAmB,GAAwB;IAC/C,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC;IACtB,YAAY,EAAE,KAAK;CACpB,CAAC;AAEF,MAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACjG,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AACjC,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAClC,MAAM,aAAa,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC/F,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC9B,MAAM,mBAAmB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAEtC,MAAM,CAAC,MAAM,2BAA2B,GAAG;IACzC,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,aAAa;IACb,UAAU;IACV,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,KAAK,EAAE,YAAY;IACnB,IAAI,EAAE,UAA0B;IAChC,MAAM,EAAE,CAAC;CACV,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAI,YAAe,EAA4B,EAAE;IAC3F,MAAM,KAAK,GAAG,YAAY,CAAC;IAC3B,OAAO;QACL,WAAW,EAAE,EAAE;QACf,QAAQ,EAAE,IAAI;QACd,KAAK;QACL,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE;QACzB,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE;QACzB,MAAM,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC;KACrD,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { AuthoringElementProps } from 'components/activities/AuthoringElement';\nimport { EvaluationResponse, RequestHintResponse } from 'components/activities/DeliveryElement';\nimport {\n  Action,\n  ActivityState,\n  makeFeedback,\n  makeHint,\n  DeliveryMode,\n  PartState,\n} from 'components/activities/types';\n\nconst partState: PartState = {\n  attemptGuid: 'guid',\n  attemptNumber: 1,\n  dateEvaluated: null,\n  score: null,\n  outOf: 1,\n  response: null,\n  feedback: 'feedback',\n  hints: [],\n  partId: 1,\n  hasMoreAttempts: true,\n  hasMoreHints: true,\n} as any;\n\nexport const attemptState: ActivityState = {\n  attemptGuid: 'guid',\n  attemptNumber: 1,\n  dateEvaluated: null,\n  score: null,\n  outOf: 1,\n  parts: [partState],\n  hasMoreAttempts: true,\n  hasMoreHints: true,\n};\n\nconst feedbackAction: Action = {\n  type: 'FeedbackAction',\n  attempt_guid: '1',\n  out_of: 1,\n  score: 1,\n  feedback: makeFeedback('correct feedback'),\n};\n\nconst evaluationResponse: EvaluationResponse = {\n  type: 'success',\n  actions: [feedbackAction],\n};\n\nconst requestHintResponse: RequestHintResponse = {\n  type: 'success',\n  hint: makeHint('hint'),\n  hasMoreHints: false,\n};\n\nconst onSubmitActivity = jest.fn().mockImplementation(() => Promise.resolve(evaluationResponse));\nconst onSaveActivity = jest.fn();\nconst onResetActivity = jest.fn();\nconst onRequestHint = jest.fn().mockImplementation(() => Promise.resolve(requestHintResponse));\nconst onSavePart = jest.fn();\nconst onSubmitPart = jest.fn();\nconst onResetPart = jest.fn();\nconst onSubmitEvaluations = jest.fn();\n\nexport const defaultDeliveryElementProps = {\n  onSaveActivity,\n  onSubmitActivity,\n  onResetActivity,\n  onRequestHint,\n  onSavePart,\n  onSubmitPart,\n  onResetPart,\n  onSubmitEvaluations,\n  state: attemptState,\n  mode: 'delivery' as DeliveryMode,\n  userId: 1,\n};\n\nexport const defaultAuthoringElementProps = <T>(initialModel: T): AuthoringElementProps<T> => {\n  const model = initialModel;\n  return {\n    projectSlug: '',\n    editMode: true,\n    model,\n    onPostUndoable: jest.fn(),\n    onRequestMedia: jest.fn(),\n    onEdit: (newModel) => Object.assign(model, newModel),\n  };\n};\n"]}