{"version":3,"file":"short_answer_authoring_test.js","sourceRoot":"","sources":["../../../test/short_answer/short_answer_authoring_test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,uCAAuC,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,gDAAgD,CAAC;AACjF,OAAO,EAAE,kBAAkB,EAAE,MAAM,4CAA4C,CAAC;AAChF,OAAO,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAC;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,wDAAwD,CAAC;AACzF,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAE3D,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,MAAM,KAAK,GAAG,YAAY,EAAE,CAAC;IAE7B,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;QACpB,MAAM,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,GAAG,EAAE;QACxB,MAAM,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,OAAO,GAAG,QAAQ,CACtB,KAAK,EACL,eAAe,CAAC,WAAW,CACzB,YAAY,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACnD,eAAe,CAChB,CACF,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACrF,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QAC7F,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7E,MAAM,CACJ,QAAQ,CAAC,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC1F,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAChC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,EAAE,kBAAkB,CAAC,YAAY,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC,CAAC;QAE3F,OAAO,GAAG,QAAQ,CAChB,OAAO,EACP,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,eAAe,CAAC,CAC/E,CAAC;QACF,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7E,MAAM,CACJ,QAAQ,CAAC,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC1F,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAChC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { eqRule } from '../../src/data/activities/model/rules';\nimport { DEFAULT_PART_ID } from './../../src/components/activities/common/utils';\nimport { ShortAnswerActions } from 'components/activities/short_answer/actions';\nimport { defaultModel } from 'components/activities/short_answer/utils';\nimport { ResponseActions } from 'components/activities/common/responses/responseActions';\nimport { dispatch } from 'utils/test_utils';\nimport { makeResponse } from 'components/activities/types';\nimport { containsRule } from 'data/activities/model/rules';\n\ndescribe('short answer question', () => {\n  const model = defaultModel();\n\n  it('has a stem', () => {\n    expect(model).toHaveProperty('stem');\n  });\n\n  it('has input type', () => {\n    expect(model).toHaveProperty('inputType');\n  });\n\n  it('has at least 3 hints', () => {\n    expect(model.authoring.parts[0].hints.length).toBeGreaterThanOrEqual(3);\n  });\n\n  it('can add and remove a response in text mode', () => {\n    const updated = dispatch(\n      model,\n      ResponseActions.addResponse(\n        makeResponse(containsRule('another answer'), 0, ''),\n        DEFAULT_PART_ID,\n      ),\n    );\n    expect(updated.authoring.parts[0].responses[0].score).toBe(1);\n    expect(updated.authoring.parts[0].responses[1].score).toBe(0);\n    expect(updated.authoring.parts[0].responses[2].score).toBe(0);\n    expect(updated.authoring.parts[0].responses[0].rule).toBe('input contains {answer}');\n    expect(updated.authoring.parts[0].responses[1].rule).toBe('input contains {another answer}');\n    expect(updated.authoring.parts[0].responses[2].rule).toBe('input like {.*}');\n\n    expect(\n      dispatch(updated, ResponseActions.removeResponse(updated.authoring.parts[0].responses[1].id))\n        .authoring.parts[0].responses,\n    ).toHaveLength(2);\n  });\n\n  it('can add and remove a response in numeric mode', () => {\n    let updated = dispatch(model, ShortAnswerActions.setInputType('numeric', DEFAULT_PART_ID));\n\n    updated = dispatch(\n      updated,\n      ResponseActions.addResponse(makeResponse(eqRule('1'), 0, ''), DEFAULT_PART_ID),\n    );\n    expect(updated.authoring.parts[0].responses[0].score).toBe(1);\n    expect(updated.authoring.parts[0].responses[1].score).toBe(0);\n    expect(updated.authoring.parts[0].responses[2].score).toBe(0);\n    expect(updated.authoring.parts[0].responses[0].rule).toBe('input = {1}');\n    expect(updated.authoring.parts[0].responses[1].rule).toBe('input = {1}');\n    expect(updated.authoring.parts[0].responses[2].rule).toBe('input like {.*}');\n\n    expect(\n      dispatch(updated, ResponseActions.removeResponse(updated.authoring.parts[0].responses[1].id))\n        .authoring.parts[0].responses,\n    ).toHaveLength(2);\n  });\n});\n"]}