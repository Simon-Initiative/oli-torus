{"version":3,"file":"rule_editor_test.js","sourceRoot":"","sources":["../../../../test/advanced_authoring/adaptivity/rule_editor_test.ts"],"names":[],"mappings":"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","sourcesContent":["import { JanusConditionProperties } from 'adaptivity/capi';\nimport {\n  deleteConditionById,\n  findConditionById,\n  forEachCondition,\n} from 'apps/authoring/components/AdaptivityEditor/ConditionsBlockEditor';\nimport { mockDefaultRule, mockRuleNestedConditions, mockRuleWithConditions1 } from './rule_mocks';\n\ndescribe('Rule Editor', () => {\n  describe('findConditionById', () => {\n    it('should find the condition by id', () => {\n      const condition = findConditionById('c:1', mockRuleWithConditions1.conditions.all);\n      expect(condition).toBe(mockRuleWithConditions1.conditions.all[0]);\n    });\n\n    it('should return null if condition not found', () => {\n      const condition = findConditionById('c:2', mockRuleWithConditions1.conditions.all);\n      expect(condition).toBe(null);\n    });\n\n    it('should return null if no conditions', () => {\n      const condition = findConditionById('c:1', mockDefaultRule.conditions.all);\n      expect(condition).toBe(null);\n    });\n\n    it('should find the id in deeply nested structure', () => {\n      const condition = findConditionById('c:5', mockRuleNestedConditions.conditions.all);\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      expect(condition).toBe(mockRuleNestedConditions.conditions.all![1].all![2].any![1]);\n    });\n  });\n\n  describe('forEachCondition', () => {\n    it('should return a modified copy', () => {\n      const ogConditions = mockRuleNestedConditions.conditions.all;\n      const editedConditions = forEachCondition(ogConditions, (condition) => {\n        if (condition.id === 'c:5') {\n          (condition as JanusConditionProperties).value = 11;\n        }\n      });\n      expect(editedConditions).not.toBe(ogConditions);\n      expect(editedConditions[1].all[2].any[1].value).toBe(11);\n    });\n  });\n\n  describe('deleteConditionById', () => {\n    it('should delete a condition', () => {\n      const conditionToDelete = findConditionById('c:5', mockRuleNestedConditions.conditions.all);\n      const conditions = mockRuleNestedConditions.conditions.all;\n      const newConditions = deleteConditionById('c:5', conditions);\n      expect(conditionToDelete).not.toBe(null);\n      expect(findConditionById('c:5', newConditions)).toBe(null);\n    });\n  });\n});\n"]}