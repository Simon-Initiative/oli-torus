{"version":3,"file":"hints_test.js","sourceRoot":"","sources":["../../../test/activities/hints_test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAE,QAAQ,EAAmB,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAE5C,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,MAAM,KAAK,GAAG;QACZ,SAAS,EAAE;YACT,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,eAAe;oBACnB,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;oBACjD,SAAS,EAAE,EAAE;oBACb,eAAe,EAAE,EAAqB;iBACvC;aACF;SACF;KACF,CAAC;IAEF,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,MAAM,CACJ,KAAK,CAAC,MAAM,CACV,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,EACtE,eAAe,CAChB,CAAC,MAAM,CACT,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;QACzB,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC;QACvD,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CACJ,KAAK,CAAC,MAAM,CACV,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC,EAC/D,eAAe,CAChB,CAAC,CAAC,CAAC,CACL,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CACJ,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,eAAe,CAAC,CAC9E,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport { makeHint, ScoringStrategy } from 'components/activities/types';\nimport { Hints } from 'data/activities/model/hints';\nimport { dispatch } from 'utils/test_utils';\n\ndescribe('authoring hints', () => {\n  const model = {\n    authoring: {\n      parts: [\n        {\n          id: DEFAULT_PART_ID,\n          hints: [makeHint(''), makeHint(''), makeHint('')],\n          responses: [],\n          scoringStrategy: {} as ScoringStrategy,\n        },\n      ],\n    },\n  };\n\n  it('can add a cognitive hint before the end of the array', () => {\n    expect(\n      Hints.byPart(\n        dispatch(model, Hints.addCognitiveHint(makeHint(''), DEFAULT_PART_ID)),\n        DEFAULT_PART_ID,\n      ).length,\n    ).toBeGreaterThan(Hints.byPart(model, DEFAULT_PART_ID).length);\n  });\n\n  it('can edit a hint', () => {\n    const newHintContent = makeHint('new content').content;\n    const firstHint = Hints.byPart(model, DEFAULT_PART_ID)[0];\n    expect(\n      Hints.byPart(\n        dispatch(model, Hints.setContent(firstHint.id, newHintContent)),\n        DEFAULT_PART_ID,\n      )[0],\n    ).toHaveProperty('content', newHintContent);\n  });\n\n  it('can remove a hint', () => {\n    const firstHint = Hints.byPart(model, DEFAULT_PART_ID)[0];\n    expect(\n      Hints.byPart(dispatch(model, Hints.removeOne(firstHint.id)), DEFAULT_PART_ID),\n    ).toHaveLength(2);\n  });\n});\n"]}