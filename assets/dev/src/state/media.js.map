{"version":3,"file":"media.js","sourceRoot":"","sources":["../../../src/state/media.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,gBAAgB,EAEhB,WAAW,EAEX,kBAAkB,EAElB,aAAa,EAEb,eAAe,GAEhB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,mBAAmB,EAAE,MAAM,sCAAsC,CAAC;AAW3E,MAAM,UAAU,cAAc,CAAC,IAAS;IACtC,OAAO,IAAI,mBAAmB,EAAE,CAAC;AACnC,CAAC;AAED,MAAM,YAAY,GAAG,IAAI,mBAAmB,EAAE,CAAC;AAE/C,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,QAAoB,YAAY,EAAE,MAAmB,EAAc,EAAE;IACzF,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,gBAAgB,CAAC,CAAC;YACrB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC;YAEzB,OAAO,KAAK,CAAC,IAAI,CAAC;gBAChB,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;SACJ;QACD,KAAK,WAAW,CAAC,CAAC;YAChB,OAAO,KAAK,CAAC,UAAU,EAAE,CAAC;SAC3B;QACD,KAAK,kBAAkB,CAAC,CAAC;YACvB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;YACrC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,IAAI,CAAC;gBACxC,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;SACJ;QACD,KAAK,aAAa,CAAC,CAAC;YAClB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;YAExB,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACjC;QACD,KAAK,eAAe,CAAC,CAAC;YACpB,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;YAC9B,OAAO,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;SACzC;QACD;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC","sourcesContent":["import {\n  FETCH_MEDIA_PAGE,\n  FetchMediaPageAction,\n  RESET_MEDIA,\n  ResetMediaAction,\n  RECEIVE_MEDIA_PAGE,\n  ReceiveMediaPageAction,\n  SIDELOAD_DATA,\n  SideloadDataAction,\n  LOAD_MEDIA_REFS,\n  LoadMediaReferencesAction,\n} from 'actions/media';\n\nimport { OrderedMediaLibrary } from 'components/media/OrderedMediaLibrary';\n\nexport type ActionTypes =\n  | FetchMediaPageAction\n  | ResetMediaAction\n  | ReceiveMediaPageAction\n  | SideloadDataAction\n  | LoadMediaReferencesAction;\n\nexport type MediaState = OrderedMediaLibrary;\n\nexport function initMediaState(json: any) {\n  return new OrderedMediaLibrary();\n}\n\nconst initialState = new OrderedMediaLibrary();\n\nexport const media = (state: MediaState = initialState, action: ActionTypes): MediaState => {\n  switch (action.type) {\n    case FETCH_MEDIA_PAGE: {\n      const { reqId } = action;\n\n      return state.with({\n        isLoading: true,\n        lastReqId: reqId,\n      });\n    }\n    case RESET_MEDIA: {\n      return state.clearItems();\n    }\n    case RECEIVE_MEDIA_PAGE: {\n      const { items, totalItems } = action;\n      return state.load(items, totalItems).with({\n        isLoading: false,\n      });\n    }\n    case SIDELOAD_DATA: {\n      const { data } = action;\n\n      return state.sideloadData(data);\n    }\n    case LOAD_MEDIA_REFS: {\n      const { references } = action;\n      return state.loadReferences(references);\n    }\n    default:\n      return state;\n  }\n};\n"]}