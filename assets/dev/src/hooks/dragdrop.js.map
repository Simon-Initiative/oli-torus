{"version":3,"file":"dragdrop.js","sourceRoot":"","sources":["../../../src/hooks/dragdrop.ts"],"names":[],"mappings":"AAAA,uDAAuD;AAEvD,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,OAAO;QACL,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,EAAE;YAC/C,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,EAAE;YAC/C,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAM,EAAE,EAAE;YAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEpC,kBAAkB;YAClB,MAAM,WAAW,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;YAC1D,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAM,EAAE,EAAE;YAC9C,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC,cAAc,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,OAAO;QACL,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,EAAE;YAC/C,MAAM,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC;YAC1B,EAAE,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAClE,EAAE,CAAC,aAAa,GAAG,MAAM,CAAC;YAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAM,EAAE,EAAE;YAC7C,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC","sourcesContent":["// Phoenix LiveView hooks that implements drag and drop\n\nexport const DropTarget = {\n  mounted() {\n    this.el.addEventListener('dragenter', (e: any) => {\n      this.el.classList.add('hovered');\n    });\n    this.el.addEventListener('dragleave', (e: any) => {\n      this.el.classList.remove('hovered');\n    });\n    this.el.addEventListener('drop', (e: any) => {\n      e.preventDefault();\n      this.el.classList.remove('hovered');\n\n      // handle the drop\n      const sourceIndex = e.dataTransfer.getData('text/plain');\n      const dropIndex = this.el.getAttribute('data-drop-index');\n      this.pushEvent('reorder', { sourceIndex, dropIndex });\n    });\n    this.el.addEventListener('dragover', (e: any) => {\n      e.stopPropagation();\n      e.preventDefault();\n    });\n  },\n};\n\nexport const DragSource = {\n  mounted() {\n    this.el.addEventListener('dragstart', (e: any) => {\n      const dt = e.dataTransfer;\n      dt.setData('text/plain', this.el.getAttribute('data-drag-index'));\n      dt.effectAllowed = 'move';\n\n      const dragSlug = this.el.getAttribute('data-drag-slug');\n      this.pushEvent('dragstart', dragSlug);\n    });\n\n    this.el.addEventListener('dragend', (e: any) => {\n      e.stopPropagation();\n      e.preventDefault();\n      this.pushEvent('dragend');\n    });\n  },\n};\n"]}