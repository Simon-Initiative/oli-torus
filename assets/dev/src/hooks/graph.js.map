{"version":3,"file":"graph.js","sourceRoot":"","sources":["../../../src/hooks/graph.ts"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,4DAA4D;AAE5D,IAAI,KAAK,GAAQ,IAAI,CAAC;AACtB,IAAI,KAAK,GAAQ,IAAI,CAAC;AACtB,IAAI,MAAM,GAAQ,KAAK,CAAC;AACxB,IAAI,QAAQ,GAAQ,IAAI,CAAC;AACzB,IAAI,QAAQ,GAAQ,IAAI,CAAC;AAEzB,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,OAAO;QACL,IAAI,QAAQ,IAAI,IAAI,EAAE;YACnB,QAAgB;iBACd,cAAc,CAAC,QAAQ,CAAC;iBACxB,YAAY,CAAC,WAAW,EAAE,YAAY,GAAG,QAAQ,GAAG,GAAG,GAAG,QAAQ,GAAG,cAAc,CAAC,CAAC;SACzF;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,EAAE;YAC/C,IAAI,MAAM,EAAE;gBACV,IAAI,KAAK,IAAI,IAAI,EAAE;oBACjB,MAAM,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;oBAChC,MAAM,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;oBAChC,QAAQ,IAAI,KAAK,CAAC;oBAClB,QAAQ,IAAI,KAAK,CAAC;oBAEjB,QAAgB;yBACd,cAAc,CAAC,QAAQ,CAAC;yBACxB,YAAY,CAAC,WAAW,EAAE,YAAY,GAAG,QAAQ,GAAG,GAAG,GAAG,QAAQ,GAAG,cAAc,CAAC,CAAC;iBACzF;gBACD,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;gBAClB,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,EAAE;YAC/C,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,mBAAmB,CAAC;YACpC,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAM,EAAE,EAAE;YAC7C,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,eAAe,CAAC;YAChC,MAAM,GAAG,KAAK,CAAC;YACf,KAAK,GAAG,IAAI,CAAC;YACb,KAAK,GAAG,IAAI,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC","sourcesContent":["// A Phoenix LiveView hook that implements mouse driven panning on the\n// revision graph visualization in the revision history view\n\nlet lastX: any = null;\nlet lastY: any = null;\nlet moving: any = false;\nlet currentX: any = null;\nlet currentY: any = null;\n\nexport const GraphNavigation = {\n  updated() {\n    if (currentX != null) {\n      (document as any)\n        .getElementById('panner')\n        .setAttribute('transform', 'translate(' + currentX + ',' + currentY + ') scale(1.0)');\n    }\n  },\n  mounted() {\n    this.el.addEventListener('mousemove', (e: any) => {\n      if (moving) {\n        if (lastX != null) {\n          const diffX = lastX - e.clientX;\n          const diffY = lastY - e.clientY;\n          currentX -= diffX;\n          currentY -= diffY;\n\n          (document as any)\n            .getElementById('panner')\n            .setAttribute('transform', 'translate(' + currentX + ',' + currentY + ') scale(1.0)');\n        }\n        lastX = e.clientX;\n        lastY = e.clientY;\n      }\n    });\n    this.el.addEventListener('mousedown', (e: any) => {\n      this.el.style = 'cursor: grabbing;';\n      moving = true;\n    });\n    this.el.addEventListener('mouseup', (e: any) => {\n      this.el.style = 'cursor: grab;';\n      moving = false;\n      lastX = null;\n      lastY = null;\n    });\n  },\n};\n"]}