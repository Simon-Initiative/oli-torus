{"version":3,"file":"createNew.js","sourceRoot":"","sources":["../../../../../../../src/apps/authoring/store/activities/actions/createNew.ts"],"names":[],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { create, Created } from 'data/persistence/activity';\nimport { ActivitiesSlice } from '../../../../delivery/store/features/activities/slice';\nimport { selectState as selectPageState } from '../../../../authoring/store/page/slice';\nimport { selectActivityTypes, selectProjectSlug, selectReadOnly } from '../../app/slice';\nimport { createSimpleText } from '../templates/simpleText';\nimport { createCorrectRule, createIncorrectRule } from './rules';\nimport { RootState } from 'apps/delivery/store/rootReducer';\n\nexport const createNew = createAsyncThunk(\n  `${ActivitiesSlice}/createNew`,\n  async (payload: any = {}, { dispatch, getState }) => {\n    const rootState = getState() as any;\n    const projectSlug = selectProjectSlug(rootState);\n    // how to choose activity type? for now hard code to oli_adaptive?\n    const activityTypes = selectActivityTypes(rootState);\n    const currentLesson = selectPageState(rootState);\n\n    const isReadOnlyMode = selectReadOnly(rootState);\n\n    const {\n      activityTypeSlug = 'oli_adaptive',\n      title = 'New Activity',\n      dimensions = {\n        width: currentLesson.custom.defaultScreenWidth,\n        height: currentLesson.custom.defaultScreenHeight,\n      },\n      facts = [],\n    } = payload;\n\n    // should populate with a template\n    // TODO: type as creation model\n    const activity: any = {\n      type: 'activity',\n      typeSlug: activityTypeSlug,\n      title,\n      objectives: { attached: [] }, // should populate with some from page?\n      model: {\n        authoring: {\n          parts: [],\n          rules: [],\n        },\n        custom: {\n          applyBtnFlag: false,\n          applyBtnLabel: '',\n          checkButtonLabel: 'Next',\n          combineFeedback: false,\n          customCssClass: '',\n          facts,\n          lockCanvasSize: false,\n          mainBtnLabel: '',\n          maxAttempt: 0,\n          maxScore: 0,\n          negativeScoreAllowed: false,\n          palette: {\n            backgroundColor: 'rgba(255,255,255,0)',\n            borderColor: 'rgba(255,255,255,0)',\n            borderRadius: '',\n            borderStyle: 'solid',\n            borderWidth: '1px',\n          },\n          panelHeaderColor: 0,\n          panelTitleColor: 0,\n          showCheckBtn: true,\n          trapStateScoreScheme: false,\n          width: dimensions.width,\n          height: dimensions.height,\n          x: 0,\n          y: 0,\n          z: 0,\n        },\n        partsLayout: [await createSimpleText('Hello World')],\n      },\n    };\n\n    activity.model.authoring.parts = activity.model.partsLayout.map((part: { id: string }) => ({\n      id: part.id,\n    }));\n\n    const { payload: defaultCorrect } = await dispatch(createCorrectRule({ isDefault: true }));\n\n    const { payload: defaultIncorrect } = await dispatch(createIncorrectRule({ isDefault: true }));\n\n    activity.model.authoring.rules.push(defaultCorrect, defaultIncorrect);\n\n    let createResults: any = {\n      resourceId: `readonly_${Date.now()}`,\n      revisionSlug: `readonly_${Date.now()}`,\n    };\n\n    if (!isReadOnlyMode) {\n      createResults = await create(\n        projectSlug,\n        activityTypeSlug,\n        activity.model,\n        activity.objectives.attached,\n      );\n    }\n\n    // TODO: too many ways this property is defined!\n    activity.activity_id = (createResults as Created).resourceId;\n    activity.activityId = activity.activity_id;\n    activity.resourceId = activity.activity_id;\n    activity.activitySlug = (createResults as Created).revisionSlug;\n\n    activity.activityType = activityTypes.find((type: any) => type.slug === activityTypeSlug);\n\n    return activity;\n  },\n);\n"]}