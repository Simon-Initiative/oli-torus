{"version":3,"file":"addPart.js","sourceRoot":"","sources":["../../../../../../../src/apps/authoring/store/parts/actions/addPart.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AACnF,OAAO,EACL,0BAA0B,EAC1B,gBAAgB,EAChB,YAAY,GACb,MAAM,sDAAsD,CAAC;AAC9D,OAAO,EAAE,cAAc,EAAE,MAAM,oDAAoD,CAAC;AACpF,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,uCAAuC,CAAC;AACzE,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AAEtC,MAAM,CAAC,MAAM,OAAO,GAAG,gBAAgB,CACrC,GAAG,UAAU,UAAU,EACvB,CAAO,OAAiD,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE;;IAClF,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;IAC5C,MAAM,SAAS,GAAG,QAAQ,EAAS,CAAC,CAAC,6FAA6F;IAClI,MAAM,QAAQ,GAAG,kBAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAC3D,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,IAAI,KAAK,CAAC,aAAa,UAAU,aAAa,CAAC,CAAC;KACvD;IACD,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IACtC,MAAM,QAAQ,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;IAC3C,MAAM,aAAa,GAAG,0BAA0B,CAAC,QAAQ,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;IACrF,MAAM,cAAc,GAAG;QACrB,EAAE,EAAE,WAAW,CAAC,EAAE;QAClB,IAAI,EAAE,WAAW,CAAC,IAAI;QACtB,KAAK,EAAE,CAAA,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,0CAAE,UAAU,KAAI,EAAE;QAC9C,SAAS,EAAE,KAAK;QAChB,kBAAkB;KACnB,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnD,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEpD,mDAAmD;IACnD,MAAM,gBAAgB,GAAU,EAAE,CAAC;IACnC,MAAM,iBAAiB,GAAG,YAAY,CAAC,QAAQ,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,0CAAE,UAAU,CAAC,CAAC;IACpF,IAAI,iBAAiB,CAAC,MAAM,EAAE;QAC5B,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;QAC/D,kBAAkB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACnC,MAAM,aAAa,GAAG,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,UAAoB,CAAC,CAAC;YAChF,MAAM,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,iCAAM,cAAc,KAAE,SAAS,EAAE,IAAI,IAAG,CAAC;YACxE,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;KACJ;IAED,MAAM,kBAAkB,GAAG,CAAC,aAAa,EAAE,GAAG,gBAAgB,CAAC,CAAC;IAEhE,sFAAsF;IACtF,QAAQ,CAAC,gBAAgB,CAAC,EAAE,UAAU,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;AACjE,CAAC,CAAA,CACF,CAAC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { selectActivityById } from 'apps/delivery/store/features/activities/slice';\nimport {\n  findInSequenceByResourceId,\n  flattenHierarchy,\n  getHierarchy,\n} from 'apps/delivery/store/features/groups/actions/sequence';\nimport { selectSequence } from 'apps/delivery/store/features/groups/selectors/deck';\nimport { clone } from 'utils/common';\nimport { bulkSaveActivity } from '../../activities/actions/saveActivity';\nimport { PartsSlice } from '../slice';\n\nexport const addPart = createAsyncThunk(\n  `${PartsSlice}/addPart`,\n  async (payload: { activityId: number; newPartData: any }, { getState, dispatch }) => {\n    const { activityId, newPartData } = payload;\n    const rootState = getState() as any; // any because Activity slice is shared with delivery and things got funky with typescript...\n    const activity = selectActivityById(rootState, activityId);\n    if (!activity) {\n      throw new Error(`Activity: ${activityId} not found!`);\n    }\n    const activityClone = clone(activity);\n    const sequence = selectSequence(rootState);\n    const sequenceEntry = findInSequenceByResourceId(sequence, activityClone.resourceId);\n    const partIdentifier = {\n      id: newPartData.id,\n      type: newPartData.type,\n      owner: sequenceEntry?.custom?.sequenceId || '',\n      inherited: false,\n      // objectives: [],\n    };\n    activityClone.authoring.parts.push(partIdentifier);\n    activityClone.content.partsLayout.push(newPartData);\n\n    // need to add partIdentifier any sequence children\n    const childrenToUpdate: any[] = [];\n    const activityHierarchy = getHierarchy(sequence, sequenceEntry?.custom?.sequenceId);\n    if (activityHierarchy.length) {\n      const flattenedHierarchy = flattenHierarchy(activityHierarchy);\n      flattenedHierarchy.forEach((child) => {\n        const childActivity = selectActivityById(rootState, child.resourceId as number);\n        const childClone = clone(childActivity);\n        childClone.authoring.parts.push({ ...partIdentifier, inherited: true });\n        childrenToUpdate.push(childClone);\n      });\n    }\n\n    const activitiesToUpdate = [activityClone, ...childrenToUpdate];\n\n    /* console.log('adding new part', { newPartData, activityClone, currentSequence }); */\n    dispatch(bulkSaveActivity({ activities: activitiesToUpdate }));\n  },\n);\n"]}