{"version":3,"file":"updatePart.js","sourceRoot":"","sources":["../../../../../../../src/apps/authoring/store/parts/actions/updatePart.ts"],"names":[],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { IActivity, selectActivityById } from 'apps/delivery/store/features/activities/slice';\nimport {\n  findInSequenceByResourceId,\n  flattenHierarchy,\n  getHierarchy,\n} from 'apps/delivery/store/features/groups/actions/sequence';\nimport { selectSequence } from 'apps/delivery/store/features/groups/selectors/deck';\nimport merge from 'lodash/merge';\nimport { clone } from 'utils/common';\nimport { bulkSaveActivity, saveActivity } from '../../activities/actions/saveActivity';\nimport { PartsSlice } from '../slice';\n\nexport const updatePart = createAsyncThunk(\n  `${PartsSlice}/updatePart`,\n  async (payload: { activityId: string; partId: string; changes: any }, { getState, dispatch }) => {\n    const rootState = getState() as any; // any because Activity slice is shared with delivery and things got funky with typescript...\n    const activity = selectActivityById(rootState, payload.activityId);\n    if (!activity) {\n      throw new Error(`Activity: ${payload.activityId} not found!`);\n    }\n    const activityClone = clone(activity);\n    const partDef = activityClone.content.partsLayout.find(\n      (part: any) => part.id === payload.partId,\n    );\n    if (!partDef) {\n      throw new Error(`Part: ${payload.partId} not found in Activity: ${payload.activityId}`);\n    }\n\n    if (payload.changes.id) {\n      // need to also update the authoring parts list\n      const authorPart = activityClone.authoring.parts.find(\n        (part: any) => part.id === payload.partId && !part.inherited,\n      );\n      const sequence = selectSequence(rootState);\n      const sequenceEntry = findInSequenceByResourceId(sequence, activityClone.id);\n      const activitySequenceId = sequenceEntry?.custom.sequenceId;\n      if (!authorPart) {\n        // this shouldn't happen, but maybe it was missing?? add it\n        activityClone.authoring.parts.push({\n          id: payload.changes.id,\n          inherited: false,\n          type: partDef.type,\n          owner: activitySequenceId,\n        });\n      } else {\n        authorPart.id = payload.changes.id;\n      }\n\n      // if this item has any children in the sequence, update them too\n      if (sequenceEntry) {\n        const hierarchy = getHierarchy(sequence, activitySequenceId);\n        const allInvolved = flattenHierarchy(hierarchy);\n        const activitiesToUpdate: IActivity[] = [];\n        allInvolved.forEach((item: any) => {\n          const activity = selectActivityById(rootState, item.resourceId);\n          if (activity) {\n            const cloned = clone(activity);\n            const part = cloned.authoring.parts.find(\n              (part: any) => part.id === payload.partId && part.owner === activitySequenceId,\n            );\n            if (part) {\n              part.id = payload.changes.id;\n              activitiesToUpdate.push(cloned);\n            }\n          }\n        });\n        if (activitiesToUpdate.length) {\n          await dispatch(bulkSaveActivity({ activities: activitiesToUpdate }));\n        }\n      }\n    }\n\n    // merge so that a partial of {custom: {x: 1, y: 1}} will not overwrite the entire custom object\n    // TODO: payload.changes is Partial<Part>\n    merge(partDef, payload.changes);\n\n    await dispatch(saveActivity({ activity: activityClone }));\n  },\n);\n"]}