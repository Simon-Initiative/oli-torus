{"version":3,"file":"updateActivityPartInheritance.js","sourceRoot":"","sources":["../../../../../../../../../src/apps/authoring/store/groups/layouts/deck/actions/updateActivityPartInheritance.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,sDAAsD,CAAC;AACxF,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,4DAA4D,CAAC;AAChG,OAAO,EAAE,kBAAkB,EAAE,MAAM,mEAAmE,CAAC;AACvG,OAAO,EAEL,WAAW,GACZ,MAAM,wDAAwD,CAAC;AAEhE,MAAM,CAAC,MAAM,6BAA6B,GAAG,gBAAgB,CAC3D,GAAG,WAAW,gCAAgC,EAC9C,CAAO,IAAqB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE;IACtD,MAAM,SAAS,GAAG,QAAQ,EAAS,CAAC;IAEpC,MAAM,kBAAkB,GAAU,EAAE,CAAC;IACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;QACnC,MAAM,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAE3E,mDAAmD;QACnD,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,OAAY,EAAE,aAAa,EAAE,EAAE;;YACnE,2BAA2B;YAC3B,oEAAoE;YACpE,MAAM,QAAQ,GAAG,kBAAkB,CAAC,SAAS,EAAE,aAAa,CAAC,UAAW,CAAC,CAAC;YAC1E,IAAI,CAAC,QAAQ,EAAE;gBACb,0BAA0B;gBAC1B,OAAO;aACR;YACD,sDAAsD;YACtD,MAAM,aAAa,GAAG,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,OAAO,0CAAE,WAAW,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrE,oDAAoD;gBACpD,MAAM,cAAc,GAAG;oBACrB,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,SAAS,EAAE,QAAQ,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU;oBACnD,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,UAAU;iBACvC,CAAC;gBAEF,OAAO,cAAc,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,MAAM,MAAM,GAAG,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,CAAC;YAEtD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,uEAAuE;QACvE,kFAAkF;QAClF,gCAAgC;QAChC,MAAM,aAAa,GAAG,kBAAkB,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,aAAa,CAAC,EAAE;YAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;YACxD,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,aAAa,CAAC;YACtC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;IACH,CAAC,CAAC,CAAC;IACH,IAAI,kBAAkB,CAAC,MAAM,EAAE;QAC7B,MAAM,QAAQ,CAAC,gBAAgB,CAAC,EAAE,UAAU,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC;KACtE;AACH,CAAC,CAAA,CACF,CAAC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { bulkSaveActivity } from 'apps/authoring/store/activities/actions/saveActivity';\nimport { isEqual } from 'lodash';\nimport { selectActivityById } from '../../../../../../delivery/store/features/activities/slice';\nimport { getSequenceLineage } from '../../../../../../delivery/store/features/groups/actions/sequence';\nimport {\n  DeckLayoutGroup,\n  GroupsSlice,\n} from '../../../../../../delivery/store/features/groups/slice';\n\nexport const updateActivityPartInheritance = createAsyncThunk(\n  `${GroupsSlice}/updateActivityPartInheritance`,\n  async (deck: DeckLayoutGroup, { dispatch, getState }) => {\n    const rootState = getState() as any;\n\n    const activitiesToUpdate: any[] = [];\n    deck.children.forEach((child: any) => {\n      const lineage = getSequenceLineage(deck.children, child.custom.sequenceId);\n\n      /* console.log('LINEAGE: ', { lineage, child }); */\n      const combinedParts = lineage.reduce((collect: any, sequenceEntry) => {\n        // load the activity record\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const activity = selectActivityById(rootState, sequenceEntry.resourceId!);\n        if (!activity) {\n          // this is really an error\n          return;\n        }\n        /* console.log('ACTIVITY\" TO MAP: ', { activity }); */\n        const activityParts = activity?.content?.partsLayout.map((part: any) => {\n          // TODO: response schema? & default response values?\n          const partDefinition = {\n            id: part.id,\n            type: part.type,\n            inherited: activity.resourceId !== child.resourceId,\n            owner: sequenceEntry.custom.sequenceId,\n          };\n\n          return partDefinition;\n        });\n        const merged = [...collect, ...(activityParts || [])];\n\n        return merged;\n      }, []);\n\n      /* console.log(`COMBINED ${child.activitySlug}`, { combinedParts }); */\n      // since we are not updating the partsLayout but rather the parts, it should be OK\n      // to update each activity *now*\n      const childActivity = selectActivityById(rootState, child.resourceId);\n      if (!childActivity) {\n        return;\n      }\n\n      if (!isEqual(childActivity.authoring.parts, combinedParts)) {\n        const clone = JSON.parse(JSON.stringify(childActivity));\n        clone.authoring.parts = combinedParts;\n        activitiesToUpdate.push(clone);\n      }\n    });\n    if (activitiesToUpdate.length) {\n      await dispatch(bulkSaveActivity({ activities: activitiesToUpdate }));\n    }\n  },\n);\n"]}