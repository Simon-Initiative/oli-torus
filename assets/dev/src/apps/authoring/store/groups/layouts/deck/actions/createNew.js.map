{"version":3,"file":"createNew.js","sourceRoot":"","sources":["../../../../../../../../../src/apps/authoring/store/groups/layouts/deck/actions/createNew.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAEL,WAAW,EACX,UAAU,EACV,WAAW,GACZ,MAAM,wDAAwD,CAAC;AAEhE,MAAM,CAAC,MAAM,SAAS,GAAG,gBAAgB,CACvC,GAAG,WAAW,yBAAyB,EACvC,CAAO,OAAY,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC7C,kDAAkD;IAClD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;IAExC,gBAAgB;IAChB,MAAM,KAAK,GAAoB;QAC7B,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE;QACd,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,UAAU,CAAC,IAAI;QACvB,QAAQ;KACT,CAAC;IAEF,MAAM,QAAQ,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAEvC,OAAO,KAAK,CAAC;AACf,CAAC,CAAA,CACF,CAAC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport {\n  DeckLayoutGroup,\n  GroupsSlice,\n  LayoutType,\n  upsertGroup,\n} from '../../../../../../delivery/store/features/groups/slice';\n\nexport const createNew = createAsyncThunk(\n  `${GroupsSlice}/layouts/deck/createNew`,\n  async (payload: any, { dispatch, getState }) => {\n    // children should be SequenceEntry (TODO: typing)\n    const children = payload.children || [];\n\n    // update groups\n    const group: DeckLayoutGroup = {\n      id: Date.now(),\n      type: 'group',\n      layout: LayoutType.DECK,\n      children,\n    };\n\n    await dispatch(upsertGroup({ group }));\n\n    return group;\n  },\n);\n"]}