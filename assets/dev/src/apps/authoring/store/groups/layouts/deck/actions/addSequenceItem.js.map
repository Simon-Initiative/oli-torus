{"version":3,"file":"addSequenceItem.js","sourceRoot":"","sources":["../../../../../../../../../src/apps/authoring/store/groups/layouts/deck/actions/addSequenceItem.ts"],"names":[],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { clone } from 'utils/common';\nimport {\n  findInHierarchy,\n  flattenHierarchy,\n  getHierarchy,\n  SequenceEntry,\n  SequenceEntryChild,\n} from '../../../../../../delivery/store/features/groups/actions/sequence';\nimport { GroupsSlice, upsertGroup } from '../../../../../../delivery/store/features/groups/slice';\n\nexport const addSequenceItem = createAsyncThunk(\n  `${GroupsSlice}/addSequenceItem`,\n  async (\n    payload: {\n      sequence?: SequenceEntry<SequenceEntryChild>[];\n      group?: any;\n      item?: any;\n      parentId?: number | string;\n      siblingId?: number | string;\n    },\n    { dispatch },\n  ) => {\n    const {\n      sequence = [],\n      group = {},\n      item = {},\n      parentId = undefined,\n      siblingId = undefined,\n    } = payload;\n    let sequenceItems = [...sequence];\n\n    if (parentId) {\n      const parentItem = sequenceItems.find((i) => i.activitySlug === parentId);\n      if (parentItem) {\n        parentItem.custom = parentItem.custom || {};\n        const parentIndex = sequenceItems.indexOf(parentItem);\n        // it should already be set?\n        item.custom.layerRef = parentItem.activitySlug;\n        // need to add it *after* any other children\n        // in order to do that, need to stick it in heirarchy order\n        const hierarchy = getHierarchy(sequenceItems);\n        const parentInHierarchy = findInHierarchy(hierarchy, parentId);\n        if (!parentInHierarchy) {\n          console.warn('Hierarchy', { hierarchy });\n          throw new Error(`Couldn't find ${parentId} in heirarchy, shouldn't be possible.`);\n        }\n        if (siblingId) {\n          const siblingEntryIndex = parentInHierarchy.children.findIndex(\n            (entry) => entry.activitySlug === siblingId,\n          );\n          if (siblingEntryIndex < 0) {\n            console.warn(`couldn't find sibling ${siblingId}, shouldn't be possible`);\n            // just push at the end then\n            parentInHierarchy.children.push(item);\n          } else {\n            parentInHierarchy.children.splice(siblingEntryIndex + 1, 0, item);\n          }\n        } else {\n          parentInHierarchy.children.push(item);\n        }\n        // then once done need to flatten it out again\n        sequenceItems = flattenHierarchy(hierarchy);\n      }\n    } else {\n      if (siblingId) {\n        const siblingEntryIndex = sequenceItems.findIndex(\n          (entry) => entry.activitySlug === siblingId,\n        );\n        if (siblingEntryIndex < 0) {\n          console.warn(`couldn't find sibling ${siblingId}, shouldn't be possible`);\n          // just push at the end then\n          sequenceItems.push(item);\n        } else {\n          sequenceItems.splice(siblingEntryIndex + 1, 0, item);\n        }\n      } else {\n        sequenceItems.push(item);\n      }\n    }\n    const newGroup = clone(group);\n    newGroup.children = sequenceItems;\n    dispatch(upsertGroup({ group: newGroup }));\n    // TODO: save it to a DB ?\n    return newGroup;\n  },\n);\n"]}