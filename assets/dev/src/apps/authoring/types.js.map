{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/apps/authoring/types.ts"],"names":[],"mappings":"","sourcesContent":["import { ResourceId } from 'data/types';\n\nexport interface PageContent {\n  [key: string]: any;\n  advancedAuthoring?: boolean;\n  advancedDelivery?: boolean;\n  displayApplicationChrome?: boolean;\n  additionalStylesheets?: string[];\n  customCss?: string;\n  custom?: any;\n  model: any[];\n}\n\nexport interface PageContext {\n  graded: boolean;\n  authorEmail: string;\n  objectives: any;\n  title: string;\n  content: PageContent;\n  allObjectives?: any[];\n  editorMap?: any;\n  projectSlug?: string;\n  resourceSlug?: string;\n  resourceId?: ResourceId;\n  activities?: any;\n}\n\nexport type ActionType = 'navigation' | 'mutateState' | 'feedback';\nexport type ActionParams = NavigationActionParams | MutateStateActionParams | FeedbackActionParams;\nexport interface AdaptiveRuleAction {\n  type: ActionType;\n  params: ActionParams;\n}\n\nexport interface NavigationActionParams {\n  target: string;\n}\n\nexport interface MutateStateActionParams {\n  target: string;\n  targetType: number; // CapiVariableTypes\n  operator: string;\n  value: any;\n}\n\nexport interface FeedbackActionParams {\n  feedback: any;\n}\n\nexport type NavigationAction = {\n  type: 'navigation';\n  params: NavigationActionParams;\n};\n\nexport type MutateStateAction = {\n  type: 'mutateState';\n  params: MutateStateActionParams;\n};\n\nexport type FeedbackAction = {\n  type: 'feedback';\n  params: FeedbackActionParams;\n};\n"]}