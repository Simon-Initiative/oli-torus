{"version":3,"file":"DeleteConfirmationModal.jsx","sourceRoot":"","sources":["../../../../../../src/apps/authoring/components/Modal/DeleteConfirmationModal.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACjC,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AAUxC,MAAM,aAAa,GAAiC,CAAC,KAAK,EAAE,EAAE;IAC5D,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;IAC/E,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAC;IACvD,SAAS,CAAC,GAAG,EAAE;QACb,UAAU,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACX,OAAO,CACL,CAAC,QAAQ,CACP;MAAA,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAC1C;QAAA,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAC9B;UAAA,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,UAAU,WAAW,EAAE,CAAC,EAAE,EAAE,CAC3D;QAAA,EAAE,KAAK,CAAC,MAAM,CACd;QAAA,CAAC,KAAK,CAAC,IAAI,CACT;UAAA,CAAC,KAAK,CAAC,CAAC,mCAAmC,WAAW,IAAI,CAAC,EAAE,KAAK,CACpE;QAAA,EAAE,KAAK,CAAC,IAAI,CACZ;QAAA,CAAC,KAAK,CAAC,MAAM,CACX;UAAA,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAC1E;;UACF,EAAE,MAAM,CACR;UAAA,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CACvE;YAAA,CAAC,UAAU,WAAW,EAAE,CAC1B;UAAA,EAAE,MAAM,CACV;QAAA,EAAE,KAAK,CAAC,MAAM,CAChB;MAAA,EAAE,KAAK,CACT;IAAA,EAAE,QAAQ,CAAC,CACZ,CAAC;AACJ,CAAC,CAAC;AACF,eAAe,aAAa,CAAC","sourcesContent":["import React, { Fragment } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Modal } from 'react-bootstrap';\n\ninterface ConfirmDeleteProps {\n  show: boolean;\n  elementType?: string;\n  elementName?: string;\n  cancelHandler: () => void;\n  deleteHandler: () => void;\n}\n\nconst ConfirmDelete: React.FC<ConfirmDeleteProps> = (props) => {\n  const { show, elementType, elementName, cancelHandler, deleteHandler } = props;\n  const [display, setDisplay] = useState<boolean>(false);\n  useEffect(() => {\n    setDisplay(show);\n  }, [show]);\n  return (\n    <Fragment>\n      <Modal show={display} onHide={cancelHandler}>\n        <Modal.Header closeButton={true}>\n          <h3 className=\"modal-title\">{`Delete ${elementType}`}</h3>\n        </Modal.Header>\n        <Modal.Body>\n          <label>{`Are you sure you want to delete ${elementName} ?`}</label>\n        </Modal.Body>\n        <Modal.Footer>\n          <button id=\"btnCancel\" className=\"btn btn-secondary\" onClick={cancelHandler}>\n            Cancel\n          </button>\n          <button id=\"btnDelete\" className=\"btn btn-danger\" onClick={deleteHandler}>\n            {`Delete ${elementType}`}\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </Fragment>\n  );\n};\nexport default ConfirmDelete;\n"]}