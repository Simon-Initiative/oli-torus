{"version":3,"file":"RightMenu.jsx","sourceRoot":"","sources":["../../../../../../src/apps/authoring/components/RightMenu/RightMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport { UiSchema } from '@rjsf/core';\nimport { updatePart } from 'apps/authoring/store/parts/actions/updatePart';\nimport { JSONSchema7 } from 'json-schema';\nimport { debounce, isEqual } from 'lodash';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button, ButtonGroup, ButtonToolbar, Tab, Tabs } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clone } from 'utils/common';\nimport {\n  selectRightPanelActiveTab,\n  setCopiedPart,\n  setRightPanelActiveTab,\n} from '../../../authoring/store/app/slice';\nimport {\n  findInSequence,\n  SequenceBank,\n  SequenceEntry,\n} from '../../../delivery/store/features/groups/actions/sequence';\nimport {\n  selectCurrentActivityTree,\n  selectCurrentSequenceId,\n  selectSequence,\n} from '../../../delivery/store/features/groups/selectors/deck';\nimport { selectCurrentGroup } from '../../../delivery/store/features/groups/slice';\nimport { saveActivity } from '../../store/activities/actions/saveActivity';\nimport {\n  updateSequenceItem,\n  updateSequenceItemFromActivity,\n} from '../../store/groups/layouts/deck/actions/updateSequenceItemFromActivity';\nimport { savePage } from '../../store/page/actions/savePage';\nimport { selectState as selectPageState, updatePage } from '../../store/page/slice';\nimport { selectCurrentSelection, setCurrentSelection } from '../../store/parts/slice';\nimport ConfirmDelete from '../Modal/DeleteConfirmationModal';\nimport AccordionTemplate from '../PropertyEditor/custom/AccordionTemplate';\nimport CompJsonEditor from '../PropertyEditor/custom/CompJsonEditor';\nimport PropertyEditor from '../PropertyEditor/PropertyEditor';\nimport bankSchema, {\n  bankUiSchema,\n  transformBankModeltoSchema,\n  transformBankSchematoModel,\n} from '../PropertyEditor/schemas/bank';\nimport bankPropsSchema, {\n  BankPropsUiSchema,\n  transformBankPropsModeltoSchema,\n  transformBankPropsSchematoModel,\n} from '../PropertyEditor/schemas/bankScreen';\nimport lessonSchema, {\n  lessonUiSchema,\n  transformModelToSchema as transformLessonModel,\n  transformSchemaToModel as transformLessonSchema,\n} from '../PropertyEditor/schemas/lesson';\nimport partSchema, {\n  partUiSchema,\n  transformModelToSchema as transformPartModelToSchema,\n  transformSchemaToModel as transformPartSchemaToModel,\n} from '../PropertyEditor/schemas/part';\nimport screenSchema, {\n  screenUiSchema,\n  transformScreenModeltoSchema,\n  transformScreenSchematoModel,\n} from '../PropertyEditor/schemas/screen';\n\nexport enum RightPanelTabs {\n  LESSON = 'lesson',\n  SCREEN = 'screen',\n  COMPONENT = 'component',\n}\n\nconst RightMenu: React.FC<any> = () => {\n  const dispatch = useDispatch();\n  const selectedTab = useSelector(selectRightPanelActiveTab);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const currentLesson = useSelector(selectPageState);\n  const currentGroup = useSelector(selectCurrentGroup);\n  const currentPartSelection = useSelector(selectCurrentSelection);\n\n  // TODO: dynamically load schema from Part Component configuration\n  const [componentSchema, setComponentSchema] = useState<JSONSchema7>(partSchema);\n  const [componentUiSchema, setComponentUiSchema] = useState(partUiSchema);\n  const [currentComponent, setCurrentComponent] = useState(null);\n  const currentSequenceId = useSelector(selectCurrentSequenceId);\n  const sequence = useSelector(selectSequence);\n  const currentSequence = findInSequence(sequence, currentSequenceId);\n\n  const [currentActivity] = (currentActivityTree || []).slice(-1);\n\n  const [scrData, setScreenData] = useState();\n  const [scrSchema, setScreenSchema] = useState<JSONSchema7>();\n  const [scrUiSchema, setScreenUiSchema] = useState<UiSchema>();\n  const [questionBankData, setBankData] = useState<any>();\n  const [questionBankSchema, setBankSchema] = useState<JSONSchema7>();\n  const [showConfirmDelete, setShowConfirmDelete] = useState<boolean>(false);\n  useEffect(() => {\n    if (!currentActivity) {\n      return;\n    }\n    /* console.log('CURRENT', { currentActivity, currentLesson }); */\n    setScreenData(\n      currentSequence?.custom.isBank\n        ? transformBankPropsModeltoSchema(currentActivity)\n        : transformScreenModeltoSchema(currentActivity),\n    );\n    setScreenSchema(currentSequence?.custom.isBank ? bankPropsSchema : screenSchema);\n    setScreenUiSchema(currentSequence?.custom.isBank ? BankPropsUiSchema : screenUiSchema);\n\n    setBankData(transformBankModeltoSchema(currentSequence as SequenceEntry<SequenceBank>));\n    setBankSchema(bankSchema);\n    const currentIds = currentActivityTree?.reduce(\n      (acc, activity) => acc.concat(activity.content.partsLayout.map((p: any) => p.id)),\n      [],\n    );\n    setExistingIds(currentIds);\n  }, [currentActivity, currentSequence]);\n\n  // should probably wrap this in state too, but it doesn't change really\n  const lessonData = transformLessonModel(currentLesson);\n\n  const handleSelectTab = (key: RightPanelTabs) => {\n    // TODO: any other saving or whatever\n    dispatch(setRightPanelActiveTab({ rightPanelActiveTab: key }));\n  };\n  const handleCopyComponent = useCallback(() => {\n    if (currentActivity && currentPartSelection) {\n      const partDef = currentActivity.content?.partsLayout.find(\n        (part: any) => part.id === currentPartSelection,\n      );\n      if (!partDef) {\n        console.warn(`Part with id ${currentPartSelection} not found on this screen`);\n        return;\n      }\n      dispatch(setCopiedPart({ copiedPart: partDef }));\n    }\n  }, [currentActivity, currentPartSelection]);\n  const bankPropertyChangeHandler = useCallback(\n    (properties: object) => {\n      if (currentSequence) {\n        const modelChanges = transformBankSchematoModel(properties);\n        /* console.log('Bank Property Change...', { properties, modelChanges }); */\n        const { bankShowCount, bankEndTarget } = modelChanges;\n        if (currentSequence) {\n          const cloneSequence = clone(currentSequence);\n          cloneSequence.custom.bankShowCount = bankShowCount;\n          cloneSequence.custom.bankEndTarget = bankEndTarget;\n          dispatch(updateSequenceItem({ sequence: cloneSequence, group: currentGroup }));\n          dispatch(savePage());\n        }\n        //debounceSaveBankSettings(currentGroup, currentSequence, bankShowCount, bankEndTarget);\n      }\n    },\n    [currentSequence],\n  );\n\n  const debounceSaveBankSettings = useCallback(\n    debounce(\n      (group, currentSequence, bankShowCount, bankEndTarget) => {\n        if (currentSequence) {\n          const cloneSequence = clone(currentSequence);\n          cloneSequence.custom.bankShowCount = bankShowCount;\n          cloneSequence.custom.bankEndTarget = bankEndTarget;\n          dispatch(updateSequenceItem({ sequence: cloneSequence, group: group }));\n          dispatch(savePage());\n        }\n      },\n      0,\n      { maxWait: 10000, leading: false },\n    ),\n    [],\n  );\n\n  const screenPropertyChangeHandler = useCallback(\n    (properties: object) => {\n      if (currentActivity) {\n        const modelChanges = currentSequence?.custom.isBank\n          ? transformBankPropsSchematoModel(properties)\n          : transformScreenSchematoModel(properties);\n        /* console.log('Screen Property Change...', { properties, modelChanges }); */\n        const { title, ...screenModelChanges } = modelChanges;\n        const screenChanges = {\n          ...currentActivity?.content?.custom,\n          ...screenModelChanges,\n        };\n        const cloneActivity = clone(currentActivity);\n        cloneActivity.content.custom = screenChanges;\n        if (title) {\n          cloneActivity.title = title;\n        }\n        if (JSON.stringify(cloneActivity) !== JSON.stringify(currentActivity)) {\n          debounceSaveScreenSettings(cloneActivity, currentActivity, currentGroup);\n        }\n      }\n    },\n    [currentActivity],\n  );\n\n  const debounceSaveScreenSettings = useCallback(\n    debounce(\n      (activity, currentActivity, group) => {\n        /* console.log('SAVING ACTIVITY:', { activity }); */\n        dispatch(saveActivity({ activity }));\n\n        if (activity.title !== currentActivity?.title) {\n          dispatch(updateSequenceItemFromActivity({ activity: activity, group: group }));\n          dispatch(savePage());\n        }\n      },\n      500,\n      { maxWait: 10000, leading: false },\n    ),\n    [],\n  );\n\n  const debounceSavePage = useCallback(\n    debounce(\n      (changes) => {\n        /* console.log('SAVING PAGE', { changes }); */\n        // update server\n        dispatch(savePage(changes));\n        // update redux\n        // TODO: check if revision slug changes?\n        dispatch(updatePage(changes));\n      },\n      500,\n      { maxWait: 10000, leading: false },\n    ),\n    [],\n  );\n\n  const lessonPropertyChangeHandler = useCallback(\n    (properties: object) => {\n      const modelChanges = transformLessonSchema(properties);\n\n      // special consideration for legacy stylesheets\n      if (modelChanges.additionalStylesheets[0] === null) {\n        modelChanges.additionalStylesheets[0] = (currentLesson.additionalStylesheets || [])[0];\n      }\n\n      const lessonChanges = {\n        ...currentLesson,\n        ...modelChanges,\n        custom: { ...currentLesson.custom, ...modelChanges.custom },\n      };\n      //need to remove the allowNavigation property\n      //making sure the enableHistory is present before removing that.\n      if (\n        lessonChanges.custom.enableHistory !== undefined &&\n        lessonChanges.custom.allowNavigation !== undefined\n      ) {\n        delete lessonChanges.custom.allowNavigation;\n      }\n      /* console.log('LESSON PROP CHANGED', { modelChanges, lessonChanges, properties }); */\n\n      // need to put a healthy debounce in here, this fires every keystroke\n      // save the page\n      if (JSON.stringify(lessonChanges) !== JSON.stringify(currentLesson)) {\n        debounceSavePage(lessonChanges);\n      }\n    },\n    [currentLesson],\n  );\n\n  const debouncePartPropertyChanges = useCallback(\n    debounce(\n      (properties, partInstance, origActivity, origId) => {\n        let modelChanges = properties;\n\n        // do not allow saving of bad ID\n        if (!modelChanges.id || !modelChanges.id.trim()) {\n          modelChanges.id = origId;\n        }\n\n        modelChanges = transformPartSchemaToModel(modelChanges);\n        if (partInstance && partInstance.transformSchemaToModel) {\n          modelChanges.custom = {\n            ...modelChanges.custom,\n            ...partInstance.transformSchemaToModel(modelChanges.custom),\n          };\n        }\n\n        /* console.log('COMPONENT PROP CHANGED', { properties, modelChanges }); */\n        dispatch(\n          updatePart({ activityId: origActivity.id, partId: origId, changes: modelChanges }),\n        );\n\n        // in case the id changes, update the selection\n        dispatch(setCurrentSelection({ selection: modelChanges.id }));\n      },\n      500,\n      { maxWait: 10000, leading: false },\n    ),\n    [],\n  );\n\n  const [currentComponentData, setCurrentComponentData] = useState<any>();\n  const [currentPartInstance, setCurrentPartInstance] = useState(null);\n  const [existingIds, setExistingIds] = useState<string[]>([]);\n  useEffect(() => {\n    if (!currentPartSelection || !currentActivityTree) {\n      return;\n    }\n    let partDef;\n    for (let i = 0; i < currentActivityTree.length; i++) {\n      const activity = currentActivityTree[i];\n      partDef = activity.content?.partsLayout.find((part: any) => part.id === currentPartSelection);\n      if (partDef) {\n        break;\n      }\n    }\n    /* console.log('part selected', { partDef }); */\n    if (partDef) {\n      // part component should be registered by type as a custom element\n      const PartClass = customElements.get(partDef.type);\n      if (PartClass) {\n        const instance = new PartClass() as any;\n\n        setCurrentPartInstance(instance);\n\n        let data = clone(partDef);\n        if (instance.transformModelToSchema) {\n          // because the part schema below only knows about the \"custom\" block\n          data.custom = { ...data.custom, ...instance.transformModelToSchema(partDef.custom) };\n        }\n        data = transformPartModelToSchema(data);\n        setCurrentComponentData(data);\n\n        // schema\n        if (instance.getSchema) {\n          const customPartSchema = instance.getSchema();\n          const newSchema: any = {\n            ...partSchema,\n            properties: {\n              ...partSchema.properties,\n              custom: { type: 'object', properties: { ...customPartSchema } },\n            },\n          };\n          if (customPartSchema.definitions) {\n            newSchema.definitions = customPartSchema.definitions;\n            delete newSchema.properties.custom.properties.definitions;\n          }\n          setComponentSchema(newSchema);\n        }\n\n        // ui schema\n        if (instance.getUiSchema) {\n          const customPartUiSchema = instance.getUiSchema();\n          const newUiSchema = {\n            ...partUiSchema,\n            custom: {\n              'ui:ObjectFieldTemplate': AccordionTemplate,\n              'ui:title': 'Custom',\n              ...customPartUiSchema,\n            },\n          };\n          setComponentUiSchema(newUiSchema);\n        }\n      }\n      setCurrentComponent(partDef);\n    }\n    return () => {\n      setComponentSchema(partSchema);\n      setComponentUiSchema(partUiSchema);\n      setCurrentComponent(null);\n      setCurrentComponentData(null);\n      setCurrentPartInstance(null);\n    };\n  }, [currentPartSelection, currentActivityTree]);\n\n  const componentPropertyChangeHandler = useCallback(\n    (properties: object) => {\n      debouncePartPropertyChanges(\n        properties,\n        currentPartInstance,\n        currentActivity,\n        currentPartSelection,\n      );\n    },\n    [currentActivity, currentPartInstance, currentPartSelection],\n  );\n\n  const handleEditComponentJson = (newJson: any) => {\n    const cloneActivity = clone(currentActivity);\n    const ogPart = cloneActivity.content?.partsLayout.find(\n      (part: any) => part.id === currentPartSelection,\n    );\n    if (!ogPart) {\n      console.warn(\n        'couldnt find part in current activity, most like lives on a layer; you need to update they layer copy directly',\n      );\n      return;\n    }\n    if (newJson.id !== '' && newJson.id !== ogPart.id) {\n      ogPart.id = newJson.id;\n      // in case the id changes, update the selection\n      dispatch(setCurrentSelection({ selection: newJson.id }));\n    }\n    ogPart.custom = newJson.custom;\n    if (!isEqual(cloneActivity, currentActivity)) {\n      dispatch(saveActivity({ activity: cloneActivity }));\n    }\n  };\n  const DeleteComponentHandler = () => {\n    handleDeleteComponent();\n    setShowConfirmDelete(false);\n  };\n  const handleDeleteComponent = useCallback(() => {\n    // only allow delete of \"owned\" parts\n    // TODO: disable/hide button if that is not owned\n    if (!currentActivity || !currentPartSelection) {\n      return;\n    }\n    const partDef = currentActivity.content?.partsLayout.find(\n      (part: any) => part.id === currentPartSelection,\n    );\n    if (!partDef) {\n      console.warn(`Part with id ${currentPartSelection} not found on this screen`);\n      return;\n    }\n    const cloneActivity = clone(currentActivity);\n    cloneActivity.authoring.parts = cloneActivity.authoring.parts.filter(\n      (part: any) => part.id !== currentPartSelection,\n    );\n    cloneActivity.content.partsLayout = cloneActivity.content.partsLayout.filter(\n      (part: any) => part.id !== currentPartSelection,\n    );\n    dispatch(saveActivity({ activity: cloneActivity }));\n    dispatch(setCurrentSelection({ selection: '' }));\n    dispatch(setRightPanelActiveTab({ rightPanelActiveTab: RightPanelTabs.SCREEN }));\n  }, [currentPartSelection, currentActivity]);\n\n  return (\n    <Tabs\n      className=\"aa-panel-section-title-bar aa-panel-tabs\"\n      activeKey={selectedTab}\n      onSelect={handleSelectTab}\n    >\n      <Tab eventKey={RightPanelTabs.LESSON} title=\"Lesson\">\n        <div className=\"lesson-tab overflow-hidden\">\n          <PropertyEditor\n            schema={lessonSchema as JSONSchema7}\n            uiSchema={lessonUiSchema}\n            value={lessonData}\n            onChangeHandler={lessonPropertyChangeHandler}\n          />\n        </div>\n      </Tab>\n      <Tab eventKey={RightPanelTabs.SCREEN} title=\"Screen\">\n        {currentActivity && currentSequence && currentSequence?.custom.isBank ? (\n          <div className=\"bank-tab p-3\">\n            <PropertyEditor\n              key={currentActivity.id}\n              schema={questionBankSchema as JSONSchema7}\n              uiSchema={bankUiSchema}\n              value={questionBankData}\n              onChangeHandler={bankPropertyChangeHandler}\n            />\n          </div>\n        ) : null}\n        <div className=\"screen-tab p-3 overflow-hidden\">\n          {currentActivity && scrData ? (\n            <PropertyEditor\n              key={currentActivity.id}\n              schema={scrSchema as JSONSchema7}\n              uiSchema={scrUiSchema as UiSchema}\n              value={scrData}\n              onChangeHandler={screenPropertyChangeHandler}\n            />\n          ) : null}\n        </div>\n      </Tab>\n      <Tab eventKey={RightPanelTabs.COMPONENT} title=\"Component\" disabled={!currentComponent}>\n        {currentComponent && currentComponentData && (\n          <div className=\"component-tab p-3 overflow-hidden\">\n            <ButtonToolbar aria-label=\"Component Tools\">\n              <ButtonGroup className=\"me-2\" aria-label=\"First group\">\n                <Button>\n                  <i className=\"fas fa-wrench mr-2\" />\n                </Button>\n                <Button>\n                  <i className=\"fas fa-cog mr-2\" />\n                </Button>\n                <Button>\n                  <i className=\"fas fa-copy mr-2\" onClick={() => handleCopyComponent()} />\n                </Button>\n                <CompJsonEditor\n                  onChange={handleEditComponentJson}\n                  jsonValue={currentComponentData}\n                  existingPartIds={existingIds}\n                />\n                <Button variant=\"danger\" onClick={() => setShowConfirmDelete(true)}>\n                  <i className=\"fas fa-trash mr-2\" />\n                </Button>\n                <ConfirmDelete\n                  show={showConfirmDelete}\n                  elementType=\"Component\"\n                  elementName={currentComponentData?.id}\n                  deleteHandler={DeleteComponentHandler}\n                  cancelHandler={() => {\n                    setShowConfirmDelete(false);\n                  }}\n                />\n              </ButtonGroup>\n            </ButtonToolbar>\n            <PropertyEditor\n              key={currentComponentData.id}\n              schema={componentSchema}\n              uiSchema={componentUiSchema}\n              value={currentComponentData}\n              onChangeHandler={componentPropertyChangeHandler}\n            />\n          </div>\n        )}\n      </Tab>\n    </Tabs>\n  );\n};\nexport default RightMenu;\n"]}