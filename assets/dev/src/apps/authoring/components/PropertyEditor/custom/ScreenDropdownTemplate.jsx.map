{"version":3,"file":"ScreenDropdownTemplate.jsx","sourceRoot":"","sources":["../../../../../../../src/apps/authoring/components/PropertyEditor/custom/ScreenDropdownTemplate.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport {\n  findInSequence,\n  getHierarchy,\n  SequenceEntry,\n  SequenceEntryChild,\n} from 'apps/delivery/store/features/groups/actions/sequence';\nimport { selectSequence } from 'apps/delivery/store/features/groups/selectors/deck';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { SequenceDropdown } from './SequenceDropdown';\n\ninterface ScreenDropdownProps {\n  id: string;\n  label: string;\n  value: string;\n  onChange: (value?: string) => void;\n  dropDownCSSClass?: string;\n  buttonCSSClass?: string;\n}\nconst ScreenDropdownTemplate: React.FC<ScreenDropdownProps> = (props) => {\n  const { id, label, value, onChange, dropDownCSSClass, buttonCSSClass } = props;\n  // console.log('ScreenDropdownTemplate', props);\n  const sequence = useSelector(selectSequence);\n\n  const [buttonLabel, setButtonLabel] = useState('Next Screen');\n  const [hierarchy, setHierarchy] = useState(getHierarchy(sequence));\n\n  useEffect(() => {\n    if (value === 'next') {\n      setButtonLabel('Next Screen');\n      return;\n    }\n    if (sequence) {\n      setHierarchy(getHierarchy(sequence));\n      const entry = findInSequence(sequence, value);\n      if (entry) {\n        setButtonLabel(entry.custom.sequenceName);\n        return;\n      }\n    }\n    // TODO: should probably handle this scenario earlier in the data and auto correct\n    setButtonLabel('Missing Screen!');\n  }, [value, sequence]);\n\n  const onChangeHandler = (\n    item: SequenceEntry<SequenceEntryChild> | null,\n    e: React.MouseEvent,\n    isNext: boolean,\n  ) => {\n    const itemId = isNext ? 'next' : item?.custom.sequenceId;\n    onChange(itemId);\n  };\n\n  return (\n    <Fragment>\n      {label && <span className=\"form-label\">{label}</span>}\n      <div className={`dropdown ${dropDownCSSClass || 'screenDropdown'}`}>\n        <button\n          className={`${buttonCSSClass} form-control dropdown-toggle d-flex justify-content-between`}\n          type=\"button\"\n          id={id}\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          {buttonLabel}\n          <i className=\"fas fa-caret-down my-auto\" />\n        </button>\n        <div className=\"dropdown-menu\" aria-labelledby={id}>\n          <SequenceDropdown\n            items={hierarchy}\n            onChange={onChangeHandler}\n            value={props.value}\n            showNextBtn={true}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ScreenDropdownTemplate;\n"]}