{"version":3,"file":"part.js","sourceRoot":"","sources":["../../../../../../../src/apps/authoring/components/PropertyEditor/schemas/part.ts"],"names":[],"mappings":"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","sourcesContent":["import { JSONSchema7 } from 'json-schema';\nimport { parseNumString } from 'utils/common';\nimport CustomFieldTemplate from '../custom/CustomFieldTemplate';\n\nconst partSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    id: { type: 'string', title: 'Id' },\n    type: { type: 'string', title: 'Type' },\n    Position: {\n      type: 'object',\n      title: 'Dimensions',\n      properties: {\n        x: { type: 'number' },\n        y: { type: 'number' },\n        z: { type: 'number' },\n      },\n    },\n    Size: {\n      type: 'object',\n      title: 'Dimensions',\n      properties: {\n        width: { type: 'number', title: 'Width' },\n        height: { type: 'number', title: 'Height' },\n      },\n    },\n    custom: { type: 'object', properties: { addtionalProperties: { type: 'string' } } },\n  },\n  required: ['id'],\n};\n\nexport const partUiSchema = {\n  type: {\n    'ui:title': 'Part Type',\n    'ui:readonly': true,\n  },\n  Position: {\n    'ui:ObjectFieldTemplate': CustomFieldTemplate,\n    'ui:title': 'Position',\n    x: {\n      classNames: 'col-4',\n    },\n    y: {\n      classNames: 'col-4',\n    },\n    z: {\n      classNames: 'col-4',\n    },\n  },\n  Size: {\n    'ui:ObjectFieldTemplate': CustomFieldTemplate,\n    'ui:title': 'Dimensions',\n    width: {\n      classNames: 'col-6',\n    },\n    height: {\n      classNames: 'col-6',\n    },\n  },\n};\n\nexport const transformModelToSchema = (model: any) => {\n  const { id, type } = model;\n  const { x, y, z, width, height } = model.custom;\n  const result: any = {\n    id,\n    type,\n    Position: {\n      x,\n      y,\n      z,\n    },\n    Size: {\n      width,\n      height,\n    },\n    custom: { ...model.custom },\n  };\n\n  /* console.log('PART [transformModelToSchema]', { model, result }); */\n\n  return result;\n};\n\nexport const transformSchemaToModel = (schema: any) => {\n  const { id, type, Position, Size, palette } = schema;\n  const result = {\n    id,\n    type,\n    custom: {\n      ...schema.custom,\n      x: Position.x,\n      y: Position.y,\n      z: Position.z,\n      width: Size.width,\n      height: Size.height,\n    },\n  };\n\n  if (palette) {\n    result.custom.palette = {\n      useHtmlProps: true,\n      backgroundColor: palette.backgroundColor || 'transparent',\n      borderColor: palette.borderColor || 'transparent',\n      borderRadius: parseNumString(palette.borderRadius) || 0,\n      borderWidth: parseNumString(palette.borderWidth) || 0,\n      borderStyle: palette.borderStyle || 'none',\n    };\n  }\n\n  /* console.log('PART [transformSchemaToModel]', { schema, result }); */\n\n  return result;\n};\n\nexport default partSchema;\n"]}