{"version":3,"file":"ComponentSearchContextMenu.jsx","sourceRoot":"","sources":["../../../../../../src/apps/authoring/components/ComponentToolbar/ComponentSearchContextMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  selectPartComponentTypes,\n  selectPaths,\n  setRightPanelActiveTab,\n} from 'apps/authoring/store/app/slice';\nimport { selectCurrentSelection, setCurrentSelection } from 'apps/authoring/store/parts/slice';\nimport { selectCurrentActivityTree } from 'apps/delivery/store/features/groups/selectors/deck';\nimport React, { useState } from 'react';\nimport { useCallback } from 'react';\nimport { ListGroup, Overlay, OverlayTrigger, Popover, Tooltip } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RightPanelTabs } from '../RightMenu/RightMenu';\n\nconst ComponentSearchContextMenu: React.FC = () => {\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const paths = useSelector(selectPaths);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const dispatch = useDispatch();\n  const currentPartSelection = useSelector(selectCurrentSelection);\n  const availablePartComponents = useSelector(selectPartComponentTypes);\n\n  const handleClick = (event: any) => {\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  // TODO: tag parent items so that we can mark them instead?\n  const allParts = (currentActivityTree || [])\n    .slice(-1)\n    .reduce((acc, activity) => acc.concat(activity.content.partsLayout || []), []);\n\n  const handlePartClick = useCallback(\n    (part: any) => {\n      const [currentActivity] = currentActivityTree?.slice(-1) || [];\n      if (!currentActivity) {\n        return;\n      }\n      if (currentActivity.content.partsLayout.find((p: any) => p.id === part.id)) {\n        setShow(!show);\n        dispatch(setCurrentSelection({ selection: part.id }));\n        dispatch(setRightPanelActiveTab({ rightPanelActiveTab: RightPanelTabs.COMPONENT }));\n      }\n    },\n    [currentActivityTree],\n  );\n\n  const getPartIcon = (type: string) => {\n    const part = availablePartComponents.find((part) => part.delivery_element === type);\n    if (!part) {\n      return `${paths?.images}/icons/icon-componentList.svg`;\n    }\n    // TODO: test if part.icon starts with http and if so use that instead of the paths.images\n    return `${paths?.images}/icons/${part.icon}`;\n  };\n\n  // console.log('ALL PARTS', { allParts, currentActivityTree });\n\n  return (\n    paths && (\n      <>\n        <OverlayTrigger\n          placement=\"bottom\"\n          delay={{ show: 150, hide: 150 }}\n          overlay={\n            <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n              Find Components\n            </Tooltip>\n          }\n        >\n          <span>\n            <button className=\"px-2 btn btn-link\" onClick={handleClick}>\n              <img src={`${paths.images}/icons/icon-findComponents.svg`}></img>\n            </button>\n          </span>\n        </OverlayTrigger>\n\n        <Overlay\n          show={show}\n          target={target}\n          placement=\"bottom\"\n          container={document.getElementById('advanced-authoring')}\n          containerPadding={20}\n          rootClose={true}\n          onHide={() => setShow(false)}\n        >\n          <Popover id=\"search-popover\">\n            <Popover.Title as=\"h3\">{allParts.length} Parts On Screen</Popover.Title>\n            <Popover.Content>\n              <ListGroup className=\"aa-parts-list\">\n                {allParts.map((part: any) => (\n                  <ListGroup.Item\n                    active={part.id === currentPartSelection}\n                    action\n                    onClick={() => handlePartClick(part)}\n                    key={part.id}\n                    className=\"d-flex align-items-center\"\n                  >\n                    <div className=\"text-center mr-1 d-inline-block\" style={{ minWidth: '36px' }}>\n                      <img title={part.type} src={getPartIcon(part.type)} />\n                    </div>\n                    <span className=\"mr-2\">{part.id}</span>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Popover.Content>\n          </Popover>\n        </Overlay>\n      </>\n    )\n  );\n};\n\nexport default ComponentSearchContextMenu;\n"]}