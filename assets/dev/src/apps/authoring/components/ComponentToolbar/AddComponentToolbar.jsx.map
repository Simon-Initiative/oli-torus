{"version":3,"file":"AddComponentToolbar.jsx","sourceRoot":"","sources":["../../../../../../src/apps/authoring/components/ComponentToolbar/AddComponentToolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { saveActivity } from 'apps/authoring/store/activities/actions/saveActivity';\nimport {\n  selectCopiedPart,\n  selectPartComponentTypes,\n  selectPaths,\n  setCopiedPart,\n  setRightPanelActiveTab,\n} from 'apps/authoring/store/app/slice';\nimport { addPart } from 'apps/authoring/store/parts/actions/addPart';\nimport { setCurrentSelection } from 'apps/authoring/store/parts/slice';\nimport { findInSequenceByResourceId } from 'apps/delivery/store/features/groups/actions/sequence';\nimport {\n  selectCurrentActivityTree,\n  selectSequence,\n} from 'apps/delivery/store/features/groups/selectors/deck';\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { ListGroup, Overlay, OverlayTrigger, Popover, Tooltip } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clone } from 'utils/common';\nimport guid from 'utils/guid';\nimport { RightPanelTabs } from '../RightMenu/RightMenu';\n\nconst AddComponentToolbar: React.FC = () => {\n  const dispatch = useDispatch();\n  const paths = useSelector(selectPaths);\n  const imgsPath = paths?.images || '';\n\n  const [showPartsMenu, setShowPartsMenu] = useState(false);\n  const [partsMenuTarget, setPartsMenuTarget] = useState(null);\n\n  const availablePartComponents = useSelector(selectPartComponentTypes);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const currentSequence = useSelector(selectSequence);\n  const copiedPart = useSelector(selectCopiedPart);\n  // console.log('AVAILABLE PART COMPONENTS', availablePartComponents);\n\n  const addPartToCurrentScreen = (newPartData: any) => {\n    if (currentActivityTree) {\n      const [currentActivity] = currentActivityTree.slice(-1);\n      dispatch(addPart({ activityId: currentActivity.id, newPartData }));\n    }\n  };\n\n  const handleAddComponent = useCallback(\n    (partComponentType: string) => {\n      setShowPartsMenu(false);\n      if (!availablePartComponents) {\n        return;\n      }\n      const partComponent = availablePartComponents.find((p) => p.slug === partComponentType);\n      if (!partComponent) {\n        console.warn(`No part ${partComponentType} found in registry!`, {\n          availablePartComponents,\n        });\n        return;\n      }\n      const PartClass = customElements.get(partComponent.authoring_element);\n      if (PartClass) {\n        // only ever add to the current activity, not a layer\n\n        const part = new PartClass() as any;\n        const newPartData = {\n          id: `${partComponentType}-${guid()}`,\n          type: partComponent.delivery_element,\n          custom: {\n            x: 10,\n            y: 10,\n            z: 0,\n            width: 100,\n            height: 100,\n          },\n        };\n        const creationContext = { transform: { ...newPartData.custom } };\n        if (part.createSchema) {\n          newPartData.custom = { ...newPartData.custom, ...part.createSchema(creationContext) };\n        }\n        addPartToCurrentScreen(newPartData);\n      }\n    },\n    [availablePartComponents, currentActivityTree, currentSequence],\n  );\n\n  // TODO: allow dynamic altering of \"frequently used\" per user?\n  // and/or split based on media query available size?\n  // and/or split by other groups?\n  const frequentlyUsed = [\n    'janus_text_flow',\n    'janus_image',\n    'janus_mcq',\n    'janus_video',\n    'janus_input_text',\n    'janus_capi_iframe',\n  ];\n\n  const handlePartMenuButtonClick = (event: any) => {\n    setShowPartsMenu(!showPartsMenu);\n    setPartsMenuTarget(event.target);\n  };\n  const handlePartPasteClick = (event: any) => {\n    const newPartData = {\n      id: `${copiedPart.type}-${guid()}`,\n      type: copiedPart.type,\n      custom: copiedPart.custom,\n    };\n    addPartToCurrentScreen(newPartData);\n    dispatch(setCurrentSelection({ selection: newPartData.id }));\n\n    dispatch(setRightPanelActiveTab({ rightPanelActiveTab: RightPanelTabs.COMPONENT }));\n  };\n  return (\n    <Fragment>\n      <div className=\"btn-group align-items-center\" role=\"group\">\n        {availablePartComponents\n          .filter((part) => frequentlyUsed.includes(part.slug))\n          .sort((a, b) => {\n            const aIndex = frequentlyUsed.indexOf(a.slug);\n            const bIndex = frequentlyUsed.indexOf(b.slug);\n            return aIndex - bIndex;\n          })\n          .map((part) => (\n            <OverlayTrigger\n              key={part.slug}\n              placement=\"bottom\"\n              delay={{ show: 150, hide: 150 }}\n              overlay={\n                <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n                  <strong>{part.title}</strong>\n                  <br />\n                  <em>{part.description}</em>\n                </Tooltip>\n              }\n            >\n              <span>\n                <button className=\"px-2 btn btn-link\" onClick={() => handleAddComponent(part.slug)}>\n                  <img src={`${imgsPath}/icons/${part.icon}`}></img>\n                </button>\n              </span>\n            </OverlayTrigger>\n          ))}\n      </div>\n      <div className=\"btn-group pl-3 ml-3 border-left align-items-center\" role=\"group\">\n        {copiedPart ? (\n          <OverlayTrigger\n            placement=\"bottom\"\n            delay={{ show: 150, hide: 150 }}\n            overlay={\n              <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n                Paste Component\n              </Tooltip>\n            }\n          >\n            <span>\n              <button className=\"px-2 btn btn-link\" onClick={handlePartPasteClick}>\n                <img src={`${imgsPath}/icons/icon-paste.svg`} width=\"30px\"></img>\n              </button>\n            </span>\n          </OverlayTrigger>\n        ) : null}\n        <OverlayTrigger\n          placement=\"bottom\"\n          delay={{ show: 150, hide: 150 }}\n          overlay={\n            <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n              More Components\n            </Tooltip>\n          }\n        >\n          <span>\n            <button className=\"px-2 btn btn-link\" onClick={handlePartMenuButtonClick}>\n              <img src={`${imgsPath}/icons/icon-componentList.svg`}></img>\n            </button>\n          </span>\n        </OverlayTrigger>\n        <Overlay\n          show={showPartsMenu}\n          target={partsMenuTarget}\n          placement=\"bottom\"\n          container={document.getElementById('advanced-authoring')}\n          containerPadding={20}\n          rootClose={true}\n          onHide={() => setShowPartsMenu(false)}\n        >\n          <Popover id=\"moreComponents-popover\">\n            <Popover.Title as=\"h3\">More Components</Popover.Title>\n            <Popover.Content>\n              <ListGroup className=\"aa-parts-list\">\n                {availablePartComponents\n                  .filter((part) => !frequentlyUsed.includes(part.slug))\n                  .map((part) => (\n                    <ListGroup.Item\n                      action\n                      onClick={() => handleAddComponent(part.slug)}\n                      key={part.slug}\n                      className=\"d-flex align-items-center\"\n                    >\n                      <div className=\"text-center mr-1 d-inline-block\" style={{ minWidth: '36px' }}>\n                        <img title={part.description} src={`${imgsPath}/icons/${part.icon}`} />\n                      </div>\n                      <span className=\"mr-3\">{part.title}</span>\n                    </ListGroup.Item>\n                  ))}\n              </ListGroup>\n            </Popover.Content>\n          </Popover>\n        </Overlay>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AddComponentToolbar;\n"]}