{"version":3,"file":"VariablePicker.jsx","sourceRoot":"","sources":["../../../../../../src/apps/authoring/components/AdaptivityEditor/VariablePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CapiVariableTypes } from '../../../../adaptivity/capi';\nimport { selectPartComponentTypes, selectPaths } from 'apps/authoring/store/app/slice';\nimport { selectAllActivities } from 'apps/delivery/store/features/activities/slice';\nimport {\n  getHierarchy,\n  getSequenceLineage,\n  SequenceEntryChild,\n  SequenceHierarchyItem,\n} from 'apps/delivery/store/features/groups/actions/sequence';\nimport {\n  selectCurrentActivityTree,\n  selectSequence,\n} from 'apps/delivery/store/features/groups/selectors/deck';\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport { Accordion, Button, Dropdown, ListGroup, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport ContextAwareToggle from '../Accordion/ContextAwareToggle';\nimport { SequenceDropdown } from '../PropertyEditor/custom/SequenceDropdown';\nimport { selectState as selectPageState } from '../../store/page/slice';\nimport { sessionVariables } from './AdaptiveItemOptions';\n\nexport enum OverlayPlacements {\n  TOP = 'top',\n  RIGHT = 'right',\n  BOTTOM = 'bottom',\n  LEFT = 'left',\n}\nenum FilterItems {\n  SCREEN = 'This Screen',\n  SESSION = 'Session',\n  VARIABLES = 'Lesson Variables',\n}\ninterface VariablePickerProps {\n  placement?: OverlayPlacements;\n  targetRef: React.RefObject<HTMLInputElement>;\n  typeRef: React.RefObject<HTMLSelectElement>;\n  context: 'init' | 'mutate' | 'condition';\n}\n\nexport const VariablePicker: React.FC<VariablePickerProps> = ({\n  placement = OverlayPlacements.TOP,\n  targetRef,\n  typeRef,\n  context,\n}) => {\n  const currentLesson = useSelector(selectPageState);\n  const sequence = useSelector(selectSequence);\n  const hierarchy = getHierarchy(sequence);\n  const vpContainerRef = useRef(document.getElementById('advanced-authoring'));\n  const paths = useSelector(selectPaths);\n  const availablePartComponents = useSelector(selectPartComponentTypes);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const allActivities = useSelector(selectAllActivities);\n\n  const [specificSequenceId, setSpecificSequenceId] = useState<string>('stage');\n  const [specificActivityTree, setSpecificActivityTree] = useState<any>();\n  const [isFilterMenuOpen, setIsFilterMenuOpen] = useState<boolean>(false);\n  const [activeFilter, setActiveFilter] = useState<string>(FilterItems.SCREEN);\n  const [partAdaptivityMap, setPartAdaptivityMap] = useState<Record<string, string>>({});\n  const [allParts, setAllParts] = useState([]);\n\n  const setTargetRef = (setTo: string) => {\n    setTimeout(() => {\n      if (targetRef?.current) {\n        targetRef.current.value = setTo;\n        targetRef.current.click();\n        targetRef.current.focus();\n      }\n    });\n  };\n  const setTypeRef = (setTo: string) => {\n    const event = new Event('change', { bubbles: true });\n    setTimeout(() => {\n      if (typeRef?.current) {\n        typeRef.current.value = setTo;\n        typeRef.current.click();\n        typeRef.current.dispatchEvent(event);\n        typeRef.current.focus();\n      }\n    });\n  };\n\n  const onChangeHandler = (\n    item: null | SequenceHierarchyItem<SequenceEntryChild>,\n    e?: React.MouseEvent,\n    isNextButton?: boolean,\n  ) => {\n    if (item) {\n      const lineage = getSequenceLineage(sequence, item.custom.sequenceId);\n      const selectedActivityTree = lineage.map((lineageItem) =>\n        allActivities.find((act) => act.id === lineageItem.resourceId),\n      );\n      setActiveFilter(item?.custom.sequenceName);\n      setSpecificActivityTree(selectedActivityTree);\n    }\n    setIsFilterMenuOpen(false);\n    const itemId = isNextButton ? 'next' : item?.custom.sequenceId;\n    if (itemId) {\n      setSpecificSequenceId(itemId);\n    } else {\n      return console.warn('SequenceId not found in sequence');\n    }\n  };\n\n  const getPartIcon = (type: string) => {\n    const part = availablePartComponents.find((part) => part.delivery_element === type);\n    if (!part) {\n      return `${paths?.images}/icons/icon-componentList.svg`;\n    }\n    // TODO: test if part.icon starts with http and if so use that instead of the paths.images\n    return `${paths?.images}/icons/${part.icon}`;\n  };\n\n  const getLimitedTypeCheck = (typeToCheck: string | boolean | number | unknown) => {\n    const limitedTypeCheck = typeof typeToCheck;\n    let limitedType: string | boolean | number;\n    switch (limitedTypeCheck) {\n      case 'string':\n        limitedType = CapiVariableTypes.STRING;\n        break;\n      case 'boolean':\n        limitedType = CapiVariableTypes.BOOLEAN;\n        break;\n      default:\n        limitedType = CapiVariableTypes.NUMBER;\n        break;\n    }\n    return limitedType;\n  };\n\n  const getPartTypeTemplate = useCallback(\n    (part: Record<string, string>, index: number) => {\n      const adaptivitySchema: any = partAdaptivityMap[part.type];\n      if (adaptivitySchema) {\n        return (\n          <>\n            <Accordion.Toggle\n              as={ListGroup.Item}\n              eventKey={`${index}`}\n              action\n              className=\"part-type\"\n              onClick={() => setIsFilterMenuOpen(false)}\n            >\n              <div className=\"d-flex align-items-center justify-space-between flex-grow-1\">\n                <div className=\"d-flex flex-grow-1\">\n                  <div className=\"text-center mr-2 d-flex\">\n                    <img\n                      title={part.type}\n                      src={getPartIcon(part.type)}\n                      className=\"part-type-icon\"\n                    />\n                  </div>\n                  <span className=\"mr-2\">{part.id}</span>\n                </div>\n                <ContextAwareToggle eventKey={`${index}`} />\n              </div>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={`${index}`}>\n              <ul className=\"list-unstyled m-0 mb-2\">\n                {Object.keys(adaptivitySchema).map((key: string, index: number) => (\n                  <li\n                    className=\"pb-2 pl-1 ml-4\"\n                    key={index}\n                    onClick={() => {\n                      setTargetRef(\n                        `${\n                          specificSequenceId === 'stage' ? 'stage.' : `${specificSequenceId}|stage.`\n                        }${part.id}.${key}`,\n                      );\n                      setTypeRef(`${adaptivitySchema[key as unknown as number]}`);\n                    }}\n                  >\n                    <button type=\"button\" className=\"text-btn font-italic\">\n                      <span\n                        title={\n                          CapiVariableTypes[adaptivitySchema[key]][0] +\n                          CapiVariableTypes[adaptivitySchema[key]].slice(1).toLowerCase()\n                        }\n                      >\n                        {key}\n                      </span>\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </Accordion.Collapse>\n          </>\n        );\n      }\n      return null;\n    },\n    [partAdaptivityMap, specificSequenceId],\n  );\n\n  const getAdaptivePartTypes = useCallback(async () => {\n    const getMapPromises = allParts.map(async (part: Record<string, string>) => {\n      let adaptivitySchema: null | Record<string, string> = null;\n      const PartClass = customElements.get(part.type);\n      if (PartClass) {\n        const instance: any = new PartClass();\n        if (instance) {\n          if (instance.getAdaptivitySchema) {\n            adaptivitySchema = await instance.getAdaptivitySchema({\n              currentModel: part,\n              editorContext: context,\n            });\n          }\n        }\n      }\n      return { adaptivitySchema, type: part.type };\n    });\n    const mapItems = await Promise.all(getMapPromises);\n    const adaptivityMap: Record<string, string> = mapItems.reduce(\n      (acc: any, typeToAdaptivitySchemaMap: any) => {\n        acc[typeToAdaptivitySchemaMap.type] = typeToAdaptivitySchemaMap.adaptivitySchema;\n        return acc;\n      },\n      {},\n    );\n    setPartAdaptivityMap(adaptivityMap);\n  }, [allParts, currentActivityTree, specificActivityTree]);\n\n  const sessionVisits: Record<string, unknown>[] = [];\n  const getSessionVisits = (sequence: any) => {\n    sequence.forEach((sequenceItem: SequenceHierarchyItem<SequenceEntryChild>) => {\n      if (!sequenceItem.custom.isBank && !sequenceItem.custom.isLayer) {\n        sessionVisits.push({\n          sequenceId: sequenceItem.custom.sequenceId,\n          sequenceName: sequenceItem.custom.sequenceName,\n        });\n      }\n      if (sequenceItem.children.length > 0) {\n        getSessionVisits(sequenceItem.children);\n      }\n    });\n    return [\n      ...new Map(sessionVisits.map((uniqueBy) => [uniqueBy['sequenceId'], uniqueBy])).values(),\n    ];\n  };\n\n  const SessionTemplate: React.FC = () => (\n    <>\n      {Object.keys(sessionVariables).map((variable: string, index: number) => {\n        if (variable !== 'visits') {\n          const limitedType = getLimitedTypeCheck(sessionVariables[variable]);\n          // PMP-2039: if the context is mutate, we only want to show tutorialScore and currentQuestionScore\n          if (context === 'mutate') {\n            if (variable === 'tutorialScore' || variable === 'currentQuestionScore') {\n              return (\n                <div key={index} className=\"part-type\">\n                  <button\n                    type=\"button\"\n                    className=\"text-btn font-italic\"\n                    onClick={() => {\n                      setTargetRef(`session.${variable}`);\n                      setTypeRef(`${limitedType}`);\n                    }}\n                    title={`${\n                      CapiVariableTypes[limitedType][0] +\n                      CapiVariableTypes[limitedType].slice(1).toLowerCase()\n                    }`}\n                  >\n                    {variable}\n                  </button>\n                </div>\n              );\n            }\n          } else {\n            return (\n              <div key={index} className=\"part-type\">\n                <button\n                  type=\"button\"\n                  className=\"text-btn font-italic\"\n                  onClick={() => {\n                    setTargetRef(`session.${variable}`);\n                    setTypeRef(`${limitedType}`);\n                  }}\n                  title={`${\n                    CapiVariableTypes[limitedType][0] +\n                    CapiVariableTypes[limitedType].slice(1).toLowerCase()\n                  }`}\n                >\n                  {variable}\n                </button>\n              </div>\n            );\n          }\n        }\n        if (variable === 'visits' && context !== 'mutate') {\n          const sessionVisits = getSessionVisits(hierarchy);\n          return (\n            <Accordion>\n              <Accordion.Toggle\n                as={ListGroup.Item}\n                eventKey={`${index}`}\n                action\n                className=\"part-type border-top\"\n                onClick={() => setIsFilterMenuOpen(false)}\n              >\n                <div className=\"d-flex align-items-center justify-space-between flex-grow-1\">\n                  <div className=\"d-flex flex-grow-1\">\n                    <span className=\"ml-1 text-btn font-weight-bold\">{variable}</span>\n                  </div>\n                  <ContextAwareToggle eventKey={`${index}`} />\n                </div>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey={`${index}`}>\n                <ul className=\"list-unstyled m-0 mb-2\">\n                  {sessionVisits.map((sequence: any, index: number) => (\n                    <li\n                      className=\"pb-2 pl-1 ml-3\"\n                      key={index}\n                      onClick={() => {\n                        setTargetRef(`session.visits.${sequence.sequenceId}`);\n                        setTypeRef(`${CapiVariableTypes.NUMBER}`);\n                      }}\n                    >\n                      <button type=\"button\" className=\"text-btn font-italic\">\n                        <span title={`${sequence.sequenceId}`}>{sequence.sequenceName}</span>\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </Accordion.Collapse>\n            </Accordion>\n          );\n        }\n      })}\n    </>\n  );\n\n  const VariableTemplate: React.FC = () =>\n    currentLesson.custom.variables.map((variable: any, index: number) => {\n      return Object.keys(variable).map((varKey) => {\n        const limitedType = getLimitedTypeCheck(variable[varKey]);\n        return (\n          <div key={index} className=\"part-type\">\n            <button\n              type=\"button\"\n              className=\"text-btn font-italic\"\n              onClick={() => {\n                setTargetRef(`variables.${varKey}`);\n                setTypeRef(`${limitedType}`);\n              }}\n              title={`${\n                CapiVariableTypes[limitedType][0] +\n                CapiVariableTypes[limitedType].slice(1).toLowerCase()\n              }`}\n            >\n              {varKey}\n            </button>\n          </div>\n        );\n      });\n    });\n\n  useEffect(() => {\n    getAdaptivePartTypes();\n  }, [allParts, currentActivityTree, specificActivityTree]);\n\n  useEffect(() => {\n    const someParts = (\n      activeFilter.includes(FilterItems.SCREEN) ? currentActivityTree : specificActivityTree || []\n    ).reduce((acc: any, activity: any) => acc.concat(activity.content.partsLayout || []), []);\n    setAllParts(someParts);\n  }, [currentActivityTree, specificActivityTree, activeFilter]);\n\n  return (\n    <OverlayTrigger\n      rootClose\n      trigger=\"click\"\n      placement={placement}\n      container={vpContainerRef.current}\n      onExit={() => setIsFilterMenuOpen(false)}\n      overlay={\n        <Popover id={`aa-variable-picker`}>\n          <Popover.Title as=\"h3\">{`Variable Picker`}</Popover.Title>\n          <Popover.Content>\n            <div className=\"target-select-container\">\n              <div className=\"input-group input-group-sm flex-grow-1\">\n                <div className=\"input-group-prepend\" title=\"filter\">\n                  <div className=\"input-group-text\">\n                    <i className=\"fa fa-filter\" />\n                  </div>\n                </div>\n                <Dropdown className=\"flex-grow-1\" show={isFilterMenuOpen}>\n                  <Dropdown.Toggle\n                    id=\"target-select\"\n                    size=\"sm\"\n                    split\n                    className=\"variable-picker-dropdown d-flex align-items-center w-100 flex-grow-1\"\n                    onClick={() => setIsFilterMenuOpen(!isFilterMenuOpen)}\n                  >\n                    <span className=\"w-100 d-flex\">{activeFilter}</span>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu\n                    className=\"w-100\"\n                    onClick={() => setIsFilterMenuOpen(!isFilterMenuOpen)}\n                    show={isFilterMenuOpen}\n                    rootCloseEvent=\"click\"\n                  >\n                    <Dropdown.Item\n                      active={activeFilter === FilterItems.SCREEN}\n                      onClick={() => {\n                        setActiveFilter(FilterItems.SCREEN);\n                        setSpecificSequenceId('stage');\n                      }}\n                    >\n                      {FilterItems.SCREEN}\n                    </Dropdown.Item>\n                    {context !== 'init' && (\n                      <>\n                        <Dropdown.Item\n                          active={activeFilter === FilterItems.SESSION}\n                          onClick={() => {\n                            setActiveFilter(FilterItems.SESSION);\n                            setSpecificSequenceId('session');\n                          }}\n                        >\n                          {FilterItems.SESSION}\n                        </Dropdown.Item>\n                        {context !== 'mutate' && (\n                          <>\n                            <Dropdown.Item\n                              active={activeFilter === FilterItems.VARIABLES}\n                              onClick={() => {\n                                setActiveFilter(FilterItems.VARIABLES);\n                                setSpecificSequenceId('variables');\n                              }}\n                            >\n                              {FilterItems.VARIABLES}\n                            </Dropdown.Item>\n\n                            <Dropdown.Divider />\n                            <Dropdown.Header>Other Screens</Dropdown.Header>\n                            <div className=\"screen-picker-container\">\n                              <SequenceDropdown\n                                items={hierarchy}\n                                onChange={onChangeHandler}\n                                value={'next'}\n                                showNextBtn={false}\n                              />\n                            </div>\n                          </>\n                        )}\n                      </>\n                    )}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n            <div className=\"activity-tree\">\n              {activeFilter === FilterItems.SESSION && <SessionTemplate />}\n              {activeFilter === FilterItems.VARIABLES && <VariableTemplate />}\n              {activeFilter !== FilterItems.SESSION && activeFilter !== FilterItems.VARIABLES && (\n                <Accordion>\n                  {allParts.map((part: Record<string, string>, index: number) => (\n                    <Fragment key={part.id}>{getPartTypeTemplate(part, index)}</Fragment>\n                  ))}\n                </Accordion>\n              )}\n            </div>\n          </Popover.Content>\n        </Popover>\n      }\n    >\n      <Button className=\"input-group-text\">\n        <i className=\"fa fa-crosshairs\" />\n      </Button>\n    </OverlayTrigger>\n  );\n};\n"]}