{"version":3,"file":"HeaderNav.jsx","sourceRoot":"","sources":["../../../../../src/apps/authoring/components/HeaderNav.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectPaths,\n  selectProjectSlug,\n  selectReadOnly,\n  selectRevisionSlug,\n  setShowDiagnosticsWindow,\n} from '../store/app/slice';\nimport AddComponentToolbar from './ComponentToolbar/AddComponentToolbar';\nimport ComponentSearchContextMenu from './ComponentToolbar/ComponentSearchContextMenu';\n\ninterface HeaderNavProps {\n  panelState: any;\n  isVisible: boolean;\n}\n\nconst HeaderNav: React.FC<HeaderNavProps> = (props: HeaderNavProps) => {\n  const { panelState, isVisible } = props;\n  const projectSlug = useSelector(selectProjectSlug);\n  const revisionSlug = useSelector(selectRevisionSlug);\n  const paths = useSelector(selectPaths);\n  const isReadOnly = useSelector(selectReadOnly);\n  const PANEL_SIDE_WIDTH = '270px';\n\n  const dispatch = useDispatch();\n\n  const url = `/authoring/project/${projectSlug}/preview/${revisionSlug}`;\n  const windowName = `preview-${projectSlug}`;\n\n  const handleReadOnlyClick = () => {\n    // TODO: show a modal offering to confirm if you want to disable read only\n    // but changes that were made will be lost. better right now to just use browser refresh\n  };\n\n  const handleDiagnosticsClick = () => {\n    dispatch(setShowDiagnosticsWindow({ show: true }));\n  };\n\n  return (\n    paths && (\n      <nav\n        className={`aa-header-nav top-panel overflow-hidden${\n          isVisible ? ' open' : ''\n        } d-flex aa-panel-section-title-bar`}\n        style={{\n          alignItems: 'center',\n          left: panelState['left'] ? '335px' : '65px', // 335 = PANEL_SIDE_WIDTH + 65px (torus sidebar width)\n          right: panelState['right'] ? PANEL_SIDE_WIDTH : 0,\n        }}\n      >\n        <div className=\"btn-toolbar\" role=\"toolbar\">\n          <div className=\"btn-group px-3 border-right align-items-center\" role=\"group\">\n            <AddComponentToolbar />\n            <ComponentSearchContextMenu />\n          </div>\n          <div className=\"btn-group pl-3 align-items-center\" role=\"group\" aria-label=\"Third group\">\n            <OverlayTrigger\n              placement=\"bottom\"\n              delay={{ show: 150, hide: 150 }}\n              overlay={\n                <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n                  Preview\n                </Tooltip>\n              }\n            >\n              <span>\n                <button className=\"px-2 btn btn-link\" onClick={() => window.open(url, windowName)}>\n                  <img src={`${paths.images}/icons/icon-preview.svg`}></img>\n                </button>\n              </span>\n            </OverlayTrigger>\n            <OverlayTrigger\n              placement=\"bottom\"\n              delay={{ show: 150, hide: 150 }}\n              overlay={\n                <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n                  Diagnostics\n                </Tooltip>\n              }\n            >\n              <span>\n                <button className=\"px-2 btn btn-link\" onClick={handleDiagnosticsClick}>\n                  <i\n                    className=\"fa fa-wrench\"\n                    style={{ fontSize: 32, color: '#333', verticalAlign: 'middle' }}\n                  />\n                </button>\n              </span>\n            </OverlayTrigger>\n            {isReadOnly && (\n              <OverlayTrigger\n                placement=\"bottom\"\n                delay={{ show: 150, hide: 150 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\" style={{ fontSize: '12px' }}>\n                    Read Only\n                  </Tooltip>\n                }\n              >\n                <span>\n                  <button className=\"px-2 btn btn-link\" onClick={handleReadOnlyClick}>\n                    <i\n                      className=\"fa fa-exclamation-triangle\"\n                      style={{ fontSize: 40, color: 'goldenrod' }}\n                    />\n                  </button>\n                </span>\n              </OverlayTrigger>\n            )}\n          </div>\n        </div>\n      </nav>\n    )\n  );\n};\n\nexport default HeaderNav;\n"]}