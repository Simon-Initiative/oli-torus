{"version":3,"file":"app.jsx","sourceRoot":"","sources":["../../../src/apps/app.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAC7D,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,gBAAgB,EAAE,MAAM,cAAc,CAAC;AAEhD,MAAM,UAAU,iBAAiB,CAAkB,SAAuC;IACxF,0FAA0F;IAC1F,iFAAiF;IACjF,IAAI,KAAK,GAAG,cAAc,EAAE,CAAC;IAE5B,MAAc,CAAC,mBAAmB,GAAG,CAAC,UAAe,EAAE,MAAW,EAAE,EAAE;QACrE,IAAI,aAAa,GAAQ,EAAE,CAAC;QAC5B,IAAI;YACF,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SAC9D;QAAC,OAAO,GAAG,EAAE;YACZ,wCAAwC;SACzC;QACD,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,IAAI;YACF,eAAe,GAAG,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACtD;QAAC,OAAO,GAAG,EAAE;YACZ,QAAQ;SACT;QAED,IAAI,mBAAmB,GAAQ,EAAE,CAAC;QAClC,IAAI;YACF,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;SAC1E;QAAC,OAAO,GAAG,EAAE;YACZ,wCAAwC;SACzC;QACD,IAAI,wBAAwB,GAAQ,EAAE,CAAC;QACvC,IAAI;YACF,wBAAwB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAClF,MAAc,CAAC,oBAAoB,CAAC,GAAG,wBAAwB,CAAC;SAClE;QAAC,OAAO,GAAG,EAAE;YACZ,wCAAwC;SACzC;QACD,MAAM,KAAK,mCACN,MAAM,KACT,OAAO,EAAE,aAAa,EACtB,SAAS,EAAE,eAAe,EAC1B,aAAa,EAAE,mBAAmB,EAClC,kBAAkB,EAAE,wBAAwB,GAC7C,CAAC;QAEF,0DAA0D;QAE1D,QAAQ,CAAC,MAAM,CACb,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CACrB;QAAA,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,EACrB;QAAA,CAAC,YAAY,CAAC,AAAD,EACf;MAAA,EAAE,QAAQ,CAAC,EACX,UAAU,CACX,CAAC;IACJ,CAAC,CAAC;IAED,MAAc,CAAC,KAAK,GAAG;QACtB,cAAc,EAAE,CAAC,IAAS,EAAE,EAAE;YAC5B,KAAK,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;KACF,CAAC;IAEF,2DAA2D;IAC1D,MAAc,CAAC,KAAK,GAAG,KAAK,CAAC;AAChC,CAAC","sourcesContent":["import { ModalDisplay } from 'components/modal/ModalDisplay';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { State } from 'state/index';\nimport { configureStore } from 'state/store';\nimport { Maybe } from 'tsmonad';\nimport { b64DecodeUnicode } from 'utils/decode';\n\nexport function defineApplication<T extends State>(Component: React.FunctionComponent<any>) {\n  // TODO, allow a customized, per app state (both initial state and collection of reducers)\n  // to be passed into this function, instead of simply using a shared common state\n  let store = configureStore();\n\n  (window as any).oliMountApplication = (mountPoint: any, params: any) => {\n    let parsedContent: any = {};\n    try {\n      parsedContent = JSON.parse(b64DecodeUnicode(params.content));\n    } catch (err) {\n      // should have been json, error handling\n    }\n    let parsedPageTitle = '';\n    try {\n      parsedPageTitle = b64DecodeUnicode(params.pageTitle);\n    } catch (err) {\n      //ignore\n    }\n\n    let parsedActivityTypes: any = [];\n    try {\n      parsedActivityTypes = JSON.parse(b64DecodeUnicode(params.activityTypes));\n    } catch (err) {\n      // should have been json, error handling\n    }\n    let parsedPartComponentTypes: any = [];\n    try {\n      parsedPartComponentTypes = JSON.parse(b64DecodeUnicode(params.partComponentTypes));\n      (window as any)['partComponentTypes'] = parsedPartComponentTypes;\n    } catch (err) {\n      // should have been json, error handling\n    }\n    const props = {\n      ...params,\n      content: parsedContent,\n      pageTitle: parsedPageTitle,\n      activityTypes: parsedActivityTypes,\n      partComponentTypes: parsedPartComponentTypes,\n    };\n\n    // console.log('MOUNT UP', { props, params, mountPoint });\n\n    ReactDOM.render(\n      <Provider store={store}>\n        <Component {...props} />\n        <ModalDisplay />\n      </Provider>,\n      mountPoint,\n    );\n  };\n\n  (window as any).store = {\n    configureStore: (json: any) => {\n      store = configureStore(json);\n    },\n  };\n\n  // Expose other libraries to server-side rendered templates\n  (window as any).Maybe = Maybe;\n}\n"]}