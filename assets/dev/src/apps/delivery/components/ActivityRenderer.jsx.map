{"version":3,"file":"ActivityRenderer.jsx","sourceRoot":"","sources":["../../../../../src/apps/delivery/components/ActivityRenderer.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport { defaultGlobalEnv, getValue } from 'adaptivity/scripting';\nimport {\n  EvaluationResponse,\n  PartActivityResponse,\n  RequestHintResponse,\n  ResetActivityResponse,\n} from 'components/activities/DeliveryElement';\nimport {\n  ActivityModelSchema,\n  ActivityState,\n  ClientEvaluation,\n  makeFeedback,\n  PartResponse,\n  PartState,\n  StudentResponse,\n  Success,\n} from 'components/activities/types';\nimport { Environment } from 'janus-script';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { clone } from 'utils/common';\nimport { contexts } from '../../../types/applicationContext';\nimport { selectCurrentActivityId } from '../store/features/activities/slice';\nimport {\n  CheckResults,\n  selectHistoryNavigationActivity,\n  selectInitPhaseComplete,\n  selectInitStateFacts,\n  selectLastCheckResults,\n  selectLastCheckTriggered,\n  selectLastMutateChanges,\n  selectLastMutateTriggered,\n} from '../store/features/adaptivity/slice';\nimport { debounce } from 'lodash';\nimport * as Extrinsic from 'data/persistence/extrinsic';\nimport { selectPreviewMode, selectUserId } from '../store/features/page/slice';\nimport { NotificationType } from './NotificationContext';\nimport { selectCurrentActivityTree } from '../store/features/groups/selectors/deck';\nimport { templatizeText } from './TextParser';\n\ninterface ActivityRendererProps {\n  activity: ActivityModelSchema;\n  attempt: ActivityState;\n  onActivitySave?: any;\n  onActivitySubmit?: any;\n  onActivityReset?: any;\n  onActivitySavePart?: any;\n  onActivitySubmitPart?: any;\n  onActivityResetPart?: any;\n  onActivityRequestHint?: any;\n  onActivitySubmitEvaluations?: any;\n  onActivityReady?: any;\n  onRequestLatestState?: any;\n  adaptivityDomain?: string; // currently 'stage' or 'app'\n}\n\nconst defaultHandler = async () => {\n  /* console.log('DEFAULT HANDLER AR'); */\n  return true;\n};\n\n// because of events and function references, we need to store state outside of the function\nconst sharedAttemptStateMap = new Map();\n\nconst AllAttemptStateList: {\n  activityId: string | undefined;\n  attemptGuid: string;\n  attempt: unknown;\n}[] = [];\n// the activity renderer should be capable of handling *any* activity type, not just adaptive\n// most events should be simply bubbled up to the layout renderer for handling\nconst ActivityRenderer: React.FC<ActivityRendererProps> = ({\n  activity,\n  attempt,\n  onActivitySave = defaultHandler,\n  onActivitySubmit = defaultHandler,\n  onActivityReset = defaultHandler,\n  onActivitySavePart = defaultHandler,\n  onActivitySubmitPart = defaultHandler,\n  onActivityRequestHint = defaultHandler,\n  onActivityResetPart = defaultHandler,\n  onActivitySubmitEvaluations = defaultHandler,\n  onActivityReady = defaultHandler,\n  onRequestLatestState = async () => ({ snapshot: {} }),\n  adaptivityDomain = 'stage',\n}) => {\n  const isPreviewMode = useSelector(selectPreviewMode);\n  const currentUserId = useSelector(selectUserId);\n\n  const saveUserData = async (attemptGuid: string, partAttemptGuid: string, payload: any) => {\n    const objId = `${payload.key}`;\n    await debouncedSaveData({ isPreviewMode, payload, objId, value: payload.value });\n  };\n\n  const readUserData = async (attemptGuid: string, partAttemptGuid: string, payload: any) => {\n    // Read only the key from the simid\n    const objId = `${payload.key}`;\n    const data = await debouncedReadData({ isPreviewMode, payload, objId });\n    return data;\n  };\n\n  const debouncedReadData = debounce(\n    async ({ isPreviewMode, payload, objId }) => {\n      const retrievedData = await Extrinsic.readGlobalUserState([payload.simId], isPreviewMode);\n      return retrievedData?.[payload.simId]?.[objId];\n    },\n    500,\n    { maxWait: 10000, leading: true, trailing: false },\n  );\n\n  const debouncedSaveData = debounce(\n    async ({ isPreviewMode, payload, objId, value }) => {\n      await Extrinsic.updateGlobalUserState({ [payload.simId]: { [objId]: value } }, isPreviewMode);\n    },\n    200,\n    { maxWait: 10000, leading: true, trailing: false },\n  );\n\n  const activityState: ActivityState = {\n    attemptGuid: 'foo',\n    attemptNumber: 1,\n    dateEvaluated: null,\n    score: null,\n    outOf: null,\n    parts: [],\n    hasMoreAttempts: true,\n    hasMoreHints: true,\n  };\n\n  const partState: PartState = {\n    attemptGuid: 'TODO1234',\n    attemptNumber: 1,\n    dateEvaluated: null,\n    score: null,\n    outOf: null,\n    response: '',\n    feedback: makeFeedback(''),\n    hints: [],\n    partId: 1,\n    hasMoreAttempts: false,\n    hasMoreHints: false,\n  };\n\n  const onSaveActivity = async (attemptGuid: string, partResponses: PartResponse[]) => {\n    await onActivitySave(activity.id, attemptGuid, partResponses);\n    // TODO: use something from parent call to determine if is actually a success\n    const result: Success = {\n      type: 'success',\n    };\n    return result;\n  };\n\n  const onSubmitActivity = async (attemptGuid: string, partResponses: PartResponse[]) => {\n    await onActivitySubmit(activity.id, attemptGuid, partResponses);\n    // TODO: use something from parent call to determine if is actually a success\n    const result: EvaluationResponse = {\n      type: 'success',\n      actions: [],\n    };\n    return result;\n  };\n\n  const onResetActivity = async (attemptGuid: string) => {\n    await onActivityReset(activity.id, attemptGuid);\n    // TODO\n    const result: ResetActivityResponse = {\n      type: 'success',\n      attemptState: activityState,\n      model: activity,\n    };\n    return result;\n  };\n\n  const onRequestHint = async (attemptGuid: string, partAttemptGuid: string) => {\n    await onActivityRequestHint(activity.id, attemptGuid, partAttemptGuid);\n    const result: RequestHintResponse = {\n      type: 'success',\n      hasMoreHints: false,\n    };\n    return result;\n  };\n\n  const onSavePart = async (\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => {\n    /* console.log('onSavePart (ActivityRenderer)', { attemptGuid, partAttemptGuid, response }); */\n\n    const result = await onActivitySavePart(activity.id, attemptGuid, partAttemptGuid, response);\n\n    return result;\n  };\n\n  const onSubmitPart = async (\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => {\n    await onActivitySubmitPart(activity.id, attemptGuid, partAttemptGuid, response);\n    const result: EvaluationResponse = {\n      type: 'success',\n      actions: [],\n    };\n    return result;\n  };\n\n  const onResetPart = async (attemptGuid: string, partAttemptGuid: string) => {\n    await onActivityResetPart(activity.id, attemptGuid, partAttemptGuid);\n    const result: PartActivityResponse = {\n      type: 'success',\n      attemptState: partState,\n    };\n    return result;\n  };\n\n  const onSubmitEvaluations = async (\n    attemptGuid: string,\n    clientEvaluations: ClientEvaluation[],\n  ) => {\n    await onActivitySubmitEvaluations(activity.id, attemptGuid, clientEvaluations);\n\n    const result: EvaluationResponse = {\n      type: 'success',\n      actions: [],\n    };\n    return result;\n  };\n\n  const onReady = async (attemptGuid: string) => {\n    const results = await onActivityReady(activity.id, attemptGuid);\n    const result: Success = {\n      type: 'success',\n    };\n    // provide each activity with a local scope based on the global scope\n    // should allow it to do some same screen interactivity/adaptivity\n    const activityScriptEnv = new Environment(defaultGlobalEnv);\n    /* evalScript(`let global.screenId = \"${activity.id}\"`, activityScriptEnv); */\n    // BS: TODO make compatible with *any* activity\n    return { ...results, ...result, env: activityScriptEnv, domain: adaptivityDomain };\n  };\n\n  const onResize = async (attemptGuid: string) => {\n    // no need to do anything for now.\n    /*  console.log('onResize called'); */\n  };\n\n  const bridgeEvents: Record<string, any> = {\n    saveActivity: onSaveActivity,\n    submitActivity: onSubmitActivity,\n    resetActivity: onResetActivity,\n    savePart: onSavePart,\n    submitPart: onSubmitPart,\n    resetPart: onResetPart,\n    requestHint: onRequestHint,\n    submitEvaluations: onSubmitEvaluations,\n    activityReady: onReady,\n    resizePart: onResize,\n    getUserData: readUserData,\n    setUserData: saveUserData,\n  };\n\n  const [isReady, setIsReady] = useState(false);\n  const [model, setModel] = useState('');\n  const [state, setState] = useState('');\n\n  useEffect(() => {\n    // listen at the document level for events coming from activities\n    // because using a ref to listen to the specific activity gets messed up\n    // with the React render cycle, need to start listening *BEFORE* it renders\n    const wcEventHandler = async (e: CustomEvent) => {\n      const { continuation, attemptGuid, partAttemptGuid, payload } = e.detail;\n      let isForMe = false;\n\n      const currentAttempt = sharedAttemptStateMap.get(activity.id);\n      const currentActivityAllAttempt = AllAttemptStateList.filter(\n        (activityAttempt) =>\n          activityAttempt.activityId === activity.id && activityAttempt.attemptGuid === attemptGuid,\n      );\n\n      if (attemptGuid === currentAttempt.attemptGuid || currentActivityAllAttempt?.length) {\n        /* console.log('EVENT FOR ME', { e, activity, attempt, currentAttempt }); */\n        isForMe = true;\n      }\n      const handler = bridgeEvents[e.type];\n      if (isForMe && handler) {\n        const result = await handler(attemptGuid, partAttemptGuid, payload);\n        if (continuation) {\n          continuation(result);\n        }\n      }\n    };\n\n    Object.keys(bridgeEvents).forEach((eventName) => {\n      document.addEventListener(eventName, wcEventHandler);\n    });\n\n    // send a state snapshot of everything in with the attempt\n    // because we need at least read only access to cross activity values and extrinsic\n    // *maybe* better to have a onInit callback and send it as a response?\n    // because this is BIG\n    /* const envSnapshot = getEnvState(defaultGlobalEnv);\n    const fullState = { ...attempt, snapshot: envSnapshot }; */\n    setState(JSON.stringify(attempt));\n    sharedAttemptStateMap.set(activity.id, attempt);\n\n    setModel(JSON.stringify(activity));\n\n    setIsReady(true);\n\n    return () => {\n      Object.keys(bridgeEvents).forEach((eventName) => {\n        document.removeEventListener(eventName, wcEventHandler);\n      });\n      setIsReady(false);\n      sharedAttemptStateMap.delete(activity.id);\n    };\n  }, []);\n\n  const ref = useRef<any>(null);\n\n  const lastCheckTriggered = useSelector(selectLastCheckTriggered);\n  const lastCheckResults = useSelector(selectLastCheckResults);\n  const [checkInProgress, setCheckInProgress] = useState(false);\n  const historyModeNavigation = useSelector(selectHistoryNavigationActivity);\n  useEffect(() => {\n    if (!lastCheckTriggered || !ref.current) {\n      return;\n    }\n    setCheckInProgress(true);\n    ref.current.notify(NotificationType.CHECK_STARTED, { ts: lastCheckTriggered });\n  }, [lastCheckTriggered]);\n\n  const notifyCheckComplete = async (results: CheckResults) => {\n    if (!ref.current) {\n      return;\n    }\n    const { snapshot } = await onRequestLatestState();\n    const payload = { ...clone(results), snapshot };\n    setCheckInProgress(false);\n    if (!ref.current) {\n      return;\n    }\n    ref.current.notify(NotificationType.CHECK_COMPLETE, payload);\n  };\n\n  useEffect(() => {\n    if (checkInProgress && lastCheckResults && lastCheckResults.timestamp === lastCheckTriggered) {\n      /* console.log('AR Check Effect', { lastCheckTriggered, lastCheckResults }); */\n      const currentAttempt = sharedAttemptStateMap.get(activity.id);\n      if (currentAttempt.activityId === lastCheckResults.attempt.activityId) {\n        sharedAttemptStateMap.set(activity.id, lastCheckResults.attempt);\n        AllAttemptStateList.push({\n          activityId: activity?.id,\n          attemptGuid: lastCheckResults.attempt.attemptGuid,\n          attempt: lastCheckResults.attempt,\n        });\n      }\n      notifyCheckComplete(lastCheckResults);\n    }\n  }, [checkInProgress, lastCheckResults, lastCheckTriggered]);\n\n  // BS: it might not should know about this currentActivityId, though in other layouts maybe (single view)\n  // maybe it will just be the same and never actually change.\n  // TODO: check if it needs to come from somewhere higher\n  const currentActivityId = useSelector(selectCurrentActivityId);\n  const initPhaseComplete = useSelector(selectInitPhaseComplete);\n  const initStateFacts = useSelector(selectInitStateFacts);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const updateGlobalState = async (snapshot: any, stateFacts: any) => {\n    const payloadData = {} as any;\n    stateFacts.map((fact: string) => {\n      // EverApp Information\n      if (fact.startsWith('app.')) {\n        const data = fact.split('.');\n        const objId = data.splice(2).join('.');\n        const value = snapshot[fact];\n        payloadData[data[1]] = { ...payloadData[data[1]], [objId]: value };\n      }\n    });\n    await Extrinsic.updateGlobalUserState(payloadData, isPreviewMode);\n  };\n\n  const notifyContextChanged = async () => {\n    // even though ActivityRenderer still lives inside the main react app ecosystem\n    // it can't logically access the \"localized\" version of the state snapshot\n    // because this is a single activity and doesn't know about Layout (Deck View) behavior\n    // so it needs to ask the parent for it.\n    const { snapshot } = await onRequestLatestState();\n\n    updateGlobalState(snapshot, initStateFacts);\n\n    const finalInitSnapshot = initStateFacts.reduce((acc: any, key: string) => {\n      let target = key;\n      if (target.indexOf('stage') === 0) {\n        const lstVar = target.split('.');\n        if (lstVar?.length > 1) {\n          const ownerActivity = currentActivityTree?.find(\n            (activity) => !!activity.content.partsLayout.find((p: any) => p.id === lstVar[1]),\n          );\n          target = ownerActivity ? `${ownerActivity.id}|${target}` : `${target}`;\n        }\n      }\n      const originalValue = snapshot[target];\n      const typeOfOriginalValue = typeof originalValue;\n      const evaluatedValue =\n        typeOfOriginalValue === 'string'\n          ? templatizeText(originalValue, snapshot, defaultGlobalEnv, true)\n          : originalValue;\n      acc[key] = evaluatedValue;\n      return acc;\n    }, {});\n    ref.current.notify(NotificationType.CONTEXT_CHANGED, {\n      currentActivityId,\n      mode: historyModeNavigation ? contexts.REVIEW : contexts.VIEWER,\n      snapshot,\n      initStateFacts: finalInitSnapshot,\n      domain: adaptivityDomain,\n    });\n  };\n\n  useEffect(() => {\n    if (!initPhaseComplete || !ref.current) {\n      return;\n    }\n    notifyContextChanged();\n  }, [initPhaseComplete]);\n\n  const mutationTriggered = useSelector(selectLastMutateTriggered);\n  const mutateChanges = useSelector(selectLastMutateChanges);\n\n  const notifyStateMutation = async () => {\n    ref.current.notify(NotificationType.STATE_CHANGED, {\n      mutateChanges,\n    });\n  };\n  useEffect(() => {\n    if (!mutationTriggered || !ref.current) {\n      return;\n    }\n    notifyStateMutation();\n  }, [mutationTriggered]);\n  const handleStateChangeEvents = async (changes: any) => {\n    if (!ref.current) {\n      return;\n    }\n    const currentStateSnapshot: any = {};\n    if (changes?.changed?.length > 1) {\n      changes.changed.forEach((element: string, index: number) => {\n        if (index > 0) {\n          const variable = element.split(`${currentActivityId}|`);\n          const variableName = variable?.length > 1 ? variable[1] : element;\n          currentStateSnapshot[variableName] = getValue(element, defaultGlobalEnv);\n        }\n      });\n\n      if (Object.keys(currentStateSnapshot).length > 0) {\n        ref.current.notify(NotificationType.STATE_CHANGED, {\n          mutateChanges: currentStateSnapshot,\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    defaultGlobalEnv.addListener('change', handleStateChangeEvents);\n    return () => {\n      defaultGlobalEnv.removeListener('change', handleStateChangeEvents);\n    };\n  }, [activity.id]);\n  const elementProps = {\n    ref,\n    graded: false,\n    model,\n    state,\n    preview: isPreviewMode,\n    progressState: 'progressState',\n    userId: currentUserId,\n    onSaveActivity,\n    onSubmitActivity,\n    onRequestHint,\n    onResetActivity,\n    onResetPart,\n    onSavePart,\n    onSubmitEvaluations,\n    onSubmitPart,\n    onReady,\n    onResize,\n    onSetData: saveUserData,\n    onGetData: readUserData,\n  };\n\n  // don't render until we're already listening!\n  if (!isReady) {\n    return null;\n  }\n  return React.createElement(activity.activityType?.delivery_element, elementProps, null);\n};\n\nexport default ActivityRenderer;\n"]}