{"version":3,"file":"Adaptivity.jsx","sourceRoot":"","sources":["../../../../../../src/apps/delivery/components/preview-tools/Adaptivity.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-prototype-builtins */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { triggerCheck } from '../../store/features/adaptivity/actions/triggerCheck';\nimport { setLastCheckResults } from '../../store/features/adaptivity/slice';\n\ninterface AdaptivityProps {\n  currentActivity: any;\n}\n// Adaptivity Placeholder\nconst Adaptivity: React.FC<AdaptivityProps> = ({ currentActivity }) => {\n  const [expandedRules, setExpandedRules]: any = useState({});\n  const dispatch = useDispatch();\n\n  const triggerAction = async (e: any, rule: any) => {\n    e.preventDefault();\n\n    // Strip out any rules that are not the selected rule\n    const customRules = currentActivity.authoring?.rules?.filter(\n      (activityRule: any) => activityRule.id === rule.id,\n    );\n    // Construct custom check results to fire after triggering the check event\n    const customCheckResults = [\n      {\n        params: {\n          actions: [...rule.event.params.actions],\n          correct: !!rule.correct,\n          default: !!rule.default,\n          order: rule.priority,\n        },\n        type: rule.event.type,\n      },\n    ];\n\n    // Send in the custom rules for processing\n    dispatch(triggerCheck({ activityId: currentActivity.id, customRules }));\n    // Fire off our custom check results\n    await dispatch(setLastCheckResults({ results: customCheckResults }));\n  };\n\n  useEffect(() => {\n    setExpandedRules({});\n  }, [currentActivity]);\n\n  // helper because of lint\n  const hasOwnProperty = (obj: unknown, property: string) =>\n    Object.prototype.hasOwnProperty.call(obj || {}, property);\n\n  return (\n    <div className=\"adaptivity\">\n      <div className=\"accordion\">\n        {/* InitState */}\n        {currentActivity?.content?.custom?.facts?.length > 0 && (\n          <div key={`init-${currentActivity.id}`} className=\"card initState\">\n            <div className=\"card-header p-2\" id={`initHeading-${currentActivity.id}`}>\n              <h2 className=\"mb-0\">\n                <button\n                  className=\"btn btn-link btn-block text-left\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target={`#collapse`}\n                  aria-expanded={expandedRules[`initState-${currentActivity.id}`]}\n                  aria-controls={`collapse`}\n                  onClick={(e) =>\n                    setExpandedRules({\n                      ...expandedRules,\n                      [`initState-${currentActivity.id}`]:\n                        !expandedRules[`initState-${currentActivity.id}`],\n                    })\n                  }\n                >\n                  <span\n                    className={`chevron-arrow mr-2${\n                      expandedRules[`initState-${currentActivity.id}`] ? ' rotate' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.646 1.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L10.293 8 4.646 2.354a.5.5 0 010-.708z\"\n                      />\n                    </svg>\n                  </span>\n                  Initial State\n                </button>\n              </h2>\n            </div>\n            <div\n              id={`collapse`}\n              className=\"collapse\"\n              aria-labelledby={`initHeading-${currentActivity.id}`}\n            >\n              <div className=\"mt-2 pt-2 px-3 font-weight-bold text-uppercase\">Facts</div>\n              <div className=\"card-body pt-2\">\n                <ul className=\"list-group\">\n                  {currentActivity?.content?.custom?.facts.map((fact: any, factIndex: number) => (\n                    <li key={factIndex} className=\"list-group-item\">{`${fact.target} ${\n                      fact.operator\n                    } ${JSON.stringify(fact.value)}`}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n        {/* Rules */}\n        {currentActivity?.authoring?.rules?.map((rule: any, ruleIndex: number) => (\n          <div\n            key={`${rule.id}-${ruleIndex}`}\n            className={`card${rule.correct ? ' correct' : ' incorrect'}`}\n          >\n            <div className=\"card-header p-2\" id={`heading${ruleIndex}`}>\n              <h2 className=\"mb-0\">\n                <button\n                  className=\"btn btn-link btn-block text-left\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target={`#collapse${ruleIndex}`}\n                  aria-expanded={expandedRules[`rule-${ruleIndex}`]}\n                  aria-controls={`collapse${ruleIndex}`}\n                  onClick={(e) =>\n                    setExpandedRules({\n                      ...expandedRules,\n                      [`rule-${ruleIndex}`]: !expandedRules[`rule-${ruleIndex}`],\n                    })\n                  }\n                >\n                  <span\n                    className={`chevron-arrow mr-2${\n                      expandedRules[`rule-${ruleIndex}`] ? ' rotate' : ''\n                    }`}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M4.646 1.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L10.293 8 4.646 2.354a.5.5 0 010-.708z\"\n                      />\n                    </svg>\n                  </span>\n                  {rule.name}\n                </button>\n              </h2>\n            </div>\n            <div\n              id={`collapse${ruleIndex}`}\n              className=\"collapse\"\n              aria-labelledby={`heading${ruleIndex}`}\n            >\n              <div className=\"mt-2 pt-2 px-3 font-weight-bold text-uppercase\">Conditions</div>\n              <div className=\"card-body pt-2\">\n                <ul className=\"list-group\">\n                  {/* Conditions for ALL */}\n                  {hasOwnProperty(rule.conditions, 'all') && (\n                    <>\n                      {rule.conditions?.all?.length === 0 && (\n                        <li className=\"list-group-item\">\n                          No conditions. This rule will always fire.\n                        </li>\n                      )}\n                      {rule.conditions?.all?.length > 0 &&\n                        rule.conditions.all.map((condition: any, conditionIndex: number) => (\n                          <li key={conditionIndex} className=\"list-group-item\">\n                            {`${condition.fact} ${condition.operator} ${JSON.stringify(\n                              condition.value,\n                            )}`}\n                          </li>\n                        ))}\n                    </>\n                  )}\n                  {/* Conditions for ANY */}\n                  {hasOwnProperty(rule.conditions, 'any') && (\n                    <>\n                      {rule.conditions?.any?.length === 0 && (\n                        <li className=\"list-group-item\">\n                          No conditions. This rule will always fire.\n                        </li>\n                      )}\n                      {rule.conditions?.any?.length > 0 &&\n                        rule.conditions.any.map((condition: any, conditionIndex: number) => (\n                          <li key={conditionIndex} className=\"list-group-item\">\n                            {`${condition.fact} ${condition.operator} ${JSON.stringify(\n                              condition.value,\n                            )}`}\n                          </li>\n                        ))}\n                    </>\n                  )}\n                </ul>\n              </div>\n              <div className=\"d-flex justify-content-between align-items-center px-3 font-weight-bold text-uppercase\">\n                Actions{' '}\n                <button\n                  onClick={(e) => triggerAction(e, rule)}\n                  type=\"button\"\n                  className=\"btn btn-sm btn-outline-primary d-flex px-1\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    fill=\"currentColor\"\n                  >\n                    <path d=\"M11.596 8.697l-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 010 1.393z\" />\n                  </svg>\n                </button>\n              </div>\n              <div className=\"card-body pt-2\">\n                <ul className=\"list-group\">\n                  {rule.event?.params?.actions?.length === 0 && (\n                    <li className=\"list-group-item\">No actions assigned.</li>\n                  )}\n                  {rule.event?.params?.actions?.length > 0 &&\n                    rule.event.params.actions.map((action: any, actionIndex: number) => (\n                      <li key={actionIndex} className=\"list-group-item\">\n                        <span className=\"text-capitalize\">{action.type}</span>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Adaptivity;\n"]}