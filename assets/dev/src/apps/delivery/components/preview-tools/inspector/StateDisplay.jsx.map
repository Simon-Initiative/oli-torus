{"version":3,"file":"StateDisplay.jsx","sourceRoot":"","sources":["../../../../../../../src/apps/delivery/components/preview-tools/inspector/StateDisplay.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-prototype-builtins */\n/* eslint-disable react/prop-types */\nimport React, { useCallback, useState } from 'react';\nimport { ApplyStateOperation } from '../../../../../adaptivity/scripting';\nimport AutoDetectInput from './AutoDetectInput';\nimport NestedStateDisplay from './NestedStateDisplay';\nimport { hasNesting } from './utils';\n\ninterface StateDisplayProps {\n  label: string;\n  state: any;\n  onChange?: (changeOp: ApplyStateOperation) => void;\n}\nconst StateDisplay: React.FC<StateDisplayProps> = ({ label, state, onChange }) => {\n  const [expandedPanels, setExpandedPanels]: any = useState({});\n  const handleValueChange = useCallback(\n    (changeOp: ApplyStateOperation) => {\n      /* console.log('STATE DISPLAY CHANGE BUBBLE', { changeOp }); */\n      if (onChange) {\n        onChange(changeOp);\n      }\n    },\n    [onChange],\n  );\n\n  return Object.keys(state).length > 0 ? (\n    <div className=\"card even\">\n      <div className=\"card-header p-2\" id={`headingRoot${label}`}>\n        <h2 className=\"mb-0\">\n          <button\n            className=\"btn btn-link btn-block text-left\"\n            type=\"button\"\n            // data-toggle=\"collapse\"\n            // data-target={`#collapseRoot${label}`}\n            aria-expanded={expandedPanels[`panel-Root${label}`]}\n            aria-controls={`collapseRoot${label}`}\n            onClick={() =>\n              setExpandedPanels({\n                ...expandedPanels,\n                [`panel-Root${label}`]: !expandedPanels[`panel-Root${label}`],\n              })\n            }\n          >\n            <span\n              className={`chevron-arrow mr-2${\n                expandedPanels[`panel-Root${label}`] ? ' rotate' : ''\n              }`}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\">\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.646 1.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L10.293 8 4.646 2.354a.5.5 0 010-.708z\"\n                />\n              </svg>\n            </span>\n            {label}\n          </button>\n        </h2>\n      </div>\n      <div\n        id={`collapseRoot${label}`}\n        className={`${expandedPanels[`panel-Root${label}`] ? '' : 'visually-hidden'}`}\n        aria-labelledby={`headingRoot${label}`}\n      >\n        <div className=\"card-body py-2\">\n          <ul className=\"list-group list-group-flush\">\n            {Object.keys(state)\n              .sort()\n              .map((level1: any, index: number) =>\n                !hasNesting(state[level1]) ? (\n                  <li key={`leaf-${level1}${index}`} className=\"list-group-item pr-0\">\n                    <div className=\"user-input\">\n                      <span className=\"stateKey\" title={level1}>\n                        {level1}\n                      </span>\n                      <AutoDetectInput\n                        label={level1}\n                        value={state[level1]}\n                        state={state}\n                        onChange={handleValueChange}\n                      />\n                    </div>\n                  </li>\n                ) : (\n                  <NestedStateDisplay\n                    key={`${level1}${index}`}\n                    rootLevel={level1}\n                    levelIndex={1}\n                    state={state}\n                    onChange={handleValueChange}\n                  />\n                ),\n              )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default StateDisplay;\n"]}