{"version":3,"file":"NestedStateDisplay.jsx","sourceRoot":"","sources":["../../../../../../../src/apps/delivery/components/preview-tools/inspector/NestedStateDisplay.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-prototype-builtins */\n/* eslint-disable react/prop-types */\nimport React, { useCallback, useState } from 'react';\nimport { ApplyStateOperation } from '../../../../../adaptivity/scripting';\nimport AutoDetectInput from './AutoDetectInput';\nimport { hasNesting } from './utils';\n\ninterface NestedStateDisplayProps {\n  rootLevel: any;\n  levelIndex: number;\n  state: any;\n  onChange?: (changeOp: ApplyStateOperation) => void;\n}\nconst NestedStateDisplay: React.FC<NestedStateDisplayProps> = ({\n  rootLevel,\n  levelIndex,\n  state,\n  onChange,\n}) => {\n  const [expandedPanels, setExpandedPanels]: any = useState({});\n  const handleValueChange = useCallback(\n    (changeOp: ApplyStateOperation) => {\n      /* console.log('NESTED CHANGE BUBBLE', { changeOp }); */\n      if (onChange) {\n        onChange(changeOp);\n      }\n    },\n    [onChange],\n  );\n\n  return (\n    <li key={`leaf-branch-${rootLevel}${levelIndex}`} className=\"list-group-item is-parent\">\n      {/* TODO Toggle even / odd based on index */}\n      <div\n        className=\"card-header p-0 m-0 rounded-lg mt-2 even\"\n        id={`heading${rootLevel}${levelIndex}`}\n      >\n        <button\n          className=\"btn btn-link btn-block text-left\"\n          type=\"button\"\n          // TODO: figure out why Bootstrap collapse is breaking in recursion\n          // data-toggle=\"collapse\"\n          // data-target={`#collapse${rootLevel}${levelIndex}`}\n          aria-expanded={expandedPanels[`panel-${rootLevel}${levelIndex}`]}\n          aria-controls={`collapse${rootLevel}${levelIndex}`}\n          onClick={() =>\n            setExpandedPanels({\n              ...expandedPanels,\n              [`panel-${rootLevel}${levelIndex}`]:\n                !expandedPanels[`panel-${rootLevel}${levelIndex}`],\n            })\n          }\n        >\n          <span\n            className={`chevron-arrow mr-2${\n              expandedPanels[`panel-${rootLevel}${levelIndex}`] ? ' rotate' : ''\n            }`}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M4.646 1.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L10.293 8 4.646 2.354a.5.5 0 010-.708z\"\n              />\n            </svg>\n          </span>\n          {rootLevel}\n        </button>\n      </div>\n      <div\n        id={`collapse${rootLevel}${levelIndex}`}\n        // TODO: reset className to 'collapse' after figuring out Bootstrap recursion issue\n        className={`${expandedPanels[`panel-${rootLevel}${levelIndex}`] ? '' : 'visually-hidden'}`}\n        aria-labelledby={`heading${rootLevel}${levelIndex}`}\n      >\n        <ul className=\"list-group list-group-flush\">\n          {state[rootLevel] &&\n            Object.keys(state[rootLevel])\n              .sort()\n              .map((level2: any) =>\n                !hasNesting(state[rootLevel][level2]) ? (\n                  <li key={`flat-${level2}${levelIndex + 1}`} className=\"list-group-item pr-0\">\n                    <div className=\"user-input\">\n                      <span className=\"stateKey\" title={level2}>\n                        {level2}\n                      </span>\n                      <AutoDetectInput\n                        label={level2}\n                        value={state[rootLevel][level2]}\n                        state={{ ...state[rootLevel] }}\n                        onChange={handleValueChange}\n                      />\n                    </div>\n                  </li>\n                ) : (\n                  <NestedStateDisplay\n                    key={`${level2}${levelIndex + 1}`}\n                    rootLevel={level2}\n                    levelIndex={levelIndex + 1}\n                    state={{ [level2]: { ...state[rootLevel][level2] } }}\n                    onChange={handleValueChange}\n                  />\n                ),\n              )}\n        </ul>\n      </div>\n    </li>\n  );\n};\nexport default NestedStateDisplay;\n"]}