{"version":3,"file":"NotificationContext.jsx","sourceRoot":"","sources":["../../../../../src/apps/delivery/components/NotificationContext.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAsB,IAAI,CAAC,CAAC;AAElF,MAAM,CAAN,IAAY,gBAQX;AARD,WAAY,gBAAgB;IAC1B,kDAA8B,CAAA;IAC9B,oDAAgC,CAAA;IAChC,kDAA8B,CAAA;IAC9B,sDAAkC,CAAA;IAClC,2CAAuB,CAAA;IACvB,oDAAgC,CAAA;IAChC,wDAAoC,CAAA;AACtC,CAAC,EARW,gBAAgB,KAAhB,gBAAgB,QAQ3B;AAID,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,OAAqB,EACrB,YAA8B,EAC9B,QAAa,EACE,EAAE;IACjB,OAAO,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC9C,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { EventEmitter } from 'events';\nimport React from 'react';\n\nexport const NotificationContext = React.createContext<EventEmitter | null>(null);\n\nexport enum NotificationType {\n  CHECK_STARTED = 'checkStarted',\n  CHECK_COMPLETE = 'checkComplete',\n  STATE_CHANGED = 'stateChanged',\n  CONTEXT_CHANGED = 'contextChanged',\n  CONFIGURE = 'configure',\n  CONFIGURE_SAVE = 'configureSave',\n  CONFIGURE_CANCEL = 'configureCancel',\n}\n\ntype UnsubscribeFn = () => void;\n\nexport const subscribeToNotification = (\n  emitter: EventEmitter,\n  notification: NotificationType,\n  listener: any,\n): UnsubscribeFn => {\n  emitter.on(notification.toString(), listener);\n  return () => {\n    emitter.off(notification.toString(), listener);\n  };\n};\n"]}