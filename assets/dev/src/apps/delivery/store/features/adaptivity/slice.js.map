{"version":3,"file":"slice.js","sourceRoot":"","sources":["../../../../../../../src/apps/delivery/store/features/adaptivity/slice.ts"],"names":[],"mappings":"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","sourcesContent":["import { createSelector, createSlice, PayloadAction, Slice } from '@reduxjs/toolkit';\nimport { RootState } from '../../rootReducer';\n\nexport interface CheckResults {\n  timestamp: number;\n  results?: any;\n  attempt?: any;\n  correct: boolean;\n  score: number;\n  outOf: number;\n}\nexport interface AdaptivityState {\n  isGoodFeedback: boolean;\n  currentFeedbacks: any[];\n  nextActivityId: string;\n  lastCheckTriggered: any; // timestamp\n  lastCheckResults: CheckResults;\n  restartLesson: boolean;\n  lessonEnded?: boolean;\n  lastMutateTriggered: any; // timestamp\n  lastMutateChanges: any;\n  initPhaseComplete: any; // timestamp\n  historyModeNavigation: boolean;\n  initStateFacts: any;\n}\n\nconst initialState: AdaptivityState = {\n  isGoodFeedback: false,\n  currentFeedbacks: [],\n  nextActivityId: '',\n  lastCheckTriggered: null,\n\n  lastCheckResults: {\n    timestamp: -1,\n    results: [],\n    attempt: null,\n    correct: false,\n    score: 0,\n    outOf: 0,\n  },\n  restartLesson: false,\n  lessonEnded: false,\n  lastMutateTriggered: null,\n  lastMutateChanges: null,\n  initPhaseComplete: null,\n  historyModeNavigation: false,\n  initStateFacts: [],\n};\n\nconst slice: Slice<AdaptivityState> = createSlice({\n  name: 'adaptivity',\n  initialState,\n  reducers: {\n    setIsGoodFeedback: (state, action: PayloadAction<{ isGood: boolean }>) => {\n      state.isGoodFeedback = action.payload.isGood;\n    },\n    setNextActivityId: (state, action: PayloadAction<{ activityId: string }>) => {\n      state.nextActivityId = action.payload.activityId;\n    },\n    setCurrentFeedbacks: (state, action: PayloadAction<{ feedbacks: any[] }>) => {\n      state.currentFeedbacks = action.payload.feedbacks;\n    },\n    setLastCheckTriggered: (state, action: PayloadAction<{ timestamp: any }>) => {\n      state.lastCheckTriggered = action.payload.timestamp;\n    },\n    setLastCheckResults: (state, action: PayloadAction<CheckResults>) => {\n      const { results, attempt, timestamp, correct, score, outOf } = action.payload;\n      state.lastCheckResults = { results, attempt, timestamp, correct, score, outOf };\n    },\n    setRestartLesson(state, action: PayloadAction<{ restartLesson: boolean }>) {\n      state.restartLesson = action.payload.restartLesson;\n    },\n    setLessonEnd(state, action: PayloadAction<{ lessonEnded: boolean }>) {\n      state.lessonEnded = action.payload.lessonEnded;\n    },\n    setMutationTriggered(state, action: PayloadAction<{ changes: any }>) {\n      state.lastMutateTriggered = Date.now();\n      state.lastMutateChanges = action.payload.changes;\n    },\n    setHistoryNavigationTriggered(\n      state,\n      action: PayloadAction<{ historyModeNavigation: boolean }>,\n    ) {\n      state.historyModeNavigation = action.payload.historyModeNavigation;\n    },\n    setInitPhaseComplete(state) {\n      state.initPhaseComplete = Date.now();\n    },\n    setInitStateFacts(state, action: PayloadAction<{ facts: any }>) {\n      state.initStateFacts = action.payload.facts;\n    },\n  },\n});\n\nexport const AdaptivitySlice = slice.name;\n\nexport const {\n  setIsGoodFeedback,\n  setNextActivityId,\n  setCurrentFeedbacks,\n  setLastCheckTriggered,\n  setLastCheckResults,\n  setRestartLesson,\n  setLessonEnd,\n  setMutationTriggered,\n  setInitPhaseComplete,\n  setHistoryNavigationTriggered,\n  setInitStateFacts,\n} = slice.actions;\n\n// selectors\nexport const selectState = (state: RootState): AdaptivityState =>\n  state[AdaptivitySlice] as AdaptivityState;\nexport const selectIsGoodFeedback = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.isGoodFeedback,\n);\nexport const selectCurrentFeedbacks = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.currentFeedbacks,\n);\nexport const selectNextActivityId = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.nextActivityId,\n);\nexport const selectRestartLesson = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.restartLesson,\n);\nexport const selectLessonEnd = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.lessonEnded,\n);\nexport const selectLastCheckTriggered = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.lastCheckTriggered,\n);\n\nexport const selectLastCheckResults = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.lastCheckResults,\n);\n\nexport const selectHistoryNavigationActivity = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.historyModeNavigation,\n);\nexport const selectInitStateFacts = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.initStateFacts,\n);\nexport const selectLastMutateTriggered = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.lastMutateTriggered,\n);\nexport const selectLastMutateChanges = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.lastMutateChanges,\n);\n\nexport const selectInitPhaseComplete = createSelector(\n  selectState,\n  (state: AdaptivityState) => state.initPhaseComplete,\n);\n\nexport default slice.reducer;\n"]}