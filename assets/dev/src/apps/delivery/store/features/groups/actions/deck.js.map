{"version":3,"file":"deck.js","sourceRoot":"","sources":["../../../../../../../../src/apps/delivery/store/features/groups/actions/deck.ts"],"names":[],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { handleValueExpression } from 'apps/delivery/layouts/deck/DeckLayoutFooter';\nimport { ActivityState } from 'components/activities/types';\nimport { getBulkActivitiesForAuthoring } from 'data/persistence/activity';\nimport {\n  getBulkAttemptState,\n  getPageAttemptState,\n  writePageAttemptState,\n} from 'data/persistence/state/intrinsic';\nimport { ResourceId } from 'data/types';\nimport guid from 'utils/guid';\nimport {\n  ApplyStateOperation,\n  bulkApplyState,\n  defaultGlobalEnv,\n  evalScript,\n  getAssignScript,\n  getEnvState,\n} from '../../../../../../adaptivity/scripting';\nimport { RootState } from '../../../rootReducer';\nimport {\n  selectCurrentActivity,\n  selectCurrentActivityId,\n  setActivities,\n  setCurrentActivityId,\n} from '../../activities/slice';\nimport { setInitStateFacts, setLessonEnd } from '../../adaptivity/slice';\nimport { loadActivityAttemptState, updateExtrinsicState } from '../../attempt/slice';\nimport {\n  selectActivityTypes,\n  selectEnableHistory,\n  selectNavigationSequence,\n  selectPreviewMode,\n  selectResourceAttemptGuid,\n  selectSectionSlug,\n  setScore,\n} from '../../page/slice';\nimport { selectCurrentActivityTree, selectSequence } from '../selectors/deck';\nimport { GroupsSlice } from '../slice';\nimport { getNextQBEntry, getParentBank } from './navUtils';\nimport { SequenceBank, SequenceEntry, SequenceEntryType } from './sequence';\n\nexport const initializeActivity = createAsyncThunk(\n  `${GroupsSlice}/deck/initializeActivity`,\n  async (activityId: ResourceId, thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const isPreviewMode = selectPreviewMode(rootState);\n    const enableHistory = selectEnableHistory(rootState);\n    const sectionSlug = selectSectionSlug(rootState);\n    const resourceAttemptGuid = selectResourceAttemptGuid(rootState);\n    const sequence = selectSequence(rootState);\n    const currentSequenceId = sequence.find((entry) => entry.activity_id === activityId)?.custom\n      .sequenceId;\n    if (!currentSequenceId) {\n      throw new Error(`Activity ${activityId} not found in sequence!`);\n    }\n    const currentActivity = selectCurrentActivity(rootState);\n    const currentActivityTree = selectCurrentActivityTree(rootState);\n\n    const resumeTarget: ApplyStateOperation = {\n      target: `session.resume`,\n      operator: '=',\n      value: currentSequenceId,\n    };\n    const timeOnQuestion: ApplyStateOperation = {\n      target: 'session.timeOnQuestion',\n      operator: '=',\n      value: 0,\n    };\n    const timeStartOp: ApplyStateOperation = {\n      target: 'session.timeStartQuestion',\n      operator: '=',\n      value: Date.now(),\n    };\n    const timeExceededOp: ApplyStateOperation = {\n      target: 'session.questionTimeExceeded',\n      operator: '=',\n      value: false,\n    };\n    const currentAttemptNumber = 1;\n    const attemptNumberOp: ApplyStateOperation = {\n      target: 'session.attemptNumber',\n      operator: '=',\n      value: currentAttemptNumber,\n    };\n    const targettedAttemptNumberOp: ApplyStateOperation = {\n      target: `${currentSequenceId}|session.attemptNumber`,\n      operator: '=',\n      value: currentAttemptNumber,\n    };\n    const tutorialScoreOp: ApplyStateOperation = {\n      target: 'session.tutorialScore',\n      operator: '+',\n      value: '{session.currentQuestionScore}',\n    };\n    const currentScoreOp: ApplyStateOperation = {\n      target: 'session.currentQuestionScore',\n      operator: '=',\n      value: 0,\n    };\n\n    const sessionOps = [\n      resumeTarget,\n      timeStartOp,\n      timeOnQuestion,\n      timeExceededOp,\n      attemptNumberOp,\n      targettedAttemptNumberOp,\n      tutorialScoreOp,\n      // must come *after* the tutorial score op\n      currentScoreOp,\n    ];\n\n    const globalSnapshot = getEnvState(defaultGlobalEnv);\n    const trackingStampKey = `session.visitTimestamps.${currentSequenceId}`;\n    const isActivityAlreadyVisited = globalSnapshot[trackingStampKey];\n    // don't update the time if student is revisiting that page\n    if (!isActivityAlreadyVisited) {\n      // looks like SS captures the date when we leave the page but it should\n      // show in the history as soon as we visit but it does not show the timestamp\n      // so we will capture the time on trigger check\n      const targetVisitTimeStampOp: ApplyStateOperation = {\n        target: trackingStampKey,\n        operator: '=',\n        value: 0,\n      };\n      sessionOps.push(targetVisitTimeStampOp);\n    }\n\n    // init state is always \"local\" but the parts may come from parent layers\n    // in that case they actually need to be written to the parent layer values\n    const initState = currentActivity?.content?.custom?.facts || [];\n    const arrInitFacts: string[] = [];\n    const globalizedInitState = initState.map((s: any) => {\n      arrInitFacts.push(`${s.target}`);\n      if (s.target.indexOf('stage.') !== 0) {\n        return { ...s };\n      }\n      const [, targetPart] = s.target.split('.');\n      const ownerActivity = currentActivityTree?.find(\n        (activity) => !!activity.content.partsLayout.find((p: any) => p.id === targetPart),\n      );\n      const modifiedValue = handleValueExpression(currentActivityTree, s.value, s.operator);\n      if (!ownerActivity) {\n        // shouldn't happen, but ignore I guess\n        return { ...s, value: modifiedValue };\n      }\n      return { ...s, target: `${ownerActivity.id}|${s.target}`, value: modifiedValue };\n    });\n\n    thunkApi.dispatch(setInitStateFacts({ facts: arrInitFacts }));\n    const results = bulkApplyState([...sessionOps, ...globalizedInitState], defaultGlobalEnv);\n    const applyStateHasErrors = results.some((r) => r.result !== null);\n    if (applyStateHasErrors) {\n      console.warn('[INIT STATE] applyState has errors', results);\n    }\n    // now that the scripting env should be up to date, need to update attempt state in redux and server\n    const currentState = getEnvState(defaultGlobalEnv);\n\n    const sessionState = Object.keys(currentState).reduce((collect: any, key) => {\n      if (key.indexOf('session.') === 0) {\n        collect[key] = currentState[key];\n      }\n      return collect;\n    }, {});\n\n    /* console.log('about to update score [deck]', {\n      currentState,\n      score: sessionState['session.tutorialScore'],\n    }); */\n    const tutScore = sessionState['session.tutorialScore'] || 0;\n    const curScore = sessionState['session.currentQuestionScore'] || 0;\n    thunkApi.dispatch(setScore({ score: tutScore + curScore }));\n\n    // optimistically write to redux\n    thunkApi.dispatch(updateExtrinsicState({ state: sessionState }));\n\n    // in preview mode we don't talk to the server, so we're done\n    if (isPreviewMode) {\n      const allGood = results.every(({ result }) => result === null);\n      // TODO: report actual errors?\n      const status = allGood ? 'success' : 'error';\n      return { result: status };\n    }\n\n    await writePageAttemptState(sectionSlug, resourceAttemptGuid, sessionState);\n  },\n);\n\nconst getSessionVisitHistory = async (\n  sectionSlug: string,\n  resourceAttemptGuid: string,\n  isPreviewMode = false,\n) => {\n  let pageAttemptState: any;\n  if (isPreviewMode) {\n    const allState = getEnvState(defaultGlobalEnv);\n    pageAttemptState = allState;\n  } else {\n    const { result } = await getPageAttemptState(sectionSlug, resourceAttemptGuid);\n    pageAttemptState = result;\n  }\n  return Object.keys(pageAttemptState)\n    .filter((key) => key.indexOf('session.visits.') === 0)\n    .map((visitKey: string) => ({\n      sequenceId: visitKey.replace('session.visits.', ''),\n      visitCount: pageAttemptState[visitKey] as number,\n    }));\n};\n\nexport const navigateToNextActivity = createAsyncThunk(\n  `${GroupsSlice}/deck/navigateToNextActivity`,\n  async (_, thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const isPreviewMode = selectPreviewMode(rootState);\n    const sectionSlug = selectSectionSlug(rootState);\n    const resourceAttemptGuid = selectResourceAttemptGuid(rootState);\n    const sequence = selectSequence(rootState);\n    const currentActivityId = selectCurrentActivityId(rootState);\n    const currentIndex = sequence.findIndex(\n      (entry) => entry.custom.sequenceId === currentActivityId,\n    );\n    let nextSequenceEntry: SequenceEntry<SequenceEntryType> | null = null;\n    let navError = '';\n    if (currentIndex >= 0) {\n      const nextIndex = currentIndex + 1;\n      nextSequenceEntry = sequence[nextIndex];\n\n      const parentBank = getParentBank(sequence, currentIndex);\n      const visitHistory = await getSessionVisitHistory(\n        sectionSlug,\n        resourceAttemptGuid,\n        isPreviewMode,\n      );\n      if (parentBank) {\n        nextSequenceEntry = getNextQBEntry(sequence, parentBank, visitHistory);\n      }\n      while (nextSequenceEntry?.custom?.isBank || nextSequenceEntry?.custom?.isLayer) {\n        while (nextSequenceEntry && nextSequenceEntry?.custom?.isBank) {\n          // this runs when we're about to enter a QB for the first time\n          nextSequenceEntry = getNextQBEntry(\n            sequence,\n            nextSequenceEntry as SequenceEntry<SequenceBank>,\n            visitHistory,\n          );\n        }\n        while (nextSequenceEntry && nextSequenceEntry?.custom?.isLayer) {\n          // for layers if you try to navigate it should go to first child\n          const firstChild = sequence.find(\n            (entry) =>\n              entry.custom?.layerRef ===\n              (nextSequenceEntry as SequenceEntry<SequenceEntryType>).custom.sequenceId,\n          );\n          if (!firstChild) {\n            navError = 'Target Layer has no children!';\n          }\n          nextSequenceEntry = firstChild;\n        }\n      }\n      if (!nextSequenceEntry) {\n        // If is end of sequence, return and set isEnd to truthy\n        thunkApi.dispatch(setLessonEnd({ lessonEnded: true }));\n        return;\n      }\n    } else {\n      navError = `Current Activity ${currentActivityId} not found in sequence`;\n    }\n    if (navError) {\n      throw new Error(navError);\n    }\n\n    thunkApi.dispatch(setCurrentActivityId({ activityId: nextSequenceEntry?.custom.sequenceId }));\n  },\n);\n\nexport const navigateToPrevActivity = createAsyncThunk(\n  `${GroupsSlice}/deck/navigateToPrevActivity`,\n  async (_, thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const sequence = selectSequence(rootState);\n    const currentActivityId = selectCurrentActivityId(rootState);\n    const currentIndex = sequence.findIndex(\n      (entry) => entry.custom.sequenceId === currentActivityId,\n    );\n    let previousEntry: SequenceEntry<SequenceEntryType> | null = null;\n    let navError = '';\n    if (currentIndex >= 0) {\n      const nextIndex = currentIndex - 1;\n      previousEntry = sequence[nextIndex];\n      while (previousEntry && previousEntry?.custom?.isLayer) {\n        const layerIndex = sequence.findIndex(\n          (entry) => entry.custom.sequenceId === previousEntry?.custom?.sequenceId,\n        );\n        /* console.log({ currentIndex, layerIndex }); */\n\n        previousEntry = sequence[layerIndex - 1];\n      }\n    } else {\n      navError = `Current Activity ${currentActivityId} not found in sequence`;\n    }\n    if (navError) {\n      throw new Error(navError);\n    }\n    thunkApi.dispatch(setCurrentActivityId({ activityId: previousEntry?.custom.sequenceId }));\n  },\n);\n\nexport const navigateToFirstActivity = createAsyncThunk(\n  `${GroupsSlice}/deck/navigateToFirstActivity`,\n  async (_, thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const sequence = selectSequence(rootState);\n    const navigationSequences = selectNavigationSequence(sequence);\n    if (!navigationSequences?.length) {\n      console.warn(`Invalid sequence!`);\n      return;\n    }\n    const nextActivityId = navigationSequences[0].custom.sequenceId;\n\n    thunkApi.dispatch(setCurrentActivityId({ activityId: nextActivityId }));\n  },\n);\n\nexport const navigateToLastActivity = createAsyncThunk(\n  `${GroupsSlice}/deck/navigateToLastActivity`,\n  async (_, thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const sequence = selectSequence(rootState);\n    const nextActivityId = 1;\n\n    thunkApi.dispatch(setCurrentActivityId({ activityId: nextActivityId }));\n  },\n);\n\nexport const navigateToActivity = createAsyncThunk(\n  `${GroupsSlice}/deck/navigateToActivity`,\n  async (sequenceId: string, thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const isPreviewMode = selectPreviewMode(rootState);\n    const sectionSlug = selectSectionSlug(rootState);\n    const resourceAttemptGuid = selectResourceAttemptGuid(rootState);\n    const sequence = selectSequence(rootState);\n    const desiredIndex = sequence.findIndex((s) => s.custom?.sequenceId === sequenceId);\n    let nextSequenceEntry: SequenceEntry<SequenceEntryType> | null = null;\n    let navError = '';\n    const visitHistory = await getSessionVisitHistory(\n      sectionSlug,\n      resourceAttemptGuid,\n      isPreviewMode,\n    );\n    if (desiredIndex >= 0) {\n      nextSequenceEntry = sequence[desiredIndex];\n      while (nextSequenceEntry?.custom?.isBank || nextSequenceEntry?.custom?.isLayer) {\n        while (nextSequenceEntry && nextSequenceEntry?.custom?.isBank) {\n          // this runs when we're about to enter a QB for the first time\n          nextSequenceEntry = getNextQBEntry(\n            sequence,\n            nextSequenceEntry as SequenceEntry<SequenceBank>,\n            visitHistory,\n          );\n        }\n        while (nextSequenceEntry && nextSequenceEntry?.custom?.isLayer) {\n          // for layers if you try to navigate it should go to first child\n          const firstChild = sequence.find(\n            (entry) =>\n              entry.custom?.layerRef ===\n              (nextSequenceEntry as SequenceEntry<SequenceEntryType>).custom.sequenceId,\n          );\n\n          if (!firstChild) {\n            navError = 'Target Layer has no children!';\n          }\n          nextSequenceEntry = firstChild;\n        }\n      }\n      if (!nextSequenceEntry) {\n        // If is end of sequence, return and set isEnd to truthy\n        thunkApi.dispatch(setLessonEnd({ lessonEnded: true }));\n        return;\n      }\n    } else {\n      navError = `Current Activity ${sequenceId} not found in sequence`;\n    }\n    if (navError) {\n      throw new Error(navError);\n    }\n\n    thunkApi.dispatch(setCurrentActivityId({ activityId: nextSequenceEntry?.custom.sequenceId }));\n  },\n);\n\ninterface ActivityAttemptMapping {\n  attemptGuid: string;\n  id: ResourceId;\n}\n\nexport const loadActivities = createAsyncThunk(\n  `${GroupsSlice}/deck/loadActivities`,\n  async (activityAttemptMapping: ActivityAttemptMapping[], thunkApi) => {\n    const rootState = thunkApi.getState() as RootState;\n    const sectionSlug = selectSectionSlug(rootState);\n    const isPreviewMode = selectPreviewMode(rootState);\n    let results;\n    if (isPreviewMode) {\n      const activityIds = activityAttemptMapping.map((m) => m.id);\n      results = await getBulkActivitiesForAuthoring(sectionSlug, activityIds);\n    } else {\n      const attemptGuids = activityAttemptMapping.map((m) => m.attemptGuid);\n      results = await getBulkAttemptState(sectionSlug, attemptGuids);\n    }\n    const sequence = selectSequence(rootState);\n    const activityTypes = selectActivityTypes(rootState);\n    const activities = results.map((result) => {\n      const resultActivityId = isPreviewMode ? result.id : result.activityId;\n      const sequenceEntry = sequence.find((entry: any) => entry.activity_id === resultActivityId);\n      if (!sequenceEntry) {\n        console.warn(`Activity ${result.id} not found in the page model!`);\n        return;\n      }\n      const attemptEntry = activityAttemptMapping.find((m) => m.id === sequenceEntry.activity_id);\n      const activityType = activityTypes.find((t) => t.id === result.activityType);\n      let partAttempts = result.partAttempts;\n      if (isPreviewMode) {\n        partAttempts = result.authoring.parts.map((p: any) => {\n          return {\n            attemptGuid: `preview_${guid()}`,\n            attemptNumber: 1,\n            dateEvaluated: null,\n            feedback: null,\n            outOf: null,\n            partId: p.id,\n            response: null,\n            score: null,\n          };\n        });\n      }\n      const activityModel = {\n        id: sequenceEntry.custom.sequenceId,\n        resourceId: sequenceEntry.activity_id,\n        content: isPreviewMode ? result.content : result.model,\n        authoring: result.authoring || null,\n        activityType,\n        title: result.title,\n        attemptGuid: attemptEntry?.attemptGuid || '',\n      };\n      const attemptState: ActivityState = {\n        attemptGuid: attemptEntry?.attemptGuid || '',\n        activityId: activityModel.resourceId,\n        attemptNumber: result.attemptNumber || 1,\n        dateEvaluated: result.dateEvaluated || null,\n        score: result.score || null,\n        outOf: result.outOf || null,\n        parts: partAttempts,\n        hasMoreAttempts: result.hasMoreAttempts || true,\n        hasMoreHints: result.hasMoreHints || true,\n      };\n      return { model: activityModel, state: attemptState };\n    });\n\n    const models = activities.map((a) => a?.model);\n    const states: ActivityState[] = activities\n      .map((a) => a?.state)\n      .filter((s) => s !== undefined) as ActivityState[];\n\n    thunkApi.dispatch(loadActivityAttemptState({ attempts: states }));\n    thunkApi.dispatch(setActivities({ activities: models }));\n\n    // update the scripting environment with the latest activity state\n    states.forEach((state) => {\n      const hasResponse = state.parts.some((p) => p.response);\n      /* console.log({ state, hasResponse }); */\n      if (hasResponse) {\n        // update globalEnv with the latest activity state\n        const updateValues = state.parts.reduce((acc: any, p) => {\n          if (!p.response) {\n            return acc;\n          }\n          const inputs = Object.keys(p.response).reduce((acc2: any, key) => {\n            acc2[p.response[key].path] = p.response[key].value;\n            return acc2;\n          }, {});\n          return { ...acc, ...inputs };\n        }, {});\n        const assignScript = getAssignScript(updateValues, defaultGlobalEnv);\n        const { result: scriptResult } = evalScript(assignScript, defaultGlobalEnv);\n        if (scriptResult !== null) {\n          console.warn('Error in state restore script', { state, scriptResult });\n        }\n        /* console.log('STATE RESTORE', { scriptResult }); */\n      }\n    });\n\n    return { attempts: states, activities: models };\n  },\n);\n"]}