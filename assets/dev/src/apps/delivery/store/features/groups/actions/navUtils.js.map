{"version":3,"file":"navUtils.js","sourceRoot":"","sources":["../../../../../../../../src/apps/delivery/store/features/groups/actions/navUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { SequenceBank, SequenceEntry, SequenceEntryType } from './sequence';\n\n// returns the next random QB child\nexport const getNextQBEntry = (\n  sequence: SequenceEntry<SequenceEntryType>[],\n  bank: SequenceEntry<SequenceBank>,\n  viewHistory: { sequenceId: string; visitCount: number }[],\n): SequenceEntry<SequenceEntryType> | null => {\n  // determines how many QB child screens to randomly show\n  const bankShowCount: number = bank.custom?.bankShowCount || 0;\n  const bankChildren = getBankChildren(sequence, bank);\n  const viewedChildren = getViewedChildren(bankChildren, viewHistory);\n  if (viewedChildren.length >= bankShowCount) {\n    return getQBEndTarget(sequence, bank);\n  }\n  const remainingChildren = getRemainingChildren(bankChildren, viewedChildren);\n  // generates a random index based on remainingChildren.length\n  const random: number = Math.floor(Math.random() * remainingChildren.length);\n\n  // return the next random QB child screen\n  return remainingChildren[random];\n};\n\n// finds the parent QB of the current screen\nexport const getParentBank = (\n  sequence: SequenceEntry<SequenceEntryType>[],\n  currentIndex: number,\n): SequenceEntry<SequenceBank> | null => {\n  const bank = sequence.find(\n    (s) =>\n      s.custom.sequenceId === sequence[currentIndex].custom.layerRef && s.custom.isBank === true,\n  );\n  return (bank as SequenceEntry<SequenceBank>) || null;\n};\n\n// generates a list of all the QB child screens\nexport const getBankChildren = (\n  sequence: SequenceEntry<SequenceEntryType>[],\n  parentBank: SequenceEntry<SequenceBank>,\n): SequenceEntry<SequenceEntryType>[] =>\n  sequence.filter((s) => s.custom.layerRef === parentBank.custom.sequenceId);\n\n// generates a list of QB child screens that have already been viewed\nexport const getViewedChildren = (\n  bankChildren: SequenceEntry<SequenceEntryType>[],\n  viewHistory: { sequenceId: string; visitCount: number }[],\n): string[] => {\n  const viewedHistoryIds = viewHistory.filter((v) => v.visitCount >= 1).map((v) => v.sequenceId);\n  const viewedChildren = bankChildren\n    .filter((bc) => viewedHistoryIds.includes(bc.custom.sequenceId))\n    .map((v) => v.custom.sequenceId);\n\n  return viewedChildren;\n};\n\n// determines which QB children are remaining to be viewed\nexport const getRemainingChildren = (\n  bankChildren: SequenceEntry<SequenceEntryType>[],\n  viewedChildrenIds: string[],\n): SequenceEntry<SequenceEntryType>[] =>\n  bankChildren.filter((bc) => !viewedChildrenIds.includes(bc.custom.sequenceId));\n\n// returns the bankEndTarget of the QB\nexport const getQBEndTarget = (\n  sequence: SequenceEntry<SequenceEntryType>[],\n  parentBank: SequenceEntry<SequenceBank>,\n): SequenceEntry<SequenceEntryType> | null => {\n  const bankEndTarget = parentBank.custom.bankEndTarget;\n  const bankChildren = getBankChildren(sequence, parentBank);\n  //** if bankEndTarget = next or undefined then we need to find the correct next ensemble to navigate to */\n  //** if bankEndTarget is something like q:1573069617189:646 then do nothing */\n  if ((bankChildren && bankEndTarget === 'next') || !bankEndTarget) {\n    const lastQBChild = bankChildren[bankChildren.length - 1].custom.sequenceId;\n    const currentIndex = sequence.findIndex((s) => s.custom.sequenceId === lastQBChild);\n    const nextIndex = currentIndex + 1;\n    return sequence[nextIndex];\n  }\n\n  return sequence.find((s) => s.custom.sequenceId === bankEndTarget) || null;\n};\n"]}