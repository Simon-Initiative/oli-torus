{"version":3,"file":"sequence.js","sourceRoot":"","sources":["../../../../../../../../src/apps/delivery/store/features/groups/actions/sequence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAC1C,OAAO,EAAE,uBAAuB,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAiC5E,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,QAA6C,EAC7C,WAA0B,IAAI,EACe,EAAE;IAC/C,OAAO,QAAQ;SACZ,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;;QACf,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC9B;QACD,OAAO,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,QAAQ,MAAK,QAAQ,CAAC;IAC5C,CAAC,CAAC;SACD,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACZ,MAAM,YAAY,mCAAmD,IAAI,KAAE,QAAQ,EAAE,EAAE,GAAE,CAAC;QAC1F,YAAY,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACvE,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,SAAsD,EACtD,UAA2B,EAC4B,EAAE;IACzD,IAAI,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;IACtE,IAAI,CAAC,KAAK,EAAE;QACV,kDAAkD;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,KAAK,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAC3D,IAAI,KAAK,EAAE;gBACT,MAAM;aACP;SACF;KACF;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAC3C,SAAsD,EACtD,EAAmB,EACoC,EAAE;IACzD,MAAM,EAAE,GAAG,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,CAAC,EAAE,EAAE;QACP,OAAO;KACR;IACD,MAAM,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC;IACpC,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,EAAE,CAAC;KACX;IACD,MAAM,MAAM,GAAG,eAAe,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACpD,IAAI,CAAC,MAAM,EAAE;QACX,SAAS;QACT,OAAO;KACR;IACD,OAAO,6BAA6B,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAC5E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,SAAsD,EACjB,EAAE;IACvC,MAAM,IAAI,GAAwC,EAAE,CAAC;IACrD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;QACvC,MAAM,cAAc,mCAAQ,IAAI,KAAE,QAAQ,EAAE,SAAS,GAAE,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC,CAAC;AACX,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,QAA6C,EAC7C,UAA2B,EACe,EAAE;IAC5C,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;IAC/E,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,0BAA0B,GAAG,CACxC,QAA6C,EAC7C,UAAkB,EACwB,EAAE;IAC5C,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;IACxE,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,QAA6C,EAC7C,OAAwB,EACa,EAAE;IACvC,MAAM,OAAO,GAAwC,EAAE,CAAC;IACxD,MAAM,KAAK,GAAG,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAChD,IAAI,KAAK,EAAE;QACT,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;YACzB,OAAO,CAAC,OAAO,CAAC,GAAG,kBAAkB,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;SACzE;KACF;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,MAAM,iBAAiB,GAAG,WAAW,CAAC,uBAAuB,CAAC,CAAC;IAC/D,MAAM,QAAQ,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC;IAC7C,OAAO,cAAc,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AACrD,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,UAAU,GAAG,GAAG,EAAE;IAC7B,MAAM,GAAG,GAAG,mBAAmB,EAAE,CAAC;IAClC,OAAO,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,CAAC,OAAO,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,EAAE;IAC5B,MAAM,GAAG,GAAG,mBAAmB,EAAE,CAAC;IAClC,OAAO,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,CAAC,MAAM,CAAC;AAC5B,CAAC,CAAC","sourcesContent":["import { useSelector } from 'react-redux';\nimport { selectCurrentSequenceId, selectSequence } from '../selectors/deck';\n\nexport interface SequenceEntryChild {\n  sequenceId: string;\n  sequenceName: string;\n  layerRef?: string;\n  isBank?: boolean;\n  isLayer?: boolean;\n}\n\nexport interface SequenceLayer extends SequenceEntryChild {\n  isLayer: true;\n}\n\nexport interface SequenceBank extends SequenceEntryChild {\n  isBank: true;\n  bankShowCount: number;\n  bankEndTarget: string;\n}\n\nexport type SequenceEntryType = SequenceEntryChild | SequenceLayer | SequenceBank;\n\nexport interface SequenceEntry<T> {\n  activity_id?: number;\n  resourceId?: number;\n  activitySlug?: string;\n  custom: T;\n}\n\nexport interface SequenceHierarchyItem<T> extends SequenceEntry<T> {\n  children: SequenceHierarchyItem<T>[];\n}\n\nexport const getHierarchy = (\n  sequence: SequenceEntry<SequenceEntryChild>[],\n  parentId: string | null = null,\n): SequenceHierarchyItem<SequenceEntryChild>[] => {\n  return sequence\n    .filter((item) => {\n      if (parentId === null) {\n        return !item.custom.layerRef;\n      }\n      return item.custom?.layerRef === parentId;\n    })\n    .map((item) => {\n      const withChildren: SequenceHierarchyItem<SequenceEntryChild> = { ...item, children: [] };\n      withChildren.children = getHierarchy(sequence, item.custom.sequenceId);\n      return withChildren;\n    });\n};\n\nexport const findInHierarchy = (\n  hierarchy: SequenceHierarchyItem<SequenceEntryChild>[],\n  sequenceId: string | number,\n): SequenceHierarchyItem<SequenceEntryChild> | undefined => {\n  let found = hierarchy.find((i) => i.custom.sequenceId === sequenceId);\n  if (!found) {\n    // now need to search all the children recursively\n    for (let i = 0; i < hierarchy.length; i++) {\n      found = findInHierarchy(hierarchy[i].children, sequenceId);\n      if (found) {\n        break;\n      }\n    }\n  }\n\n  return found;\n};\n\nexport const findEldestAncestorInHierarchy = (\n  hierarchy: SequenceHierarchyItem<SequenceEntryChild>[],\n  id: string | number,\n): SequenceHierarchyItem<SequenceEntryChild> | undefined => {\n  const me = findInHierarchy(hierarchy, id);\n  if (!me) {\n    return;\n  }\n  const parentId = me.custom.layerRef;\n  if (!parentId) {\n    return me;\n  }\n  const parent = findInHierarchy(hierarchy, parentId);\n  if (!parent) {\n    // error!\n    return;\n  }\n  return findEldestAncestorInHierarchy(hierarchy, parent.custom.sequenceId);\n};\n\nexport const flattenHierarchy = (\n  hierarchy: SequenceHierarchyItem<SequenceEntryChild>[],\n): SequenceEntry<SequenceEntryChild>[] => {\n  const list: SequenceEntry<SequenceEntryChild>[] = [];\n  return hierarchy.reduce((result, item) => {\n    const childlessEntry = { ...item, children: undefined };\n    result.push(childlessEntry);\n    if (item.children) {\n      result.push(...flattenHierarchy(item.children));\n    }\n    return result;\n  }, list);\n};\n\nexport const findInSequence = (\n  sequence: SequenceEntry<SequenceEntryChild>[],\n  sequenceId: string | number,\n): SequenceEntry<SequenceEntryChild> | null => {\n  const found = sequence.find((entry) => entry.custom.sequenceId === sequenceId);\n  if (!found) {\n    return null;\n  }\n  return found;\n};\n\nexport const findInSequenceByResourceId = (\n  sequence: SequenceEntry<SequenceEntryChild>[],\n  resourceId: number,\n): SequenceEntry<SequenceEntryChild> | null => {\n  const found = sequence.find((entry) => entry.resourceId === resourceId);\n  if (!found) {\n    return null;\n  }\n  return found;\n};\n\nexport const getSequenceLineage = (\n  sequence: SequenceEntry<SequenceEntryChild>[],\n  childId: string | number,\n): SequenceEntry<SequenceEntryChild>[] => {\n  const lineage: SequenceEntry<SequenceEntryChild>[] = [];\n  const child = findInSequence(sequence, childId);\n  if (child) {\n    lineage.unshift(child);\n    if (child.custom.layerRef) {\n      lineage.unshift(...getSequenceLineage(sequence, child.custom.layerRef));\n    }\n  }\n  return lineage;\n};\n\nexport const getSequenceInstance = () => {\n  const currentSequenceId = useSelector(selectCurrentSequenceId);\n  const sequence = useSelector(selectSequence);\n  return findInSequence(sequence, currentSequenceId);\n};\nexport const getIsLayer = () => {\n  const seq = getSequenceInstance();\n  return seq?.custom.isLayer;\n};\n\nexport const getIsBank = () => {\n  const seq = getSequenceInstance();\n  return seq?.custom.isBank;\n};\n"]}