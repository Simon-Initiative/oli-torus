{"version":3,"file":"deck.js","sourceRoot":"","sources":["../../../../../../../../src/apps/delivery/store/features/groups/selectors/deck.ts"],"names":[],"mappings":"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","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'apps/delivery/store/rootReducer';\nimport { ActivityState } from 'components/activities/types';\nimport { selectAllActivities, selectCurrentActivityId } from '../../activities/slice';\nimport { selectActivityAttemptState } from '../../attempt/slice';\nimport { getSequenceLineage } from '../actions/sequence';\nimport { GroupsState, selectState } from '../slice';\n\nexport const selectSequence = createSelector(selectState, (state: GroupsState) => {\n  if (state.currentGroupId === -1) {\n    return [];\n  }\n  const currentGroup = state.entities[state.currentGroupId];\n  return currentGroup ? currentGroup.children : [];\n});\n\nexport const selectCurrentSequenceId = createSelector(\n  [selectSequence, selectCurrentActivityId],\n  (sequence, currentActivityId) => {\n    /* console.log('SELECT CURRENT SEQUENCE ID', { sequence, currentActivityId }); */\n    return sequence.find((entry) => {\n      // temp hack for authoring\n      // TODO: rewire delivery to use resourceId instead of sequenceId\n      let testId = entry.custom.sequenceId;\n      if (typeof currentActivityId === 'number') {\n        testId = entry.resourceId;\n      }\n      return testId === currentActivityId;\n    })?.custom.sequenceId;\n  },\n);\n\nexport const selectCurrentActivityTree = createSelector(\n  [selectSequence, selectAllActivities, selectCurrentSequenceId],\n  (sequence, activities, currentSequenceId) => {\n    const currentSequenceEntry = (sequence as any[]).find(\n      (entry) => entry.custom.sequenceId === currentSequenceId,\n    );\n    if (!currentSequenceEntry) {\n      // because this is a selector, might be undefined; stringify to display that\n      // TODO: Logging System that can be turned off in prod and/or instrumented\n      console.warn(`Current Activity ${JSON.stringify(currentSequenceId)} not found in sequence!`);\n      return null;\n    }\n    const lineage = getSequenceLineage(sequence as any[], currentSequenceEntry.custom.sequenceId);\n    const tree = lineage.map((entry) =>\n      (activities as any[]).find((a) => a.resourceId === entry.resourceId),\n    );\n    /*  console.log('TREE', { lineage, activities }); */\n    // filtering out undefined, however TODO make sure they are loaded ahead of time!\n    return tree.filter((t) => t);\n  },\n);\n\nexport const selectCurrentActivityTreeAttemptState = createSelector(\n  (state: RootState) => {\n    const currentTree = selectCurrentActivityTree(state);\n    const attempts = currentTree?.map((t) => selectActivityAttemptState(state, t.resourceId));\n    return [currentTree, attempts];\n  },\n  ([currentTree, attempts]: [any[], ActivityState[]]) => {\n    if (!currentTree?.length || !attempts?.length) {\n      return;\n    }\n    const mappedTree = currentTree.map((activity) => {\n      const attempt = attempts.find((a) => a.activityId === activity.resourceId);\n      return attempt;\n    });\n    return mappedTree;\n  },\n);\n"]}