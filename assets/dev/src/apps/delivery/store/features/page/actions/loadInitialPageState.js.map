{"version":3,"file":"loadInitialPageState.js","sourceRoot":"","sources":["../../../../../../../../src/apps/delivery/store/features/page/actions/loadInitialPageState.ts"],"names":[],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { writePageAttemptState } from 'data/persistence/state/intrinsic';\nimport guid from 'utils/guid';\nimport {\n  defaultGlobalEnv,\n  evalScript,\n  getAssignScript,\n} from '../../../../../../adaptivity/scripting';\nimport { RootState } from '../../../rootReducer';\nimport { setExtrinsicState, setResourceAttemptGuid } from '../../attempt/slice';\nimport {\n  loadActivities,\n  navigateToActivity,\n  navigateToFirstActivity,\n} from '../../groups/actions/deck';\nimport { selectSequence } from '../../groups/selectors/deck';\nimport { LayoutType, selectCurrentGroup, setGroups } from '../../groups/slice';\nimport { loadPageState, PageSlice, PageState, selectResourceAttemptGuid } from '../slice';\n\nexport const loadInitialPageState = createAsyncThunk(\n  `${PageSlice}/loadInitialPageState`,\n  async (params: PageState, thunkApi) => {\n    const { dispatch, getState } = thunkApi;\n\n    await dispatch(loadPageState(params));\n\n    const groups = params.content.model.filter((item: any) => item.type === 'group');\n    const otherTypes = params.content.model.filter((item: any) => item.type !== 'group');\n    // for now just stick them into a group, this isn't reallly thought out yet\n    // and there is technically only 1 supported layout type atm\n    if (otherTypes.length) {\n      groups.push({ type: 'group', layout: 'deck', children: [...otherTypes] });\n    }\n    // wait for this to resolve so that state will be updated\n    await dispatch(setGroups({ groups }));\n\n    const currentGroup = selectCurrentGroup(getState() as RootState);\n    if (currentGroup?.layout === LayoutType.DECK) {\n      // write initial session state (TODO: factor out elsewhere)\n      const resourceAttemptGuid = selectResourceAttemptGuid(getState() as RootState);\n      dispatch(setResourceAttemptGuid({ guid: resourceAttemptGuid }));\n      const sequence = selectSequence(getState() as RootState);\n      const sessionState = sequence.reduce((acc, entry) => {\n        acc[`session.visits.${entry.custom.sequenceId}`] = 0;\n        return acc;\n      }, {});\n      // init variables so add ops can function\n      sessionState['session.tutorialScore'] = 0;\n      sessionState['session.currentQuestionScore'] = 0;\n      sessionState['session.timeStartQuestion'] = 0;\n      sessionState['session.attemptNumber'] = 0;\n      sessionState['session.timeOnQuestion'] = 0;\n\n      // Sets up Current Active Everapp to None\n      sessionState['app.active'] = 'none';\n\n      if (params.resourceAttemptState) {\n        Object.assign(sessionState, params.resourceAttemptState);\n      }\n\n      // update scripting env with session state\n      const assignScript = getAssignScript(sessionState, defaultGlobalEnv);\n      const { result: scriptResult } = evalScript(assignScript, defaultGlobalEnv);\n\n      if (!params.previewMode) {\n        await writePageAttemptState(params.sectionSlug, resourceAttemptGuid, sessionState);\n      }\n\n      dispatch(setExtrinsicState({ state: sessionState }));\n\n      let activityAttemptMapping;\n      if (params.previewMode) {\n        // need to load activities from the authoring api\n        const activityIds = currentGroup.children.map((child: any) => child.activity_id);\n        activityAttemptMapping = activityIds.map((id) => ({\n          id,\n          attemptGuid: `preview_${guid()}`,\n        }));\n      } else {\n        activityAttemptMapping = Object.keys(params.activityGuidMapping).map(\n          (activityResourceId) => {\n            return params.activityGuidMapping[activityResourceId];\n          },\n        );\n      }\n      const {\n        payload: { attempts },\n      }: any = await dispatch(loadActivities(activityAttemptMapping));\n\n      const shouldResume = attempts.some((attempt: any) => attempt.dateEvaluated !== null);\n      if (shouldResume) {\n        let resumeSequenceId = sequence[0].custom.sequenceId;\n        if (params.resourceAttemptState && params.resourceAttemptState['session.resume']) {\n          // resume from a previous attempt\n          resumeSequenceId = params.resourceAttemptState['session.resume'];\n        } else {\n          // find the spot in the sequence that we should start from\n          const resumeTarget = sequence.reduce((target, entry, index) => {\n            const sequenceAttempt = attempts.find(\n              (attempt: any) => attempt.activityId === entry.activity_id,\n            );\n            if (sequenceAttempt?.dateEvaluated !== null) {\n              // this actually isn't reliable because of pathed sequences\n              // so hopefully we had a session.resume from above\n              target = index + 1; // +1 because we are starting from the next item after the last completed one\n            }\n            return target;\n          }, 0);\n          resumeSequenceId = sequence[resumeTarget].custom.sequenceId;\n        }\n        dispatch(navigateToActivity(resumeSequenceId));\n      } else {\n        dispatch(navigateToFirstActivity());\n      }\n    }\n  },\n);\n"]}