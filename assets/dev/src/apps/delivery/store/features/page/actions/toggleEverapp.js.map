{"version":3,"file":"toggleEverapp.js","sourceRoot":"","sources":["../../../../../../../../src/apps/delivery/store/features/page/actions/toggleEverapp.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAEpE,OAAO,EAAE,SAAS,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,MAAM,UAAU,CAAC;AAE5E,MAAM,CAAC,MAAM,aAAa,GAAG,gBAAgB,CAC3C,GAAG,SAAS,gBAAgB,EAC5B,CAAO,OAAuB,EAAE,QAAQ,EAAE,EAAE;IAC1C,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;IACxC,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,QAAQ,EAAe,CAAC,CAAC;IAEtE,gDAAgD;IAChD,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC;IAEvB,IAAI,WAAW,GAAG,gBAAgB,CAAC;IACnC,IAAI,gBAAgB,KAAK,EAAE,EAAE;QAC3B,WAAW,GAAG,EAAE,CAAC;KAClB;SAAM;QACL,WAAW,GAAG,EAAE,CAAC;KAClB;IACD,qCAAqC;IACrC,UAAU,CAAC,qBAAqB,WAAW,IAAI,MAAM,IAAI,EAAE,gBAAgB,CAAC,CAAC;IAE7E,QAAQ,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC,CAAA,CACF,CAAC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { defaultGlobalEnv, evalScript } from 'adaptivity/scripting';\nimport { RootState } from 'apps/delivery/store/rootReducer';\nimport { PageSlice, selectActiveEverapp, setActiveEverapp } from '../slice';\n\nexport const toggleEverapp = createAsyncThunk(\n  `${PageSlice}/toggleEverapp`,\n  async (payload: { id: string }, thunkAPI) => {\n    const { dispatch, getState } = thunkAPI;\n    const currentActiveApp = selectActiveEverapp(getState() as RootState);\n\n    // need to sync up id with scripting environment\n    const { id } = payload;\n\n    let activeAppId = currentActiveApp;\n    if (currentActiveApp !== id) {\n      activeAppId = id;\n    } else {\n      activeAppId = '';\n    }\n    // trap states are looking for \"none\"\n    evalScript(`let app.active = \"${activeAppId || 'none'}\";`, defaultGlobalEnv);\n\n    dispatch(setActiveEverapp({ id: activeAppId }));\n  },\n);\n"]}