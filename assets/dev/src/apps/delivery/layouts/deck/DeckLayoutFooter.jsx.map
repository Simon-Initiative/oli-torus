{"version":3,"file":"DeckLayoutFooter.jsx","sourceRoot":"","sources":["../../../../../../src/apps/delivery/layouts/deck/DeckLayoutFooter.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport { templatizeText } from 'apps/delivery/components/TextParser';\nimport React, { CSSProperties, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ApplyStateOperation,\n  bulkApplyState,\n  defaultGlobalEnv,\n  getLocalizedStateSnapshot,\n  getValue,\n} from '../../../../adaptivity/scripting';\nimport {\n  selectCurrentActivityContent,\n  selectCurrentActivityId,\n} from '../../store/features/activities/slice';\nimport { triggerCheck } from '../../store/features/adaptivity/actions/triggerCheck';\nimport {\n  selectCurrentFeedbacks,\n  selectHistoryNavigationActivity,\n  selectInitPhaseComplete,\n  selectIsGoodFeedback,\n  selectLastCheckResults,\n  selectLastCheckTriggered,\n  selectLessonEnd,\n  selectNextActivityId,\n  setCurrentFeedbacks,\n  setIsGoodFeedback,\n  setMutationTriggered,\n  setNextActivityId,\n} from '../../store/features/adaptivity/slice';\nimport {\n  navigateToActivity,\n  navigateToFirstActivity,\n  navigateToLastActivity,\n  navigateToNextActivity,\n  navigateToPrevActivity,\n} from '../../store/features/groups/actions/deck';\nimport { selectCurrentActivityTree } from '../../store/features/groups/selectors/deck';\nimport {\n  selectEnableHistory,\n  selectIsLegacyTheme,\n  selectPageContent,\n  setScore,\n} from '../../store/features/page/slice';\nimport EverappContainer from './components/EverappContainer';\nimport FeedbackContainer from './components/FeedbackContainer';\nimport HistoryNavigation from './components/HistoryNavigation';\n\nexport const handleValueExpression = (\n  currentActivityTree: any[] | null,\n  operationValue: string,\n  operator?: string,\n) => {\n  let value = operationValue;\n  if (typeof value === 'string' && currentActivityTree) {\n    if (\n      (value[0] === '{' && value[1] !== '\"') ||\n      (value.indexOf('{') !== -1 && value.indexOf('}') !== -1)\n    ) {\n      const variableList = value.match(/\\{(.*?)\\}/g);\n      variableList?.forEach((item) => {\n        if (item.indexOf('|') > 0) {\n          // if the variable is already targetted to another screen, we don't need to do this.\n          return;\n        }\n        //Need to replace the opening and closing {} else the expression will look something like q.145225454.1|{stage.input.value}\n        //it should be like {q.145225454.1|stage.input.value}\n        const modifiedValue = item.replace('{', '').replace('}', '');\n        const lstVar = item.split('.');\n        if (lstVar?.length > 2) {\n          const ownerActivity = currentActivityTree?.find(\n            (activity) => !!activity.content.partsLayout.find((p: any) => p.id === lstVar[1]),\n          );\n          //ownerActivity is undefined for app.spr.adaptivity.something i.e. Beagle app variables\n          if (ownerActivity) {\n            value = value.replace(`${item}`, `{${ownerActivity.id}|${modifiedValue}}`);\n          }\n        }\n      });\n    } else if (operator === 'bind to') {\n      const variables = value.split('.');\n      const ownerActivity = currentActivityTree?.find(\n        (activity) => !!activity.content.partsLayout.find((p: any) => p.id === variables[1]),\n      );\n      //ownerActivity is undefined for app.spr.adaptivity.something i.e. Beagle app variables\n      if (ownerActivity) {\n        value = `${ownerActivity.id}|${value}`;\n      }\n    }\n  }\n  return value;\n};\nexport interface NextButton {\n  text: string;\n  handler: () => void;\n  isLoading: boolean;\n  isGoodFeedbackPresent: boolean;\n  currentFeedbacksCount: number;\n  isFeedbackIconDisplayed: boolean;\n  showCheckBtn: boolean;\n}\n\nconst initialNextButtonClassName = 'checkBtn';\nconst wrongFeedbackNextButtonClassName = 'closeFeedbackBtn wrongFeedback';\nconst correctFeedbackNextButtonClassName = 'closeFeedbackBtn correctFeedback';\n/* const componentEventService = ComponentEventService.getInstance(); */\nconst NextButton: React.FC<NextButton> = ({\n  text,\n  handler,\n  isLoading,\n  isGoodFeedbackPresent,\n  currentFeedbacksCount,\n  isFeedbackIconDisplayed,\n  showCheckBtn,\n}) => {\n  const isEnd = useSelector(selectLessonEnd);\n  const historyModeNavigation = useSelector(selectHistoryNavigationActivity);\n  const styles: CSSProperties = {};\n  if (historyModeNavigation) {\n    styles.opacity = 0.5;\n    styles.cursor = 'not-allowed';\n  }\n  const showDisabled = historyModeNavigation ? true : isLoading;\n  const showHideCheckButton =\n    !showCheckBtn && !isGoodFeedbackPresent && !isFeedbackIconDisplayed ? 'hideCheckBtn' : '';\n\n  return (\n    <div\n      className={`buttonContainer ${showHideCheckButton} ${\n        isEnd ? 'displayNone hideCheckBtn' : ''\n      }`}\n    >\n      <button\n        onClick={handler}\n        disabled={showDisabled}\n        style={styles}\n        className={\n          isGoodFeedbackPresent\n            ? correctFeedbackNextButtonClassName\n            : currentFeedbacksCount > 0 && isFeedbackIconDisplayed\n            ? wrongFeedbackNextButtonClassName\n            : initialNextButtonClassName\n        }\n      >\n        {isLoading ? (\n          <div className=\"spricon-ajax-loader\" style={{ backgroundPositionY: '-540px' }} />\n        ) : (\n          <div className=\"ellipsis\">{text}</div>\n        )}\n      </button>\n\n      {/* do we need this blocker div? */}\n      {/* <div className=\"blocker displayNone\" /> */}\n    </div>\n  );\n};\n\nconst DeckLayoutFooter: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const currentPage = useSelector(selectPageContent);\n  const currentActivityId = useSelector(selectCurrentActivityId);\n  const currentActivity = useSelector(selectCurrentActivityContent);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const isGoodFeedback = useSelector(selectIsGoodFeedback);\n  const currentFeedbacks = useSelector(selectCurrentFeedbacks);\n  const nextActivityId: string = useSelector(selectNextActivityId);\n  const enableHistory = useSelector(selectEnableHistory);\n  const lastCheckTimestamp = useSelector(selectLastCheckTriggered);\n  const lastCheckResults = useSelector(selectLastCheckResults);\n  const initPhaseComplete = useSelector(selectInitPhaseComplete);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasOnlyMutation, setHasOnlyMutation] = useState(false);\n  const [displayFeedback, setDisplayFeedback] = useState(false);\n  const [displayFeedbackHeader, setDisplayFeedbackHeader] = useState<boolean>(false);\n  const [displayFeedbackIcon, setDisplayFeedbackIcon] = useState(false);\n  const [nextButtonText, setNextButtonText] = useState('Next');\n  const [nextCheckButtonText, setNextCheckButtonText] = useState('Next');\n\n  useEffect(() => {\n    if (!lastCheckTimestamp) {\n      return;\n    }\n    // when this changes, notify that check has started\n  }, [lastCheckTimestamp]);\n\n  const processResults = (events: any) => {\n    const actionsByType: any = {\n      feedback: [],\n      mutateState: [],\n      navigation: [],\n    };\n    events.forEach((evt: any) => {\n      const { actions } = evt.params;\n      actions.forEach((action: any) => {\n        actionsByType[action.type].push(action);\n      });\n    });\n    return actionsByType;\n  };\n\n  const checkIfFirstEventHasNavigation = (event: any) => {\n    let isDifferentNavigationExist = false;\n    const { actions } = event.params;\n    actions.forEach((action: any) => {\n      if (action.type === 'navigation') {\n        isDifferentNavigationExist = true;\n      }\n    });\n    return isDifferentNavigationExist;\n  };\n\n  const checkIfAllEventsHaveSameNavigation = (results: any) => {\n    const navigationTargets: string[] = [];\n    const resultHavingNavigation = results.filter((result: any) => {\n      const { actions } = result.params;\n      let hasNavigation = false;\n      actions.forEach((action: any) => {\n        if (action.type === 'navigation') {\n          if (!navigationTargets.includes(action.params.target)) {\n            navigationTargets.push(action.params.target);\n          }\n          hasNavigation = true;\n        }\n      });\n      return hasNavigation;\n    });\n    return resultHavingNavigation.length === results.length && navigationTargets.length === 1;\n  };\n\n  useEffect(() => {\n    if (!lastCheckResults || !lastCheckResults.results.length) {\n      return;\n    }\n    // when this changes, notify check has completed\n\n    const isCorrect = lastCheckResults.results.every((r: any) => r.params.correct);\n\n    // depending on combineFeedback value is whether we should address more than one event\n    const combineFeedback = !!currentActivity?.custom.combineFeedback;\n    let eventsToProcess = [lastCheckResults.results[0]];\n    let doesFirstEventHasNavigation = false;\n    let doesAllEventsHaveSameNavigation = false;\n    if (combineFeedback) {\n      //if the first event has a navigation to different screen\n      // we ignore the rest of the events and fire this one.\n      doesAllEventsHaveSameNavigation = checkIfAllEventsHaveSameNavigation(\n        lastCheckResults.results,\n      );\n      if (doesAllEventsHaveSameNavigation) {\n        eventsToProcess = lastCheckResults.results;\n      } else {\n        doesFirstEventHasNavigation = checkIfFirstEventHasNavigation(lastCheckResults.results[0]);\n        // if all the rules are correct, we process all the events because we want to display all the correct feedbacks\n        if (doesFirstEventHasNavigation && !isCorrect) {\n          eventsToProcess = [lastCheckResults.results[0]];\n        } else {\n          eventsToProcess = lastCheckResults.results;\n        }\n      }\n    }\n    const actionsByType = processResults(eventsToProcess);\n\n    const hasFeedback = actionsByType.feedback.length > 0;\n    const hasNavigation = actionsByType.navigation.length > 0;\n\n    if (actionsByType.mutateState.length) {\n      const mutationsModified = actionsByType.mutateState.map((op: any) => {\n        let scopedTarget = op.params.target;\n\n        if (scopedTarget.indexOf('stage') === 0) {\n          const lstVar = scopedTarget.split('.');\n\n          if (lstVar?.length > 1) {\n            const ownerActivity = currentActivityTree?.find(\n              (activity) => !!activity.content.partsLayout.find((p: any) => p.id === lstVar[1]),\n            );\n            scopedTarget = ownerActivity\n              ? `${ownerActivity.id}|${op.params.target}`\n              : `${currentActivityId}|${op.params.target}`;\n          }\n        }\n        const globalOp: ApplyStateOperation = {\n          target: scopedTarget,\n          operator: op.params.operator,\n          value: handleValueExpression(currentActivityTree, op.params.value, op.params.operator),\n          targetType: op.params.targetType || op.params.type,\n        };\n        return globalOp;\n      });\n\n      const mutateResults = bulkApplyState(mutationsModified, defaultGlobalEnv);\n      // should respond to scripting errors?\n      console.log('MUTATE ACTIONS', {\n        mutateResults,\n        mutationsModified,\n        score: getValue('session.tutorialScore', defaultGlobalEnv) || 0,\n      });\n\n      const latestSnapshot = getLocalizedStateSnapshot(\n        (currentActivityTree || []).map((a) => a.id),\n      );\n      // instead of sending the entire enapshot, taking latest values from store and sending that as mutate state in all the components\n      const mutatedObjects = actionsByType.mutateState.reduce((collect: any, op: any) => {\n        let target = op.params.target;\n        if (target.indexOf('stage') === 0) {\n          const lstVar = op.params.target.split('.');\n          if (lstVar?.length > 1) {\n            const ownerActivity = currentActivityTree?.find(\n              (activity) => !!activity.content.partsLayout.find((p: any) => p.id === lstVar[1]),\n            );\n            target = ownerActivity\n              ? `${ownerActivity.id}|${op.params.target}`\n              : `${op.params.target}`;\n          }\n        }\n        const originalValue = latestSnapshot[target];\n        const typeOfOriginalValue = typeof originalValue;\n        const evaluatedValue =\n          typeOfOriginalValue === 'string'\n            ? templatizeText(originalValue, latestSnapshot, defaultGlobalEnv, true)\n            : originalValue;\n        collect[op.params.target] = evaluatedValue;\n        return collect;\n      }, {});\n\n      dispatch(\n        setMutationTriggered({\n          changes: mutatedObjects,\n        }),\n      );\n    }\n\n    // after any mutations applied, and just in case\n    const tutScore = getValue('session.tutorialScore', defaultGlobalEnv) || 0;\n    const curScore = getValue('session.currentQuestionScore', defaultGlobalEnv) || 0;\n    dispatch(setScore({ score: tutScore + curScore }));\n\n    if (hasFeedback) {\n      dispatch(\n        setCurrentFeedbacks({\n          feedbacks: actionsByType.feedback.map((fAction: any) => fAction.params.feedback),\n        }),\n      );\n      dispatch(setIsGoodFeedback({ isGood: isCorrect }));\n      // need to queue up the feedback display prior to nav\n      // there are cases when wrong trap state gets trigger but user is still allowed to jump to another activity\n      if (hasNavigation) {\n        const [firstNavAction] = actionsByType.navigation;\n        const navTarget = firstNavAction.params.target;\n        dispatch(setNextActivityId({ activityId: navTarget }));\n      }\n    } else {\n      if (hasNavigation) {\n        const [firstNavAction] = actionsByType.navigation;\n        const navTarget = firstNavAction.params.target;\n        switch (navTarget) {\n          case 'next':\n            dispatch(navigateToNextActivity());\n            break;\n          case 'prev':\n            dispatch(navigateToPrevActivity());\n            break;\n          case 'first':\n            dispatch(navigateToFirstActivity());\n            break;\n          case 'last':\n            dispatch(navigateToLastActivity());\n            break;\n          default:\n            if (doesFirstEventHasNavigation && combineFeedback && navTarget === currentActivityId) {\n              const updateAttempt: ApplyStateOperation[] = [\n                {\n                  target: 'session.attemptNumber',\n                  operator: '=',\n                  value: 1,\n                },\n                {\n                  target: `${navTarget}|session.attemptNumber`,\n                  operator: '=',\n                  value: 1,\n                },\n              ];\n              bulkApplyState(updateAttempt, defaultGlobalEnv);\n              setHasOnlyMutation(true);\n            }\n            // assume it's a sequenceId\n            dispatch(navigateToActivity(navTarget));\n        }\n      }\n    }\n\n    if (!hasFeedback && !hasNavigation) {\n      setHasOnlyMutation(true);\n    }\n  }, [lastCheckResults]);\n\n  const checkHandler = () => {\n    setIsLoading(true);\n    if (displayFeedback) setDisplayFeedback(false);\n\n    // if (isGoodFeedback && canProceed) {\n    if (isGoodFeedback) {\n      if (nextActivityId && nextActivityId.trim()) {\n        dispatch(\n          nextActivityId === 'next' ? navigateToNextActivity() : navigateToActivity(nextActivityId),\n        );\n      } else {\n        // if there is no navigation, then keep checking\n        dispatch(triggerCheck({ activityId: currentActivity?.id }));\n      }\n      dispatch(setIsGoodFeedback({ isGood: false }));\n      dispatch(setNextActivityId({ nextActivityId: '' }));\n      setIsLoading(false);\n    } else if (\n      (!isLegacyTheme || !currentActivity?.custom?.showCheckBtn) &&\n      !isGoodFeedback &&\n      currentFeedbacks?.length > 0 &&\n      displayFeedbackIcon\n    ) {\n      if (currentPage.custom?.advancedAuthoring && !enableHistory) {\n        dispatch(triggerCheck({ activityId: currentActivity?.id }));\n      } else if (\n        !isGoodFeedback &&\n        nextActivityId?.trim().length &&\n        nextActivityId !== currentActivityId\n      ) {\n        //** there are cases when wrong trap state gets trigger but user is still allowed to jump to another activity */\n        //** if we don't do this then, every time Next button will trigger a check events instead of navigating user to respective activity */\n        dispatch(\n          nextActivityId === 'next' ? navigateToNextActivity() : navigateToActivity(nextActivityId),\n        );\n        dispatch(setNextActivityId({ nextActivityId: '' }));\n      } else {\n        dispatch(setIsGoodFeedback({ isGoodFeedback: false }));\n        setDisplayFeedbackIcon(false);\n        setIsLoading(false);\n        setDisplayFeedback(false);\n        setNextButtonText(nextCheckButtonText);\n      }\n    } else if (\n      !isGoodFeedback &&\n      nextActivityId?.trim().length &&\n      nextActivityId !== currentActivityId\n    ) {\n      //** DT - there are cases when wrong trap state gets trigger but user is still allowed to jump to another activity */\n      //** if we don't do this then, every time Next button will trigger a check events instead of navigating user to respective activity */\n      dispatch(\n        nextActivityId === 'next' ? navigateToNextActivity() : navigateToActivity(nextActivityId),\n      );\n      dispatch(setNextActivityId({ nextActivityId: '' }));\n    } else {\n      dispatch(triggerCheck({ activityId: currentActivityId as string }));\n    }\n  };\n\n  const lastCheckTriggered = useSelector(selectLastCheckTriggered);\n  const [checkInProgress, setCheckInProgress] = useState(false);\n\n  useEffect(() => {\n    if (!lastCheckTriggered) {\n      return;\n    }\n    setCheckInProgress(true);\n    setIsLoading(true);\n  }, [lastCheckTriggered]);\n\n  useEffect(() => {\n    if (hasOnlyMutation) {\n      setIsLoading(false);\n      setHasOnlyMutation(false);\n    }\n  }, [hasOnlyMutation]);\n\n  useEffect(() => {\n    if (checkInProgress && lastCheckResults) {\n      setCheckInProgress(false);\n    }\n  }, [checkInProgress, lastCheckResults]);\n\n  const updateButtontext = () => {\n    let text = currentActivity?.custom?.mainBtnLabel || 'Next';\n    if (currentFeedbacks && currentFeedbacks.length) {\n      const lastFeedback = currentFeedbacks[currentFeedbacks.length - 1];\n      text = lastFeedback.custom?.mainBtnLabel || 'Next';\n    }\n    setNextButtonText(text);\n  };\n\n  const isLegacyTheme = useSelector(selectIsLegacyTheme);\n\n  // TODO: global const for default width magic number?\n  const containerWidth =\n    currentActivity?.custom?.width || currentPage?.custom?.defaultScreenWidth || 1100;\n\n  const containerClasses = ['checkContainer', 'rowRestriction', 'columnRestriction'];\n\n  // effects\n  useEffect(() => {\n    // legacy usage expects the feedback header to be handled\n    // programatically based on the page themeId\n    setDisplayFeedbackHeader(!!currentPage?.custom?.themeId);\n  }, [currentPage]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    if (currentFeedbacks.length > 0) {\n      setDisplayFeedbackIcon(true);\n      setDisplayFeedback(true);\n      updateButtontext();\n    } else {\n      setDisplayFeedbackIcon(false);\n      setDisplayFeedback(false);\n    }\n  }, [currentFeedbacks]);\n\n  useEffect(() => {\n    const buttonText = currentActivity?.custom?.checkButtonLabel\n      ? currentActivity.custom.checkButtonLabel\n      : 'Next';\n    setNextCheckButtonText(buttonText);\n    setDisplayFeedbackIcon(false);\n    setDisplayFeedback(false);\n    setNextButtonText(buttonText);\n    setIsLoading(false);\n  }, [currentActivity]);\n\n  return (\n    <>\n      <div className={containerClasses.join(' ')} style={{ width: containerWidth }}>\n        <NextButton\n          isLoading={isLoading || !initPhaseComplete}\n          text={nextButtonText}\n          handler={checkHandler}\n          isGoodFeedbackPresent={isGoodFeedback}\n          currentFeedbacksCount={currentFeedbacks.length}\n          isFeedbackIconDisplayed={displayFeedbackIcon}\n          showCheckBtn={currentActivity?.custom?.showCheckBtn}\n        />\n        {!isLegacyTheme && (\n          <>\n            <FeedbackContainer\n              minimized={!displayFeedback}\n              showIcon={displayFeedbackIcon}\n              showHeader={displayFeedbackHeader}\n              onMinimize={() => setDisplayFeedback(false)}\n              onMaximize={() => setDisplayFeedback(true)}\n              feedbacks={currentFeedbacks}\n            />\n            <HistoryNavigation />\n          </>\n        )}\n      </div>\n      {isLegacyTheme && (\n        <>\n          <FeedbackContainer\n            minimized={!displayFeedback}\n            showIcon={displayFeedbackIcon}\n            showHeader={displayFeedbackHeader}\n            onMinimize={() => setDisplayFeedback(false)}\n            onMaximize={() => setDisplayFeedback(true)}\n            feedbacks={currentFeedbacks}\n          />\n          <HistoryNavigation />\n        </>\n      )}\n      <EverappContainer apps={currentPage?.custom?.everApps || []} />\n    </>\n  );\n};\n\nexport default DeckLayoutFooter;\n"]}