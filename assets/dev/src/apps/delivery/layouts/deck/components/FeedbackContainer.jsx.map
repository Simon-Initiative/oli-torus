{"version":3,"file":"FeedbackContainer.jsx","sourceRoot":"","sources":["../../../../../../../src/apps/delivery/layouts/deck/components/FeedbackContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { getLocalizedStateSnapshot } from 'adaptivity/scripting';\nimport { selectCurrentActivityTree } from 'apps/delivery/store/features/groups/selectors/deck';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport FeedbackRenderer from './FeedbackRenderer';\n\nexport interface FeedbackContainerProps {\n  minimized: boolean;\n  showIcon: boolean;\n  showHeader: boolean;\n  feedbacks: any[];\n  onMinimize: () => void;\n  onMaximize: () => void;\n}\n\nconst FeedbackContainer: React.FC<FeedbackContainerProps> = ({\n  minimized,\n  showIcon,\n  showHeader,\n  feedbacks,\n  onMinimize,\n  onMaximize,\n}) => {\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const currentActivityIds = (currentActivityTree || []).map((activity) => activity.id);\n\n  const handleToggleFeedback = () => {\n    if (minimized) {\n      onMaximize();\n    } else {\n      onMinimize();\n    }\n  };\n\n  const handleCloseFeedback = () => {\n    onMinimize();\n  };\n\n  return (\n    <div className=\"feedbackContainer rowRestriction\" style={{ top: 525 }}>\n      <div className={`bottomContainer fixed ${minimized ? 'minimized' : ''}`}>\n        <button\n          onClick={handleToggleFeedback}\n          className={showIcon ? 'toggleFeedbackBtn' : 'toggleFeedbackBtn displayNone'}\n          title=\"Toggle feedback visibility\"\n          aria-label=\"Show feedback\"\n          aria-haspopup=\"true\"\n          aria-controls=\"stage-feedback\"\n          aria-pressed=\"false\"\n        >\n          <div className=\"icon\" />\n        </button>\n        <div\n          id=\"stage-feedback\"\n          className={minimized ? 'displayNone' : ''}\n          role=\"alertdialog\"\n          aria-live=\"polite\"\n          aria-hidden=\"true\"\n          aria-label=\"Feedback dialog\"\n        >\n          <div className={`theme-feedback-header ${showHeader ? '' : 'displayNone'}`}>\n            <button\n              onClick={handleCloseFeedback}\n              className=\"theme-feedback-header__close-btn\"\n              aria-label=\"Minimize feedback\"\n            >\n              <span>\n                <div className=\"theme-feedback-header__close-icon\" />\n              </span>\n            </button>\n          </div>\n          <style type=\"text/css\" aria-hidden=\"true\" />\n          <style>\n            {`\n          #stage-feedback .content {\n            overflow: hidden auto !important;\n          }\n        `}\n          </style>\n          <div className=\"content\">\n            <FeedbackRenderer\n              feedbacks={feedbacks}\n              snapshot={getLocalizedStateSnapshot(currentActivityIds)}\n            />\n          </div>\n          {/* <button className=\"showSolnBtn showSolution displayNone\">\n                    <div className=\"ellipsis\">Show solution</div>\n                </button> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackContainer;\n"]}