{"version":3,"file":"DeckLayoutView.jsx","sourceRoot":"","sources":["../../../../../../src/apps/delivery/layouts/deck/DeckLayoutView.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport chroma from 'chroma-js';\nimport { ActivityState, PartResponse, StudentResponse } from 'components/activities/types';\nimport React, { CSSProperties, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ApplyStateOperation,\n  bulkApplyState,\n  defaultGlobalEnv,\n  evalScript,\n  getEnvState,\n  getLocalizedStateSnapshot,\n  getValue,\n  removeStateValues,\n} from '../../../../adaptivity/scripting';\nimport { contexts } from '../../../../types/applicationContext';\nimport ActivityRenderer from '../../components/ActivityRenderer';\nimport { triggerCheck } from '../../store/features/adaptivity/actions/triggerCheck';\nimport {\n  selectHistoryNavigationActivity,\n  selectLessonEnd,\n  setInitPhaseComplete,\n} from '../../store/features/adaptivity/slice';\nimport { savePartState, savePartStateToTree } from '../../store/features/attempt/actions/savePart';\nimport { initializeActivity } from '../../store/features/groups/actions/deck';\nimport {\n  selectCurrentActivityTree,\n  selectCurrentActivityTreeAttemptState,\n} from '../../store/features/groups/selectors/deck';\nimport { selectEnableHistory, selectUserName, setScore } from '../../store/features/page/slice';\nimport { LayoutProps } from '../layouts';\nimport DeckLayoutFooter from './DeckLayoutFooter';\nimport DeckLayoutHeader from './DeckLayoutHeader';\nimport { parseArray, parseNumString } from 'utils/common';\nimport { getLocalizedCurrentStateSnapshot } from 'apps/delivery/store/features/adaptivity/actions/getLocalizedCurrentStateSnapshot';\n\nconst InjectedStyles: React.FC<{ css?: string }> = (props) => {\n  // migrated legacy include as customCss\n  // BS: do we need a default?\n  const defaultCss = '';\n  const injected = props.css || defaultCss;\n  return injected ? <style>{injected}</style> : null;\n};\n\nconst sharedActivityInit = new Map();\nlet sharedActivityPromise: any;\n\nconst DeckLayoutView: React.FC<LayoutProps> = ({ pageTitle, pageContent, previewMode }) => {\n  const dispatch = useDispatch();\n  const fieldRef = React.useRef<HTMLInputElement>(null);\n  const currentActivityTree = useSelector(selectCurrentActivityTree);\n  const currentActivityAttemptTree = useSelector(selectCurrentActivityTreeAttemptState);\n  const currentUserName = useSelector(selectUserName);\n  const historyModeNavigation = useSelector(selectHistoryNavigationActivity);\n  const isEnd = useSelector(selectLessonEnd);\n  const defaultClasses: any[] = ['lesson-loaded', previewMode ? 'previewView' : 'lessonView'];\n  const [pageClasses, setPageClasses] = useState<string[]>([]);\n  const [activityClasses, setActivityClasses] = useState<string[]>([...defaultClasses]);\n  const [lessonStyles, setLessonStyles] = useState<any>({});\n  const enableHistory = useSelector(selectEnableHistory);\n  // Background\n  const backgroundClasses = ['background'];\n  const backgroundStyles: CSSProperties = {};\n  if (pageContent?.custom?.backgroundImageURL) {\n    backgroundStyles.backgroundImage = `url('${pageContent.custom.backgroundImageURL}')`;\n  }\n  if (pageContent?.custom?.backgroundImageScaleContent) {\n    backgroundClasses.push('background-scaled');\n  }\n  const getCustomClassAncestry = () => {\n    let className = '';\n    if (currentActivityTree) {\n      currentActivityTree.forEach((activity) => {\n        if (activity?.content?.custom?.customCssClass) {\n          className += activity?.content?.custom?.customCssClass;\n        }\n      });\n    }\n\n    return className;\n  };\n  useEffect(() => {\n    // clear body classes on init for a clean slate\n    document.body.className = '';\n  }, []);\n\n  useEffect(() => {\n    if (!pageContent) {\n      return;\n    }\n\n    // set page class on change\n    if (pageContent?.custom?.viewerSkin) {\n      setPageClasses([`skin-${pageContent.custom.viewerSkin}`]);\n    }\n\n    const lessonWidth = pageContent.custom.defaultScreenWidth || '100%';\n    const lessonHeight = pageContent.custom.defaultScreenHeight;\n    // TODO: add a flag to lesson data use the height?\n    const useLessonHeight = false;\n    setLessonStyles(() => {\n      const styles: any = {\n        width: lessonWidth,\n      };\n      if (useLessonHeight) {\n        styles.height = lessonHeight;\n      }\n      return styles;\n    });\n\n    if (pageContent?.customScript) {\n      // apply a custom *janus* script if defined\n      // this is for user defined functions (also legacy)\n      // TODO: something if there are errors\n      const csResult = evalScript(pageContent?.customScript, defaultGlobalEnv);\n      /* console.log('Lesson Custom Script: ', {\n        script: pageContent?.customScript,\n        csResult,\n      }); */\n    }\n\n    if (Array.isArray(pageContent?.custom?.variables)) {\n      const allNames = pageContent.custom.variables.map((v: any) => v.name);\n      // variables can and will ref previous ones\n      // they will reference them \"globally\" so need to track the above\n      // in order to prepend the \"variables\" namespace\n      const statements: string[] = pageContent.custom.variables\n        .map((v: any) => {\n          if (!v.name || !v.expression) {\n            return '';\n          }\n          let expr = v.expression;\n          allNames.forEach((name: string) => {\n            const regex = new RegExp(`{${name}}`, 'g');\n            expr = expr.replace(regex, `{variables.${name}}`);\n          });\n\n          const stmt = `let {variables.${v.name.trim()}} = ${expr};`;\n          return stmt;\n        })\n        .filter((s: any) => s);\n      // execute each sequentially in case there are errors (missing functions)\n      statements.forEach((statement) => {\n        evalScript(statement, defaultGlobalEnv);\n      });\n    }\n  }, [pageContent]);\n\n  useEffect(() => {\n    if (!currentActivityTree || currentActivityTree.length === 0) {\n      return;\n    }\n    // Need to clear out snapshot for the current activity before we send the init trap state.\n    // this is needed for use cases where, when we re-visit an activity screen, it needs to restart fresh otherwise\n    // some screens go in loop\n    // Don't do anything id enableHistory/historyModeNavigation is ON\n\n    if (!historyModeNavigation && currentActivityTree) {\n      const globalSnapshot = getEnvState(defaultGlobalEnv);\n      // this is firing after some initial part saves and wiping out what we have just set\n      // maybe we don't need to write the local versions ever?? instead just whenever anything\n      // is asking for it we can just give the localized snapshot?\n      const currentActivity = currentActivityTree[currentActivityTree.length - 1];\n\n      const idsToBeRemoved: any[] = Object.keys(globalSnapshot).filter(\n        (key: string) =>\n          key.indexOf('stage.') === 0 || key.indexOf(`${currentActivity.id}|stage.`) === 0,\n      ); /*\n      console.log('REMOVING STATE VALUES: ', idsToBeRemoved); */\n      if (idsToBeRemoved.length) {\n        removeStateValues(defaultGlobalEnv, idsToBeRemoved);\n      }\n    }\n    let timeout: NodeJS.Timeout;\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n      let resolved = false;\n      resolve = (value: any) => {\n        resolved = true;\n        res(value);\n      };\n      reject = (reason: string) => {\n        resolved = true;\n        rej(reason);\n      };\n      timeout = setTimeout(() => {\n        if (resolved) {\n          return;\n        }\n        console.error('[AllActivitiesInit] failed to resolve within time limit', {\n          currentActivityTree,\n          timeout,\n        });\n      }, 10000);\n    });\n    sharedActivityPromise = { promise, resolve, reject };\n\n    currentActivityTree.forEach((activity) => {\n      // layers already might be there\n      // TODO: do I need to reset ever???\n      if (!sharedActivityInit.has(activity.id)) {\n        sharedActivityInit.set(activity.id, false);\n      }\n    });\n\n    const currentActivity = currentActivityTree[currentActivityTree.length - 1];\n    if (!currentActivity) {\n      return;\n    }\n\n    // set loaded and userRole class when currentActivity is loaded\n    let customClasses = currentActivity.content?.custom?.customCssClass || '';\n\n    if (currentActivityTree.length) {\n      customClasses = `${customClasses} ${getCustomClassAncestry()}`;\n    }\n    setActivityClasses([...defaultClasses, customClasses]);\n    if (fieldRef.current) {\n      fieldRef.current.scrollIntoView();\n    }\n\n    if (currentActivity?.custom?.customCssClass) {\n      // split space delimited strings into array of strings\n      const customClasses = currentActivity.content?.customCssClass?.split(' ') || [];\n      customClasses.map((c: string) => {\n        if (c === 'defaultFeedback') {\n          setPageClasses([...new Set([...pageClasses, c])]);\n        }\n      });\n\n      // set new class list after check for duplicate strings\n      // & strip whitespace from array strings\n      setActivityClasses(\n        [...new Set([...defaultClasses, ...customClasses])].map((str) => str.trim()),\n      );\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      sharedActivityPromise = null;\n    };\n  }, [currentActivityTree]);\n\n  useEffect(() => {\n    // clear the body classes in prep for the real classes\n    document.body.className = '';\n\n    // strip whitespace and update body class list with page classes\n    document.body.classList.add(...pageClasses);\n  }, [pageClasses]);\n\n  const initCurrentActivity = useCallback(async () => {\n    if (!currentActivityTree) {\n      console.error('[initCurrentActivity] no currentActivityTree');\n      return;\n    }\n    const currentActivity = currentActivityTree[currentActivityTree.length - 1];\n    if (!currentActivity) {\n      console.error('[initCurrentActivity] bad tree??', currentActivityTree);\n      return;\n    }\n    await dispatch(initializeActivity(currentActivity.resourceId));\n  }, [currentActivityTree]);\n\n  const handleActivityReady = async (activityId: string | number, attemptGuid: string) => {\n    sharedActivityInit.set(activityId, true);\n    // BS: this is init state phase (mostly) and it needs to run AFTER every part\n    // has already saved its \"default\" values or else the init state rules will just\n    // get overwritten by them saving the default value\n    //\n    /* console.log('DECK HANDLE READY', {\n      activityId,\n      attemptGuid,\n      currentActivityTree,\n      sharedActivityInit: Array.from(sharedActivityInit.entries()),\n    }); */\n    if (currentActivityTree?.every((activity) => sharedActivityInit.get(activity.id) === true)) {\n      await initCurrentActivity();\n      const currentActivityIds = (currentActivityTree || []).map((a) => a.id);\n      sharedActivityPromise.resolve({\n        snapshot: getLocalizedStateSnapshot(currentActivityIds),\n        context: {\n          currentActivity: currentActivityTree[currentActivityTree.length - 1].id,\n          mode: historyModeNavigation ? contexts.REVIEW : contexts.VIEWER,\n        },\n      });\n      dispatch(setInitPhaseComplete(true));\n    }\n    return sharedActivityPromise.promise;\n  };\n\n  const handleActivitySave = async (\n    activityId: string | number,\n    attemptGuid: string,\n    partResponses: PartResponse[],\n  ) => {\n    /* console.log('DECK HANDLE SAVE', { activityId, attemptGuid, partResponses }); */\n    // TODO: currently not used.\n    return true;\n  };\n\n  const handleActivitySubmit = async (\n    activityId: string | number,\n    attemptGuid: string,\n    partResponses: PartResponse[],\n  ) => {\n    /* console.log('DECK HANDLE SUBMIT', { activityId, attemptGuid, partResponses }); */\n    // TODO: currently not used.\n    return true;\n  };\n\n  const handleActivitySavePart = async (\n    activityId: string | number,\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => {\n    /* console.log('DECK HANDLE SAVE PART', {\n      activityId,\n      attemptGuid,\n      partAttemptGuid,\n      response,\n      currentActivityTree,\n    }); */\n    const statePrefix = `${activityId}|stage`;\n    const responseMap = response.input.reduce(\n      (result: { [x: string]: any }, item: { key: string; path: string }) => {\n        result[item.key] = { ...item, path: `${statePrefix}.${item.path}` };\n        return result;\n      },\n      {},\n    );\n\n    const currentActivityIds = (currentActivityTree || []).map((a) => a.id);\n    if (!currentActivityTree || !currentActivityTree.length) {\n      // throw instead?\n      return { result: 'error' };\n    }\n\n    //if user navigated from history, don't save anything and just return the saved state\n    if (historyModeNavigation) {\n      return { result: null, snapshot: getLocalizedStateSnapshot(currentActivityIds) };\n    }\n\n    if (response?.input?.length) {\n      let result;\n      // in addition to the current part attempt, need to lookup in the tree\n      // if this part is an inherited part and also write to the child attempt records\n      const currentActivity = currentActivityTree[currentActivityTree.length - 1];\n      if (currentActivity.id !== activityId) {\n        // this means that the part is inherted (we are a layer or parent screen)\n        // so we need to update all children in the tree with this part response as well\n        result = await dispatch(\n          savePartStateToTree({\n            attemptGuid,\n            partAttemptGuid,\n            response: responseMap,\n            activityTree: currentActivityTree,\n          }),\n        );\n      } else {\n        result = await dispatch(\n          savePartState({ attemptGuid, partAttemptGuid, response: responseMap }),\n        );\n      }\n      return { result, snapshot: getLocalizedStateSnapshot(currentActivityIds) };\n    } else {\n      return { result: null, snapshot: getLocalizedStateSnapshot(currentActivityIds) };\n    }\n  };\n\n  const handleActivitySubmitPart = async (\n    activityId: string | number,\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => {\n    // save before submitting\n    const { result, snapshot } = await handleActivitySavePart(\n      activityId,\n      attemptGuid,\n      partAttemptGuid,\n      response,\n    );\n\n    dispatch(triggerCheck({ activityId: activityId.toString() }));\n\n    return { result, snapshot };\n  };\n\n  const handleActivityRequestLatestState = useCallback(async () => {\n    const sResult = await dispatch(getLocalizedCurrentStateSnapshot());\n    const {\n      payload: { snapshot },\n    } = sResult as any;\n    return {\n      snapshot,\n    };\n  }, [currentActivityTree]);\n\n  const renderActivities = useCallback(() => {\n    if (!currentActivityTree || !currentActivityTree.length) {\n      return <div>loading...</div>;\n    }\n\n    const actualCurrentActivity = currentActivityTree[currentActivityTree.length - 1];\n    const config = actualCurrentActivity.content.custom;\n    const styles: CSSProperties = {\n      width: config?.width || lessonStyles.width,\n    };\n    if (config?.palette) {\n      if (config.palette.useHtmlProps) {\n        styles.backgroundColor = config.palette.backgroundColor;\n        styles.borderColor = config.palette.borderColor;\n        styles.borderWidth = config.palette.borderWidth;\n        styles.borderStyle = config.palette.borderStyle;\n        styles.borderRadius = config.palette.borderRadius;\n      } else {\n        styles.borderWidth = `${\n          config?.palette?.lineThickness ? config?.palette?.lineThickness + 'px' : '1px'\n        }`;\n        styles.borderRadius = '10px';\n        styles.borderStyle = 'solid';\n        styles.borderColor = `rgba(${\n          config?.palette?.lineColor || config?.palette?.lineColor === 0\n            ? chroma(config?.palette?.lineColor).rgb().join(',')\n            : '255, 255, 255'\n        },${config?.palette?.lineAlpha})`;\n        styles.backgroundColor = `rgba(${\n          config?.palette?.fillColor || config?.palette?.fillColor === 0\n            ? chroma(config?.palette?.fillColor).rgb().join(',')\n            : '255, 255, 255'\n        },${config?.palette?.fillAlpha})`;\n      }\n    }\n    if (config?.x) {\n      styles.left = config.x;\n    }\n    if (config?.y) {\n      styles.top = config.y;\n    }\n    if (config?.z) {\n      styles.zIndex = config.z || 0;\n    }\n    if (config?.height) {\n      styles.height = config.height;\n    }\n\n    // attempts are being constantly updated, if we are not careful it will re-render the activity\n    // too many times. instead we want to only send the \"initial\" attempt state\n    // activities should then keep track of updates internally and if needed request updates\n    const activities = currentActivityTree.map((activity) => {\n      const attempt = currentActivityAttemptTree?.find(\n        (a) => a?.activityId === activity.resourceId,\n      );\n      if (!attempt) {\n        console.error('could not find attempt state for ', activity);\n        return;\n      }\n      const activityKey = historyModeNavigation ? `${activity.id}_history` : activity.id;\n\n      return (\n        <ActivityRenderer\n          key={activityKey}\n          activity={activity}\n          attempt={attempt as ActivityState}\n          onActivitySave={handleActivitySave}\n          onActivitySubmit={handleActivitySubmit}\n          onActivitySavePart={handleActivitySavePart}\n          onActivitySubmitPart={handleActivitySubmitPart}\n          onActivityReady={handleActivityReady}\n          onRequestLatestState={handleActivityRequestLatestState}\n        />\n      );\n    });\n\n    return (\n      <div className=\"content\" style={styles}>\n        {activities}\n      </div>\n    );\n  }, [currentActivityTree, lessonStyles]);\n\n  useEffect(() => {\n    if (!isEnd) {\n      return;\n    }\n\n    const tutorialScoreOp: ApplyStateOperation = {\n      target: 'session.tutorialScore',\n      operator: '+',\n      value: '{session.currentQuestionScore}',\n    };\n    const currentScoreOp: ApplyStateOperation = {\n      target: 'session.currentQuestionScore',\n      operator: '=',\n      value: 0,\n    };\n    bulkApplyState([tutorialScoreOp, currentScoreOp], defaultGlobalEnv);\n    const tutScore = getValue('session.tutorialScore', defaultGlobalEnv) || 0;\n    const curScore = getValue('session.currentQuestionScore', defaultGlobalEnv) || 0;\n    dispatch(setScore({ score: tutScore + curScore }));\n    // we shouldn't have to send this to the server, it should already be calculated there\n  }, [isEnd]);\n\n  return (\n    <div ref={fieldRef} className={activityClasses.join(' ')}>\n      <style>{`style { display: none !important; }`}</style>\n      <DeckLayoutHeader\n        pageName={pageTitle}\n        userName={currentUserName}\n        activityName=\"\"\n        showScore={true}\n        themeId={pageContent?.custom?.themeId}\n      />\n      <div className={backgroundClasses.join(' ')} style={backgroundStyles} />\n      {pageContent ? (\n        <div className=\"stageContainer columnRestriction\" style={lessonStyles}>\n          <InjectedStyles css={pageContent?.customCss} />\n          <div id=\"stage-stage\">\n            <div className=\"stage-content-wrapper\">{renderActivities()}</div>\n          </div>\n        </div>\n      ) : (\n        <div>loading...</div>\n      )}\n      <DeckLayoutFooter />\n    </div>\n  );\n};\n\nexport default DeckLayoutView;\n"]}