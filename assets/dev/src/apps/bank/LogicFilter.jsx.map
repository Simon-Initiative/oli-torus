{"version":3,"file":"LogicFilter.jsx","sourceRoot":"","sources":["../../../../src/apps/bank/LogicFilter.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAG/B,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAO/D,MAAM,SAAS,GAAG,CAAC,KAAU,EAAE,KAAa,EAAE,IAAS,EAAE,EAAE;IACzD,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;IAC9B,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;IACtB,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAA+B,CAAC,KAAuB,EAAE,EAAE;IACjF,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAExC,MAAM,UAAU,GAAG,CAAC,KAAa,EAAE,CAAM,EAAE,EAAE;QAC3C,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3D,QAAQ,CAAC,WAAW,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAkB,EAAE,KAAa,EAAE,EAAE,CAAC,CACjE,CAAC,UAAU,CACT,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,IAAI,KAAK,CAAC,CACV,SAAS,CAAC,CAAC,IAAI,CAAC,CAChB,UAAU,CAAC,CAAC,CAAC,CAAC,CACd,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CACvC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EACrB,CACH,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5C,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as Bank from 'data/content/bank';\nimport { LogicProps } from '../../components/logic/common';\nimport { Expression } from '../../components/logic/Expression';\n\nexport interface LogicFilterProps extends LogicProps {\n  expressions: Bank.Expression[];\n  onChange: (expressions: Bank.Expression[]) => void;\n}\n\nconst replaceAt = (array: any, index: number, item: any) => {\n  const updated = array.slice();\n  updated[index] = item;\n  return updated;\n};\n\nexport const LogicFilter: React.FC<LogicFilterProps> = (props: LogicFilterProps) => {\n  const { expressions, onChange } = props;\n\n  const changeRoot = (index: number, e: any) => {\n    const expressions = replaceAt(props.expressions, index, e);\n    onChange(expressions);\n  };\n\n  const exp = expressions.map((e: Bank.Expression, index: number) => (\n    <Expression\n      key={index}\n      {...props}\n      fixedFact={true}\n      expression={e}\n      onChange={changeRoot.bind(this, index)}\n      onRemove={() => true}\n    />\n  ));\n\n  return <div className=\"logic\">{exp}</div>;\n};\n"]}