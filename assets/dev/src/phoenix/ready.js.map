{"version":3,"file":"ready.js","sourceRoot":"","sources":["../../../src/phoenix/ready.ts"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,gDAAgD;AAChD,MAAM,UAAU,OAAO,CAAC,IAAgB;IACtC,SAAS,SAAS;QAChB,QAAQ,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAC5D,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC9C,IAAI,EAAE,CAAC;IACT,CAAC;IAED,sCAAsC;IACtC,gDAAgD;IAChD,IAAI,QAAQ,CAAC,UAAU,KAAK,SAAS,EAAE;QACrC,2EAA2E;QAC3E,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;KAC5B;SAAM;QACL,+BAA+B;QAC/B,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QAEzD,qDAAqD;QACrD,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KAC5C;AACH,CAAC","sourcesContent":["// Executes a function after the DOM content has loaded on a page. This\n// implementation was lifted from jQuery's impl.\nexport function onReady(func: () => void): void {\n  function completed() {\n    document.removeEventListener('DOMContentLoaded', completed);\n    window.removeEventListener('load', completed);\n    func();\n  }\n\n  // Catch cases where onReady is called\n  // after the browser event has already occurred.\n  if (document.readyState !== 'loading') {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(func, 0);\n  } else {\n    // Use the handy event callback\n    document.addEventListener('DOMContentLoaded', completed);\n\n    // A fallback to window.onload, that will always work\n    window.addEventListener('load', completed);\n  }\n}\n"]}