{"version":3,"file":"lock.js","sourceRoot":"","sources":["../../../../src/data/persistence/lock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAe,MAAM,UAAU,CAAC;AAmBpD,MAAM,UAAU,WAAW,CAAC,OAAoB,EAAE,QAAsB;IACtE,MAAM,MAAM,GAAG;QACb,GAAG,EAAE,YAAY,OAAO,SAAS,QAAQ,EAAE;QAC3C,MAAM,EAAE,QAAQ;KACjB,CAAC;IACF,OAAO,WAAW,CAAa,MAAM,CAAC,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,OAAoB,EACpB,QAAsB,EACtB,YAAY,GAAG,KAAK;IAEpB,MAAM,GAAG,GAAG,YAAY;QACtB,CAAC,CAAC,YAAY,OAAO,SAAS,QAAQ,sBAAsB;QAC5D,CAAC,CAAC,YAAY,OAAO,SAAS,QAAQ,uBAAuB,CAAC;IAEhE,MAAM,MAAM,GAAG;QACb,GAAG;QACH,MAAM,EAAE,MAAM;KACf,CAAC;IACF,OAAO,WAAW,CAAa,MAAM,CAAC,CAAC;AACzC,CAAC","sourcesContent":["import { makeRequest, ServerError } from './common';\nimport { ProjectSlug, ResourceSlug } from '../types';\n\nexport type LockResult = Acquired | Released | NotAcquired | ServerError;\n\nexport type Acquired = {\n  type: 'acquired';\n  revision?: any;\n};\n\nexport type NotAcquired = {\n  type: 'not_acquired';\n  user: string;\n};\n\nexport type Released = {\n  type: 'released';\n};\n\nexport function releaseLock(project: ProjectSlug, resource: ResourceSlug): Promise<LockResult> {\n  const params = {\n    url: `/project/${project}/lock/${resource}`,\n    method: 'DELETE',\n  };\n  return makeRequest<LockResult>(params);\n}\n\nexport function acquireLock(\n  project: ProjectSlug,\n  resource: ResourceSlug,\n  withRevision = false,\n): Promise<LockResult> {\n  const url = withRevision\n    ? `/project/${project}/lock/${resource}?fetch_revision=true`\n    : `/project/${project}/lock/${resource}?fetch_revision=false`;\n\n  const params = {\n    url,\n    method: 'POST',\n  };\n  return makeRequest<LockResult>(params);\n}\n"]}