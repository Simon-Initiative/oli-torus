{"version":3,"file":"intrinsic.js","sourceRoot":"","sources":["../../../../../src/data/persistence/state/intrinsic.ts"],"names":[],"mappings":"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","sourcesContent":["import { makeRequest } from '../common';\n\nexport type BulkAttemptRetrieved = {\n  result: 'success';\n  activityAttempts: any[];\n};\n\nexport const getBulkAttemptState = async (sectionSlug: string, attemptGuids: string[]) => {\n  const params = {\n    method: 'POST',\n    url: `/state/course/${sectionSlug}/activity_attempt`,\n    body: JSON.stringify({ attemptGuids }),\n  };\n\n  const response = await makeRequest<BulkAttemptRetrieved>(params);\n  if (response.result !== 'success') {\n    throw new Error(`Server ${response.status} error: ${response.message}`);\n  }\n\n  return response.activityAttempts;\n};\n\nexport const getPageAttemptState = async (sectionSlug: string, resourceAttemptGuid: string) => {\n  const url = `/state/course/${sectionSlug}/resource_attempt/${resourceAttemptGuid}`;\n  const result = await makeRequest({\n    url,\n    method: 'GET',\n  });\n  return { result };\n};\n\nexport const writePageAttemptState = async (\n  sectionSlug: string,\n  resourceAttemptGuid: string,\n  state: any,\n) => {\n  const method = 'PUT';\n  const url = `/state/course/${sectionSlug}/resource_attempt/${resourceAttemptGuid}`;\n  const result = await makeRequest({\n    url,\n    method,\n    body: JSON.stringify(state),\n  });\n  return { result };\n};\n\nexport const writeActivityAttemptState = async (\n  sectionSlug: string,\n  attemptGuid: string,\n  partResponses: any,\n  finalize = false,\n) => {\n  const method = finalize ? 'PUT' : 'PATCH';\n  const url = `/state/course/${sectionSlug}/activity_attempt/${attemptGuid}`;\n  const result = await makeRequest({\n    url,\n    method,\n    body: JSON.stringify({ partInputs: partResponses }),\n  });\n  return { result };\n};\n\nexport const writePartAttemptState = async (\n  sectionSlug: string,\n  attemptGuid: string,\n  partAttemptGuid: string,\n  input: any,\n  finalize = false,\n) => {\n  const method = finalize ? 'PUT' : 'PATCH';\n  const url = `/state/course/${sectionSlug}/activity_attempt/${attemptGuid}/part_attempt/${partAttemptGuid}`;\n  const result = await makeRequest({\n    url,\n    method,\n    body: JSON.stringify({ response: input }),\n  });\n  return { result };\n};\n\nexport const createNewActivityAttempt = async (\n  sectionSlug: string,\n  attemptGuid: string,\n  seedResponsesWithPrevious = false,\n): Promise<any> => {\n  // type ActivityState ? this is in components currently\n  const method = 'POST';\n  const url = `/state/course/${sectionSlug}/activity_attempt/${attemptGuid}`;\n  const result = await makeRequest({\n    url,\n    method,\n    body: JSON.stringify({ seedResponsesWithPrevious }),\n  });\n  return result;\n};\n\nexport const evalActivityAttempt = async (\n  sectionSlug: string,\n  attemptGuid: string,\n  partInputs: any[], // TODO: type for PartInput / PartResponse\n) => {\n  const method = 'PUT';\n  const url = `/state/course/${sectionSlug}/activity_attempt/${attemptGuid}`;\n  const body = JSON.stringify({ partInputs });\n  const result = await makeRequest({\n    url,\n    method,\n    body,\n  });\n  return { result };\n};\n"]}