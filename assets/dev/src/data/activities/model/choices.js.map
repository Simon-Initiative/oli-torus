{"version":3,"file":"choices.js","sourceRoot":"","sources":["../../../../../src/data/activities/model/choices.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAElD,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAElD,MAAM,IAAI,GAAG,YAAY,CAAC;AAE1B,MAAM,CAAC,MAAM,OAAO,iCAClB,IAAI,EAAE,IAAI,EACV,QAAQ,EAAE,CAAC,EAAU,EAAE,IAAI,GAAG,IAAI,EAAE,EAAE,CAAC,IAAI,GAAG,YAAY,EAAE,IAAI,IAE7D,IAAI,CAAS,IAAI,CAAC,KAErB,UAAU,CAAC,EAAU,EAAE,OAAqB;QAC1C,OAAO,CAAC,KAAU,EAAE,KAAmB,EAAE,EAAE;YACzC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,sBAAsB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;QAC7F,CAAC,CAAC;IACJ,CAAC,GACF,CAAC","sourcesContent":["import { Choice, PostUndoable } from 'components/activities/types';\nimport { List } from 'data/activities/model/list';\nimport { Descendant } from 'slate';\nimport { Operations } from 'utils/pathOperations';\n\nconst PATH = '$..choices';\n\nexport const Choices = {\n  path: PATH,\n  pathById: (id: string, path = PATH) => path + `[?(@.id==${id})]`,\n\n  ...List<Choice>(PATH),\n\n  setContent(id: string, content: Descendant[]) {\n    return (model: any, _post: PostUndoable) => {\n      Operations.apply(model, Operations.replace(`$..choices[?(@.id==${id})].content`, content));\n    };\n  },\n};\n"]}