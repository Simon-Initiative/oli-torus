{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/data/activities/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport {\n  ActivityModelSchema,\n  ActivityState,\n  Part,\n  PartId,\n  PartState,\n} from 'components/activities/types';\nimport { PartInputs, StudentInput } from 'data/activities/DeliveryState';\nimport { Maybe } from 'tsmonad';\nimport { removeEmpty } from 'utils/common';\nimport guid from 'utils/guid';\n\n// Activity delivery components have an `input` string which is the persisted value\n// of a student's entry saved with `onSaveActivity` or submitted with\n// `onSubmitActivity`. These functions convert between the `input` string and the\n// `selection` which is a `ChoiceId[]` that is used directly by the delivery components.\nexport const studentInputToString = (studentInput: StudentInput): string => studentInput.join(' ');\nexport const stringToStudentInput = (input: string): StudentInput =>\n  input.split(' ').reduce((ids, id) => ids.concat([id]), [] as StudentInput);\n\n// An `ActivityState` only has an input if it has been saved or submitted.\n// Each activity part may have an input.\nexport const safelySelectInputs = (activityState: ActivityState | undefined): Maybe<PartInputs> => {\n  const partInputs = activityState?.parts.filter((part) => !!part?.response?.input);\n  if (!partInputs) return Maybe.nothing();\n\n  return Maybe.maybe(activityState).lift((state) =>\n    state.parts.reduce((acc, partState) => {\n      const input = partState.response?.input;\n      acc[String(partState.partId)] = typeof input === 'string' ? stringToStudentInput(input) : [];\n      return acc;\n    }, {} as PartInputs),\n  );\n};\n\nexport const safelySelectStringInputs = (\n  activityState: ActivityState | undefined,\n): Maybe<PartInputs> => {\n  const partInputs = activityState?.parts.filter((part) => !!part?.response?.input);\n  if (!partInputs) return Maybe.nothing();\n\n  return Maybe.maybe(activityState).lift((state) =>\n    state.parts.reduce((acc, partState) => {\n      const input = partState.response?.input;\n      acc[String(partState.partId)] = [input];\n      return acc;\n    }, {} as PartInputs),\n  );\n};\n\nexport const initialPartInputs = (\n  activityState: ActivityState | undefined,\n  defaultPartInputs: PartInputs = { [DEFAULT_PART_ID]: [] },\n): PartInputs => {\n  const savedPartInputs = activityState?.parts\n    .filter((part) => part?.response?.input !== undefined)\n    .reduce((acc, part) => {\n      acc[part.partId] = part.response.input;\n      return acc;\n    }, {} as Record<PartId, string>);\n\n  if (!savedPartInputs) return defaultPartInputs;\n\n  return Object.entries(defaultPartInputs).reduce((acc, partInput) => {\n    const [partId, defaultInput] = partInput;\n    if (savedPartInputs[partId]) {\n      acc[partId] = stringToStudentInput(savedPartInputs[partId]);\n      return acc;\n    }\n    acc[partId] = defaultInput;\n    return acc;\n  }, {} as PartInputs);\n};\n\n// Is an activity evaluation correct? This does not support partial credit.\nexport const isCorrect = (activityState: ActivityState) => activityState.score !== 0;\n\nexport const defaultActivityState = (model: ActivityModelSchema): ActivityState => {\n  const parts: PartState[] = model.authoring.parts.map((p: Part) => ({\n    attemptNumber: 1,\n    attemptGuid: p.id,\n    dateEvaluated: null,\n    score: null,\n    outOf: null,\n    response: null,\n    feedback: null,\n    hints: [],\n    hasMoreHints: removeEmpty(p.hints).length > 0,\n    hasMoreAttempts: true,\n    partId: p.id,\n  }));\n\n  return {\n    attemptNumber: 1,\n    attemptGuid: guid(),\n    dateEvaluated: null,\n    score: null,\n    outOf: null,\n    hasMoreAttempts: true,\n    parts,\n    hasMoreHints: false,\n  };\n};\n"]}