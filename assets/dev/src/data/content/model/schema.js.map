{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/data/content/model/schema.ts"],"names":[],"mappings":"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","sourcesContent":["const toObj = (arr: string[]): Record<string, boolean> =>\n  arr.reduce((p, c) => {\n    p[c] = true;\n    return p;\n  }, {} as Record<string, boolean>);\n\nconst header = {\n  isVoid: false,\n  isBlock: true,\n  isTopLevel: true,\n  validChildren: {},\n};\n\nconst media = {\n  isVoid: true,\n  isBlock: true,\n  isTopLevel: true,\n  validChildren: {},\n};\n\nconst tableCell = {\n  isVoid: false,\n  isBlock: true,\n  isTopLevel: false,\n  validChildren: toObj(['p', 'img', 'youtube', 'audio', 'math']),\n};\n\nconst list = {\n  isVoid: false,\n  isBlock: true,\n  isTopLevel: true,\n  validChildren: toObj(['li', 'ol', 'ul']),\n};\n\nexport interface SchemaConfig {\n  isVoid: boolean;\n  isBlock: boolean;\n  isTopLevel: boolean;\n  validChildren: Record<string, boolean>;\n}\n\ninterface Schema\n  extends Record<\n    string,\n    {\n      isVoid: boolean;\n      isBlock: boolean;\n      isTopLevel: boolean;\n      validChildren: Record<string, boolean>;\n      isSimpleText?: boolean;\n    }\n  > {}\nexport const schema: Schema = {\n  p: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: true,\n    validChildren: toObj(['input_ref']),\n  },\n  h1: header,\n  h2: header,\n  h3: header,\n  h4: header,\n  h5: header,\n  h6: header,\n  img: media,\n  youtube: media,\n  audio: media,\n  iframe: media,\n  table: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: true,\n    validChildren: toObj(['tr']),\n  },\n  tr: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: false,\n    validChildren: toObj(['td', 'th']),\n  },\n  th: tableCell,\n  td: tableCell,\n  ol: list,\n  ul: list,\n  li: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: false,\n    validChildren: toObj(['ol', 'ul']),\n  },\n  math: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: true,\n    validChildren: toObj(['math_line']),\n  },\n  math_line: {\n    isVoid: false,\n    isBlock: true,\n    isSimpleText: true,\n    isTopLevel: false,\n    validChildren: {},\n  },\n  code: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: true,\n    validChildren: toObj(['code_line']),\n  },\n  code_line: {\n    isVoid: false,\n    isBlock: true,\n    isSimpleText: true,\n    isTopLevel: false,\n    validChildren: {},\n  },\n  blockquote: {\n    isVoid: false,\n    isBlock: true,\n    isTopLevel: true,\n    validChildren: toObj(['p']),\n  },\n  a: {\n    isVoid: false,\n    isBlock: false,\n    isTopLevel: false,\n    validChildren: {},\n  },\n  popup: {\n    isVoid: false,\n    isBlock: false,\n    isTopLevel: false,\n    validChildren: {},\n  },\n  input_ref: {\n    isVoid: true,\n    isBlock: false,\n    isTopLevel: false,\n    validChildren: {},\n  },\n};\n"]}