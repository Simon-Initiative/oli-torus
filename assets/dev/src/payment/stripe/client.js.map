{"version":3,"file":"client.js","sourceRoot":"","sources":["../../../../src/payment/stripe/client.ts"],"names":[],"mappings":"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","sourcesContent":["import { loadStripe, Stripe } from '@stripe/stripe-js';\n\nfunction get(selector: string): any {\n  return document.querySelector(selector) as any;\n}\n\n// Calls stripe.confirmCardPayment\n// If the card requires authentication Stripe shows a pop-up modal to\n// prompt the user to enter authentication details without leaving your page.\nconst payWithCard = (stripe: any, card: any, clientSecret: any) => {\n  loading(true);\n  stripe\n    .confirmCardPayment(clientSecret, {\n      payment_method: {\n        card,\n      },\n    })\n    .then((result: any) => {\n      if (result.error) {\n        fetch('/api/v1/payments/s/failure', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ clientSecret, reason: result.error.message }),\n        });\n        showError(result.error.message);\n      } else {\n        orderComplete(result.paymentIntent);\n      }\n    });\n};\n/* ------- UI helpers ------- */\n// Shows a success message when the payment is complete\nconst orderComplete = (intent: any) => {\n  fetch('/api/v1/payments/s/success', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ intent }),\n  })\n    .then((result) => {\n      return result.json();\n    })\n    .then((result) => {\n      if (result.result === 'success') {\n        get('.result-message a').setAttribute('href', result.url);\n        get('.result-message').classList.remove('hidden');\n        get('#submit').disabled = true;\n      } else {\n        showError(result.reason);\n      }\n    });\n\n  loading(false);\n};\n// Show the customer the error from Stripe if their card fails to charge\nconst showError = (errorMsgText: any) => {\n  loading(false);\n  const errorMsg = get('#card-error');\n  errorMsg.textContent = errorMsgText;\n  setTimeout(() => {\n    errorMsg.textContent = '';\n  }, 4000);\n};\n// Show a spinner on payment submission\nconst loading = (isLoading: boolean) => {\n  if (isLoading) {\n    // Disable the button and show a spinner\n    get('#submit').disabled = true;\n    get('#spinner').classList.remove('hidden');\n    get('#button-text').classList.add('hidden');\n  } else {\n    get('#submit').disabled = false;\n    get('#spinner').classList.add('hidden');\n    get('#button-text').classList.remove('hidden');\n  }\n};\n\n// Ask the Torus server to create an intent with Stripe, and\n// after that succeeds finalize the intent directly from the client\n// to Stripe.\nfunction doPurchase(stripe: Stripe, card: any, purchase: any) {\n  fetch('/api/v1/payments/s/create-payment-intent', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(purchase),\n  })\n    .then((result) => {\n      if (!result.ok) {\n        result.text().then((text) => showError(text));\n      } else {\n        return result.json();\n      }\n    })\n    .then((data) => {\n      payWithCard(stripe, card, data.clientSecret);\n    });\n}\n\n// Create and init the payment form\nfunction initPaymentForm(stripe: Stripe, purchase: any) {\n  get('#submit').disabled = true;\n\n  const elements = stripe.elements();\n  const style = {\n    base: {\n      color: '#32325d',\n      fontFamily: 'Arial, sans-serif',\n      fontSmoothing: 'antialiased',\n      fontSize: '16px',\n      '::placeholder': {\n        color: '#32325d',\n      },\n    },\n    invalid: {\n      fontFamily: 'Arial, sans-serif',\n      color: '#fa755a',\n      iconColor: '#fa755a',\n    },\n  };\n  const card = elements.create('card', { style: style });\n  // Stripe injects an iframe into the DOM\n  card.mount('#card-element');\n  card.on('change', function (event: any) {\n    // Disable the Pay button if there are no card details in the Element\n    get('#submit').disabled = event.empty;\n    get('#card-error').textContent = event.error ? event.error.message : '';\n  });\n  const form = document.getElementById('payment-form') as any;\n  form.addEventListener('submit', (event: any) => {\n    event.preventDefault();\n    // Complete payment when the submit button is clicked\n    doPurchase(stripe, card, purchase);\n  });\n}\n\nfunction makePurchase(key: string, purchase: any) {\n  loadStripe(key).then((stripe) => {\n    if (stripe !== null) {\n      initPaymentForm(stripe, purchase);\n    }\n  });\n}\n\n(window as any).OLIPayments = { makePurchase };\n"]}