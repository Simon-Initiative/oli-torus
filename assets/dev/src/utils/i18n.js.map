{"version":3,"file":"i18n.js","sourceRoot":"","sources":["../../../src/utils/i18n.ts"],"names":[],"mappings":"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","sourcesContent":["/*! gettext.js - Guillaume Potier - MIT Licensed */\n\n/*eslint-disable */\n\n// default values that could be overriden in i18n() construct\nconst defaults = {\n  domain: 'messages',\n  locale: (document !== undefined\n    ? document.documentElement.getAttribute('lang') : false) || 'en',\n  plural_func: (n: any) => {\n    return { nplurals: 2, plural: (n !== 1) ? 1 : 0 };\n  },\n  ctxt_delimiter: String.fromCharCode(4), // \\u0004\n};\n\n// handy mixins taken from underscode.js\nconst _ = {\n  isObject: (obj: any) => {\n    const type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  },\n  isArray: (obj: any) => {\n    return toString.call(obj) === '[object Array]';\n  },\n};\n\nconst pluralFuncs: any = {};\nlet locale = defaults.locale;\nlet domain = defaults.domain;\nconst dictionary: any = {};\nconst pluralForms: any = {};\nconst ctxtDelimiter = defaults.ctxt_delimiter;\n\n// sprintf equivalent, takes a string and some arguments to make a computed string\n// eg: strfmt(\"%1 dogs are in %2\", 7, \"the kitchen\"); => \"7 dogs are in the kitchen\"\n// eg: strfmt(\"I like %1, bananas and %1\", \"apples\"); => \"I like apples, bananas and apples\"\n// NB: removes msg context if there is one present\nconst strfmt = function (fmt: any) {\n  const args = arguments;\n\n  return fmt\n    // put space after double % to prevent placeholder replacement of such matches\n    .replace(/%%/g, '%% ')\n    // replace placeholders\n    .replace(/%(\\d+)/g, (str: any, p1: any) => {\n      return args[p1];\n    })\n    // replace double % and space with single %\n    .replace(/%% /g, '%');\n};\n\nconst removeContext = function (str: any) {\n  // if there is context, remove it\n  if (str.indexOf(ctxtDelimiter) !== -1) {\n    const parts = str.split(ctxtDelimiter);\n    return parts[1];\n  }\n\n  return str;\n};\n\nconst expandLocale = function (localeParam: any) {\n  let locale = localeParam;\n  const locales = [locale];\n  let i = locale.lastIndexOf('-');\n  while (i > 0) {\n    locale = locale.slice(0, i);\n    locales.push(locale);\n    i = locale.lastIndexOf('-');\n  }\n  return locales;\n};\n\nconst getPluralFunc = function (pluralForm: any) {\n  // Plural form string regexp\n  // taken from https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\n  // plural forms list available here\n  // http://localization-guide.readthedocs.org/en/latest/l10n/pluralforms.html\n  const pfRe = new RegExp('^\\\\s*nplurals\\\\s*=\\\\s*[0-9]+\\\\s*;\\\\s*plural\\\\s*=\\\\s*(?:\\\\s|[-\\\\?\\\\|&=!<>+*/%:;n0-9_\\(\\)])+');\n\n  if (!pfRe.test(pluralForm)) {\n    throw new Error(`The plural form \"${pluralForm}\" is not valid`);\n  }\n\n  // Careful here, that is a hidden eval() equivalent..\n  // Risk should be reasonable though since we test the plural_form through regex before\n  // taken from https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\n  // TODO: should test if https://github.com/soney/jsep present and use it if so\n  // tslint:disable-next-line\n  return new Function('n',\n    'var plural, nplurals; ' + pluralForm +\n    ' return { nplurals: nplurals, plural: (plural === true ? 1 : (plural ? plural : 0)) };');\n};\n\n// Proper translation function that handle plurals and directives\n// Contains juicy parts of\n// https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\nconst t = function (messages: any, n: any, options: any) {\n  // Singular is very easy, just pass dictionnary message through strfmt\n  if (!options.plural_form) {\n    return strfmt.apply(undefined,\n      [removeContext(messages[0])].concat(Array.prototype.slice.call(arguments, 3)));\n  }\n  let plural;\n\n  // if a plural func is given, use that one\n  if (options.plural_func) {\n    plural = options.plural_func(n);\n\n    // if plural form never interpreted before, do it now and store it\n  } else if (!pluralFuncs[locale]) {\n    pluralFuncs[locale] = getPluralFunc(pluralForms[locale]);\n    plural = pluralFuncs[locale](n);\n\n    // we have the plural function, compute the plural result\n  } else {\n    plural = pluralFuncs[locale](n);\n  }\n\n  // If there is a problem with plurals, fallback to singular one\n  if (plural.plural === undefined || plural.plural > plural.nplurals\n    || messages.length <= plural.plural) {\n    plural.plural = 0;\n  }\n\n  return strfmt.apply(undefined,\n    [removeContext(messages[plural.plural]), n].concat(Array.prototype.slice.call(arguments, 3)));\n};\n\nexport function setMessages(domain: any, locale: any, messages: any, pf: any) {\n  if (!domain || !locale || !messages) {\n    throw new Error('You must provide a domain, a locale and messages');\n  }\n\n  if ('string' !== typeof domain || 'string' !== typeof locale || !_.isObject(messages)) {\n    throw new Error('Invalid arguments');\n  }\n\n  if (pf) {\n    pluralForms[locale] = pf;\n  }\n\n  if (!dictionary[domain]) {\n    dictionary[domain] = {};\n  }\n\n  dictionary[domain][locale] = messages;\n}\n\nexport function loadJSON(jsonDataP: any, domain: any) {\n  let jsonData;\n  if (!_.isObject(jsonDataP)) {\n    jsonData = JSON.parse(jsonDataP);\n  } else {\n    jsonData = jsonDataP;\n  }\n\n  if (!jsonData[''] || !jsonData['']['language'] || !jsonData['']['plural-forms']) {\n    throw new Error('Wrong JSON, it must have an empty key (\"\") with \"language\" and \"plural-forms\" information');\n  }\n\n  const headers = jsonData[''];\n  delete jsonData[''];\n\n  return setMessages(domain || defaults.domain, headers['language'], jsonData, headers['plural-forms']);\n}\n\nexport function setLocale(loc: any) {\n  locale = loc;\n}\nexport function getLocale() {\n  return locale;\n}\n// getter/setter for domain\nexport function textdomain(d: any) {\n  if (!d) {\n    return domain;\n  }\n  domain = d;\n}\n\nexport function gettext(msgid: any) {\n  return dcnpgettext.apply(undefined,\n    [undefined, undefined, msgid, undefined, undefined].concat(\n      Array.prototype.slice.call(arguments, 1)));\n}\n\nexport function ngettext(msgid: any, msgidPlural: any, n: any) {\n  return dcnpgettext.apply(undefined,\n    [undefined, undefined, msgid, msgidPlural, n].concat(\n      Array.prototype.slice.call(arguments, 3)));\n}\n\nexport function pgettext(msgctxt: any, msgid: any) {\n  return dcnpgettext.apply(undefined,\n    [undefined, msgctxt, msgid, undefined, undefined].concat(\n      Array.prototype.slice.call(arguments, 2)));\n}\n\nexport function dcnpgettext(d: any, msgctxt: any, msgid: any, msgidPlural: any, n: any) {\n  domain = d || domain;\n\n  if ('string' !== typeof msgid) {\n    throw new Error(`Msgid \"${msgid}\" is not a valid translatable string`);\n  }\n\n  let translation;\n  const options: any = { plural_form: false };\n  const key = msgctxt ? msgctxt + ctxtDelimiter + msgid : msgid;\n  let exist;\n  const locales = expandLocale(locale);\n\n  for (const i in locales) {\n    locale = locales[i];\n    exist = dictionary[domain] && dictionary[domain][locale] && dictionary[domain][locale][key];\n\n    // because it's not possible to define both a singular and a plural form of the same msgid,\n    // we need to check that the stored form is the same as the expected one.\n    // if not, we'll just ignore the translation and consider it as not translated.\n    if (msgidPlural) {\n      exist = exist && 'string' !== typeof dictionary[domain][locale][key];\n    } else {\n      exist = exist && 'string' === typeof dictionary[domain][locale][key];\n    }\n    if (exist) {\n      break;\n    }\n  }\n\n  if (!exist) {\n    translation = msgid;\n    options.plural_func = defaults.plural_func;\n  } else {\n    translation = dictionary[domain][locale][key];\n  }\n\n  // Singular form\n  if (!msgidPlural) {\n    return t.apply(undefined, [[translation], n, options].concat(\n      Array.prototype.slice.call(arguments, 5)));\n  }\n\n  // Plural one\n  options.plural_form = true;\n  return t.apply(undefined,\n    [exist ? translation : [msgid, msgidPlural], n, options].concat(\n      Array.prototype.slice.call(arguments, 5)));\n}\n/*eslint-enable */\n"]}