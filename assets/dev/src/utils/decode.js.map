{"version":3,"file":"decode.js","sourceRoot":"","sources":["../../../src/utils/decode.ts"],"names":[],"mappings":"AAAA,yBAAyB;AACzB,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,IAAI,GAAG,UAAU,GAAW;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;CACH;AACD,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;IAC/B,MAAM,CAAC,IAAI,GAAG,UAAU,GAAW;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC,CAAC;CACH;AAED,mBAAmB;AACnB,gDAAgD;AAChD,+EAA+E;AAC/E,MAAM,UAAU,gBAAgB,CAAC,GAAW;IAC1C,6EAA6E;IAC7E,OAAO,kBAAkB,CACvB,IAAI,CAAC,GAAG,CAAC;SACN,KAAK,CAAC,EAAE,CAAC;SACT,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;QACT,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CACZ,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAW;IAC1C,gEAAgE;IAChE,6DAA6D;IAC7D,wBAAwB;IACxB,OAAO,IAAI,CACT,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,SAAS,YAAY,CAAC,KAAK,EAAE,EAAE;QAChF,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CACH,CAAC;AACJ,CAAC","sourcesContent":["// node.js compatability:\nif (typeof btoa === 'undefined') {\n  global.btoa = function (str: string) {\n    return Buffer.from(str, 'binary').toString('base64');\n  };\n}\nif (typeof atob === 'undefined') {\n  global.atob = function (str: string) {\n    return Buffer.from(str, 'base64').toString('binary');\n  };\n}\n\n// From SO article:\n// https://stackoverflow.com/questions/30106476/\n// using-javascripts-atob-to-decode-base64-doesnt-properly-decode-utf-8-strings\nexport function b64DecodeUnicode(str: string) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return decodeURIComponent(\n    atob(str)\n      .split('')\n      .map((c) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(''),\n  );\n}\n\nexport function b64EncodeUnicode(str: string) {\n  // first we use encodeURIComponent to get percent-encoded UTF-8,\n  // then we convert the percent encodings into raw bytes which\n  // can be fed into btoa.\n  return btoa(\n    encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n      return String.fromCharCode(+('0x' + p1));\n    }),\n  );\n}\n"]}