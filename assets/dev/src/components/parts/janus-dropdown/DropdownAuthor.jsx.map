{"version":3,"file":"DropdownAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-dropdown/DropdownAuthor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AuthorPartComponentProps } from 'components/parts/types/parts';\nimport React, { CSSProperties, useEffect } from 'react';\nimport { DropdownModel } from './schema';\n\nconst DropdownAuthor: React.FC<AuthorPartComponentProps<DropdownModel>> = (props) => {\n  const { id, model } = props;\n\n  const { x, y, z, width, showLabel, label, prompt, optionLabels } = model;\n  const styles: CSSProperties = {\n    width,\n  };\n  const dropDownStyle: CSSProperties = {\n    width: 'auto',\n    height: 'auto',\n  };\n  if (!(showLabel && label)) {\n    dropDownStyle.width = `${Number(width) - 10}px`;\n  }\n  if (showLabel && label && width) {\n    //is this the best way to handle?\n    //if lable is visible then need to set the maxWidth otherwise it gets out of the container\n    dropDownStyle.maxWidth = `${Number(width * 0.63)}px`;\n  }\n  useEffect(() => {\n    // all activities *must* emit onReady\n    props.onReady({ id: `${props.id}` });\n  }, []);\n  const dropdownOptions = () => {\n    // use explicit Array() since we're using Elements\n    const options = [];\n\n    if (prompt) {\n      // If a prompt exists and the selectedIndex is not set or is set to -1, set prompt as disabled first option\n      options.push(\n        <option key=\"-1\" value=\"-1\" style={{ display: 'none' }}>\n          {prompt}\n        </option>,\n      );\n    }\n    if (optionLabels) {\n      for (let i = 0; i < optionLabels.length; i++) {\n        // Set selected if selectedIndex equals current index\n        options.push(\n          <option key={i + 1} value={i + 1} selected={i + 1 === -1}>\n            {optionLabels[i]}\n          </option>,\n        );\n      }\n    }\n    return options;\n  };\n  return (\n    <div data-janus-type={tagName} className=\"dropdown-input\" style={styles}>\n      <label htmlFor={`${id}-select`}>{showLabel && label ? label : ''}</label>\n      <select\n        style={dropDownStyle}\n        id={`${id}-select`}\n        value={-1}\n        className={'dropdown '}\n        disabled={true}\n      >\n        {dropdownOptions()}\n      </select>\n    </div>\n  );\n};\n\nexport const tagName = 'janus-dropdown';\n\nexport default DropdownAuthor;\n"]}