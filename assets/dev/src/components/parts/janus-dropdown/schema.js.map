{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/components/parts/janus-dropdown/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAa7D,MAAM,CAAC,MAAM,MAAM,GAAsB;IACvC,cAAc,EAAE;QACd,KAAK,EAAE,kBAAkB;QACzB,IAAI,EAAE,QAAQ;KACf;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,UAAU;QACjB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,EAAE;KACZ;IACD,SAAS,EAAE;QACT,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,oCAAoC;QACjD,OAAO,EAAE,IAAI;KACd;IACD,KAAK,EAAE;QACL,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,OAAO;QACd,WAAW,EAAE,6BAA6B;KAC3C;IACD,MAAM,EAAE;QACN,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,+BAA+B;KAC7C;IACD,YAAY,EAAE;QACZ,KAAK,EAAE,eAAe;QACtB,IAAI,EAAE,OAAO;QACb,WAAW,EAAE,iBAAiB;QAC9B,KAAK,EAAE;YACL,IAAI,EAAE,2BAA2B;SAClC;KACF;IACD,OAAO,EAAE;QACP,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,IAAI;KACd;IACD,WAAW,EAAE;QACX,WAAW,EAAE;YACX,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,4BAA4B;YACzC,OAAO,EAAE,aAAa;SACvB;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,EAAE,CAAC;AAE3B,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,aAAa,EAAE,iBAAiB,CAAC,MAAM;IACvC,YAAY,EAAE,iBAAiB,CAAC,MAAM;IACtC,OAAO,EAAE,iBAAiB,CAAC,OAAO;CACnC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,GAA2B,EAAE,CAAC,CAAC;IACzD,cAAc,EAAE,EAAE;IAClB,SAAS,EAAE,IAAI;IACf,KAAK,EAAE,QAAQ;IACf,MAAM,EAAE,EAAE;IACV,YAAY,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;IACtC,OAAO,EAAE,IAAI;CACd,CAAC,CAAC","sourcesContent":["import { CapiVariableTypes } from '../../../adaptivity/capi';\nimport { JSONSchema7Object } from 'json-schema';\nimport { JanusAbsolutePositioned, JanusCustomCss } from '../types/parts';\n\nexport interface DropdownModel extends JanusAbsolutePositioned, JanusCustomCss {\n  showLabel: boolean;\n  label: string;\n  enabled: boolean;\n  prompt: string;\n  optionLabels: string[];\n  fontSize?: number;\n}\n\nexport const schema: JSONSchema7Object = {\n  customCssClass: {\n    title: 'Custom CSS Class',\n    type: 'string',\n  },\n  fontSize: {\n    title: 'FontSize',\n    type: 'number',\n    default: 12,\n  },\n  showLabel: {\n    title: 'Show Label',\n    type: 'boolean',\n    description: 'specifies whether label is visible',\n    default: true,\n  },\n  label: {\n    type: 'string',\n    title: 'Label',\n    description: 'text label for the dropdown',\n  },\n  prompt: {\n    title: 'Prompt',\n    type: 'string',\n    description: 'placeholder text for dropdown',\n  },\n  optionLabels: {\n    title: 'Option Labels',\n    type: 'array',\n    description: 'list of options',\n    items: {\n      $ref: '#/definitions/optionLabel',\n    },\n  },\n  enabled: {\n    title: 'Enabled',\n    type: 'boolean',\n    description: 'specifies whether dropdown is enabled',\n    default: true,\n  },\n  definitions: {\n    optionLabel: {\n      type: 'string',\n      description: 'text for the dropdown item',\n      $anchor: 'optionLabel',\n    },\n  },\n};\n\nexport const uiSchema = {};\n\nexport const adaptivitySchema = {\n  selectedIndex: CapiVariableTypes.NUMBER,\n  selectedItem: CapiVariableTypes.STRING,\n  enabled: CapiVariableTypes.BOOLEAN,\n};\n\nexport const createSchema = (): Partial<DropdownModel> => ({\n  customCssClass: '',\n  showLabel: true,\n  label: 'Choose',\n  prompt: '',\n  optionLabels: ['Option 1', 'Option 2'],\n  enabled: true,\n});\n"]}