{"version":3,"file":"ExternalActivity.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-capi-iframe/ExternalActivity.tsx"],"names":[],"mappings":"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","sourcesContent":["import debounce from 'lodash/debounce';\nimport React, { CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport { CapiVariable, CapiVariableTypes } from '../../../adaptivity/capi';\nimport {\n  NotificationType,\n  subscribeToNotification,\n} from '../../../apps/delivery/components/NotificationContext';\nimport { contexts } from '../../../types/applicationContext';\nimport { parseBool, parseBoolean } from '../../../utils/common';\nimport { PartComponentProps } from '../types/parts';\nimport { getJanusCAPIRequestTypeString, JanusCAPIRequestTypes } from './JanusCAPIRequestTypes';\nimport { CapiIframeModel } from './schema';\n\nconst externalActivityMap: Map<string, any> = new Map();\nlet context = 'VIEWER';\nconst getExternalActivityMap = () => {\n  const result: any = {};\n\n  externalActivityMap.forEach((value, key) => {\n    // TODO: cut out functions?\n    result[key] = value;\n  });\n\n  return result;\n};\n\nconst ExternalActivity: React.FC<PartComponentProps<CapiIframeModel>> = (props) => {\n  const [state, setState] = useState<any[]>(Array.isArray(props.state) ? props.state : []);\n  const [model, setModel] = useState<any>(Array.isArray(props.model) ? props.model : {});\n  const [ready, setReady] = useState<boolean>(false);\n  const [initState, setInitState] = useState<any>(null);\n  const [initStateReceived, setInitStateReceived] = useState(false);\n  const id: string = props.id;\n\n  // model items, note that we use default values now because\n  // the delay from parsing the json means we can't set them from the model immediately\n  const [frameX, setFrameX] = useState<number>(0);\n  const [frameY, setFrameY] = useState<number>(0);\n  const [frameZ, setFrameZ] = useState<number>(0);\n  const [frameWidth, setFrameWidth] = useState<number>(0);\n  const [frameHeight, setFrameHeight] = useState<number>(0);\n  const [frameVisible, setFrameVisible] = useState<boolean>(true);\n  const [simFrame, setSimFrame] = useState<HTMLIFrameElement>();\n  const [frameSrc, setFrameSrc] = useState<string>('');\n  const [frameCssClass, setFrameCssClass] = useState('');\n  // these rely on being set every render and the \"model\" useState value being set\n  const { src, title, allowScrolling, configData } = model;\n  useEffect(() => {\n    const styleChanges: any = {};\n    if (frameWidth !== undefined) {\n      styleChanges.width = { value: frameWidth as number };\n    }\n    if (frameHeight != undefined) {\n      styleChanges.height = { value: frameHeight as number };\n    }\n\n    props.onResize({ id: `${id}`, settings: styleChanges });\n  }, [frameWidth, frameHeight]);\n\n  const initialize = useCallback(async (pModel) => {\n    // set defaults\n    const dCssClass = pModel.customCssClass || frameCssClass;\n    setFrameCssClass(dCssClass);\n\n    const dSrc = pModel.src || frameSrc;\n    setFrameSrc(dSrc);\n\n    const dX = pModel.x || frameX;\n    setFrameX(dX);\n\n    const dY = pModel.y || frameY;\n    setFrameY(dY);\n\n    const dZ = pModel.z || frameZ;\n    setFrameZ(dZ);\n\n    const dWidth = pModel.width || frameWidth;\n    setFrameWidth(dWidth);\n\n    const dHeight = pModel.height || frameHeight;\n    setFrameHeight(dHeight);\n\n    const dVisible = pModel.visible === undefined ? frameVisible : !!parseBoolean(pModel.visible);\n    setFrameVisible(dVisible);\n\n    const initResult = await props.onInit({\n      id,\n      responses: [\n        {\n          key: 'IFRAME_frameVisible',\n          type: CapiVariableTypes.BOOLEAN,\n          value: dVisible,\n        },\n        {\n          key: 'IFRAME_frameCssClass',\n          type: CapiVariableTypes.STRING,\n          value: dCssClass,\n        },\n        {\n          key: 'IFRAME_frameX',\n          type: CapiVariableTypes.NUMBER,\n          value: dX,\n        },\n        {\n          key: 'IFRAME_frameY',\n          type: CapiVariableTypes.NUMBER,\n          value: dY,\n        },\n        {\n          key: 'IFRAME_frameZ',\n          type: CapiVariableTypes.NUMBER,\n          value: dZ,\n        },\n        {\n          key: 'IFRAME_frameWidth',\n          type: CapiVariableTypes.NUMBER,\n          value: dWidth,\n        },\n        {\n          key: 'IFRAME_frameHeight',\n          type: CapiVariableTypes.NUMBER,\n          value: dHeight,\n        },\n        {\n          key: 'IFRAME_frameSrc',\n          type: CapiVariableTypes.STRING,\n          value: dSrc,\n        },\n      ],\n    });\n\n    // result of init has a state snapshot with latest (init state applied)\n    writeCapiLog('INIT RESULT CAPI', initResult);\n    const currentStateSnapshot = initResult.snapshot;\n    if (initResult.context.currentActivity) {\n      simLife.ownerActivityId = initResult.context.currentActivity;\n    }\n    if (initResult.context.mode) {\n      context = initResult.context.mode;\n    }\n    simLife.domain = initResult.context.domain || 'stage';\n    processInitStateVariable(currentStateSnapshot, simLife.domain);\n  }, []);\n\n  const processInitStateVariable = (currentStateSnapshot: any, domain = 'stage') => {\n    const sVisible = currentStateSnapshot[`${domain}.${id}.IFRAME_frameVisible`];\n    if (sVisible !== undefined) {\n      setFrameVisible(parseBool(sVisible));\n    }\n\n    const sX = currentStateSnapshot[`${domain}.${id}.IFRAME_frameX`];\n    if (sX !== undefined) {\n      setFrameX(sX);\n    }\n\n    const sY = currentStateSnapshot[`${domain}.${id}.IFRAME_frameY`];\n    if (sY !== undefined) {\n      setFrameY(sY);\n    }\n\n    const sZ = currentStateSnapshot[`${domain}.${id}.IFRAME_frameZ`];\n    if (sZ !== undefined) {\n      setFrameZ(sZ);\n    }\n\n    const sWidth = currentStateSnapshot[`${domain}.${id}.IFRAME_frameWidth`];\n    if (sWidth !== undefined) {\n      setFrameWidth(sWidth);\n    }\n\n    const sHeight = currentStateSnapshot[`${domain}.${id}.IFRAME_frameHeight`];\n    if (sHeight !== undefined) {\n      setFrameHeight(sHeight);\n    }\n\n    const sCssClass = currentStateSnapshot[`${domain}.${id}.IFRAME_frameCssClass`];\n    if (sCssClass !== undefined) {\n      setFrameCssClass(sCssClass);\n    }\n\n    const sSrc = currentStateSnapshot[`${domain}.${id}.IFRAME_frameSrc`];\n    if (sSrc !== undefined) {\n      setFrameSrc(sSrc);\n    }\n\n    // INIT STATE also needs to take in all the sim values\n    const interestedSnapshot = Object.keys(currentStateSnapshot).reduce(\n      (collect: Record<string, any>, key) => {\n        if (key.indexOf(`${domain}.${id}.`) === 0) {\n          const value = currentStateSnapshot[key];\n          const typeOfValue = typeof value;\n          if (value === '[]') {\n            collect[key] = '';\n          } else if (typeOfValue === 'object') {\n            collect[key] = JSON.stringify(value);\n          } else {\n            collect[key] = value;\n          }\n        }\n        return collect;\n      },\n      {},\n    );\n    setInitState(interestedSnapshot);\n    setInitStateReceived(true);\n  };\n\n  useEffect(() => {\n    let pModel;\n    let pState;\n    if (typeof props?.model === 'string') {\n      try {\n        pModel = JSON.parse(props.model);\n        setModel(pModel);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (typeof props?.state === 'string') {\n      try {\n        pState = JSON.parse(props.state);\n        setState(pState);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (!pModel) {\n      return;\n    }\n    initialize(pModel);\n  }, [props]);\n\n  useEffect(() => {\n    if (!ready) {\n      return;\n    }\n    props.onReady({ id, responses: [] });\n  }, [ready]);\n\n  interface CapiHandshake {\n    requestToken: string;\n    authToken: string;\n    version?: string;\n    config: any;\n    /*\n      config:\n          context: \"VIEWER\"\n          lessonAttempt: 0\n          lessonId: 109535\n          questionId: \"q:1540493294565:499\"\n          servicesBaseUrl: \"https://api.smartsparrow.com\"\n          userData:\n              givenName: \"Ben\"\n              id: \"4261745\"\n              surname: \"Sparks\"\n  */\n  }\n\n  interface CapiMessage {\n    handshake: CapiHandshake;\n    options?: any; // ?? dunno\n    type: JanusCAPIRequestTypes;\n    values: any; // usually array, but sometimes more?\n  }\n\n  const messageListener = useRef<any>(null);\n  const [simIsInitStatePassedOnce, setSimIsInitStatePassedOnce] = useState(false);\n\n  const externalActivityStyles: CSSProperties = {\n    /* position: 'absolute',\n    top: frameY,\n    left: frameX, */\n    width: '100%',\n    height: '100%',\n    zIndex: frameZ,\n    // writing 'visible' by default will take precedence (inline styles) over\n    // any (legacy) override css attempt at hiding it\n    visibility: frameVisible ? undefined : 'hidden',\n  };\n\n  const frameRef = useCallback((frame) => {\n    /* console.log('%c DEBUG FRAME REF CALLBACK', 'background: darkred; color: #fff;', { frame }); */\n    if (frame) {\n      setSimFrame(frame);\n    }\n  }, []);\n\n  const getCleanSimLife = () => ({\n    // these 2 are mysterious\n    key: '',\n    simId: '',\n    domain: 'stage',\n    // ...\n    handshakeMade: false,\n    handshake: {\n      // should be of type CapiHandshake\n      requestToken: '',\n      authToken: props.id,\n      config: {},\n    },\n    init: false, // initial setup complete; this might be init state?\n    ready: false,\n    currentState: [],\n    ownerActivityId: 0,\n  });\n  const [simLife, setSimLife] = useState(getCleanSimLife());\n  const [internalState, setInternalState] = useState(state || []);\n\n  const sendToIframe = (data: any) => {\n    simFrame?.contentWindow?.postMessage(JSON.stringify(data), '*');\n  };\n\n  const writeCapiLog = (msg: any, ...rest: any[]) => {\n    // TODO: change to a config value?\n    const boolWriteLog = false;\n    let colorStyle = 'background: #222; color: #bada55';\n    const [logStyle] = rest;\n    const args = rest;\n    if (logStyle && logStyle === 1) {\n      colorStyle = 'background: #222; color: yellow;';\n      args.shift();\n    }\n    if (logStyle && logStyle === 2) {\n      colorStyle = 'background: darkred; color: white;';\n      args.shift();\n    }\n    if (logStyle && logStyle === 3) {\n      colorStyle = 'background: blue; color: white;';\n      args.shift();\n    }\n    //help debug during development. set boolWriteLog = false once you are ready to check-in the code\n    if (boolWriteLog) {\n      // eslint-disable-next-line\n      console.log(`%c Capi(${id}) - ${msg}`, colorStyle, ...args);\n    }\n  };\n\n  /*\n   * Notify clients that configuration is updated. (eg. the question has changed)\n   */\n  const notifyConfigChange = () => {\n    if (simLife.ready)\n      sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.CONFIG_CHANGE, []);\n  };\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CHECK_STARTED,\n      NotificationType.CHECK_COMPLETE,\n      NotificationType.CONTEXT_CHANGED,\n      NotificationType.STATE_CHANGED,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        /* console.log(`${notificationType.toString()} notification handled [CAPI_IFRAME]`, payload); */\n        switch (notificationType) {\n          case NotificationType.CHECK_STARTED:\n            {\n              writeCapiLog('CHECK REQUEST STARTED STATE!!!!', 3, {\n                payload,\n                simLife,\n              });\n              sendFormedResponse(\n                simLife.handshake,\n                {},\n                JanusCAPIRequestTypes.CHECK_START_RESPONSE,\n                {},\n              );\n            }\n            break;\n          case NotificationType.CHECK_COMPLETE:\n            {\n              writeCapiLog('CHECK REQUEST COMPLETED STATE!!!!', 3, {\n                simLife,\n                payload,\n              });\n              // Need to reply to sim with type === 8\n              sendFormedResponse(\n                simLife.handshake,\n                {},\n                JanusCAPIRequestTypes.CHECK_COMPLETE_RESPONSE,\n                {},\n              );\n            }\n            break;\n          case NotificationType.STATE_CHANGED:\n            {\n              writeCapiLog('MUTATE STATE!!!!', 3, {\n                simLife,\n                payload,\n              });\n              const currentMutateStateSnapshot = payload.mutateChanges;\n              //udpate the local key-value pair when variables changed by mutation i.e. from outside\n              Object.keys(currentMutateStateSnapshot).forEach((key) => {\n                externalActivityMap.set(\n                  `${simLife.ownerActivityId}|${key}`,\n                  currentMutateStateSnapshot[key],\n                );\n              });\n              processInitStateVariable(currentMutateStateSnapshot, simLife.domain);\n              setSimIsInitStatePassedOnce(false);\n            }\n            break;\n          case NotificationType.CONTEXT_CHANGED:\n            {\n              context = payload.mode;\n              writeCapiLog('CONTEXT CHANGED!!!!', 3, {\n                simLife,\n                payload,\n              });\n              if (payload.domain) {\n                simLife.domain = payload.domain;\n              }\n              simLife.handshake.config = {\n                context: payload.mode,\n                questionId: payload.currentActivityId,\n              };\n              notifyConfigChange();\n              // we only send the Init state variables.\n              const currentStateSnapshot = payload.initStateFacts;\n\n              processInitStateVariable(currentStateSnapshot, simLife.domain);\n\n              setSimIsInitStatePassedOnce(false);\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify, simLife]);\n\n  //#region Capi Handlers\n  const updateInternalState = (vars: any[]) => {\n    const mutableState = [...internalState];\n    if (vars?.length) {\n      let hasDiff = false;\n\n      vars.forEach((changedVar) => {\n        const existing = mutableState.find((ms) => ms.id === changedVar.id);\n        if (!existing) {\n          mutableState.push(changedVar);\n          hasDiff = true;\n          return;\n        }\n        if (existing.value !== changedVar.value) {\n          hasDiff = true;\n          existing.value = changedVar.value;\n        }\n      });\n      if (hasDiff) {\n        setInternalState(mutableState);\n        mutableState.forEach((element) => {\n          if (element.id.indexOf(`stage.${id}.`) === 0) {\n            externalActivityMap.set(`${simLife.ownerActivityId}|${element.id}`, element);\n          }\n        });\n      }\n    }\n    return mutableState;\n  };\n\n  const createCapiObjectFromStateVars = (vars: any[], domain = 'stage') => {\n    return vars\n      .filter((v) => v.id.indexOf(`${domain}.${id}.`) === 0)\n      .reduce((capiFormatted, item) => {\n        capiFormatted[item.key] = new CapiVariable({\n          key: item.key,\n          type: item.type,\n          value: item.value,\n          allowedValues: item.allowedValues,\n        });\n        return capiFormatted;\n      }, {});\n  };\n\n  const sendFormedResponse = (\n    handshake: CapiHandshake,\n    options: any,\n    type: JanusCAPIRequestTypes,\n    values: any,\n  ) => {\n    const responseMsg: CapiMessage = {\n      handshake,\n      options,\n      type,\n      values,\n    };\n    writeCapiLog(`Response (${getJanusCAPIRequestTypeString(type)} : ${type}): `, 1, responseMsg);\n    sendToIframe(responseMsg);\n  };\n\n  const handleHandshakeRequest = (msgData: CapiMessage) => {\n    const {\n      handshake: { requestToken: msgRequestToken },\n    } = msgData;\n    simLife.handshakeMade = true;\n    simLife.handshake.requestToken = msgRequestToken;\n\n    // taken from simcapi.js TODO move somewhere, use from settings\n    simLife.handshake.config = { context: context };\n\n    // TODO: here in the handshake response we should send come config...\n    sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.HANDSHAKE_RESPONSE, []);\n  };\n\n  const handleOnReady = (data: any) => {\n    if (simLife.ready) {\n      return;\n    }\n    simLife.ready = true;\n    const updateSimLife = { ...simLife };\n    updateSimLife.ready = true;\n    setSimLife(updateSimLife);\n    // should / will sim send onReady more than once??\n    const filterVars = createCapiObjectFromStateVars(simLife.currentState, simLife.domain);\n    if (filterVars && Object.keys(filterVars)?.length !== 0) {\n      handleIFrameSpecificProperties(simLife.currentState, simLife.domain);\n      sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.VALUE_CHANGE, filterVars);\n    }\n    //if there are no more facts/init state data then send INITIAL_SETUP_COMPLETE response to SIM\n    if (!initState && !Object.keys(initState)?.length) {\n      simLife.init = true;\n      sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.INITIAL_SETUP_COMPLETE, {});\n    }\n    return;\n  };\n\n  const handleGetData = async (msgData: any) => {\n    // GET DATA is meant to pull data from user based persistance for a specific sim\n    // this data is *not* stored by the current scripting environment (used by adaptivity)\n    const { key, simId } = msgData.values;\n    simLife.key = key;\n    simLife.simId = simId;\n\n    const response: { values: any } = {\n      values: {\n        simId,\n        key,\n      },\n    };\n\n    try {\n      if (!props.onGetData) {\n        return;\n      }\n      const val = await props.onGetData({ simId, key, id });\n      let value = val;\n      const exists = val !== undefined;\n      if (exists && typeof val !== 'string') {\n        value = JSON.stringify(val);\n      }\n      response.values.responseType = 'success';\n      response.values.value = value;\n      response.values.exists = exists;\n    } catch (err) {\n      response.values.responseType = 'error';\n      response.values.error = err;\n    }\n\n    /* console.log('Sending the response', response); */\n\n    sendFormedResponse(\n      simLife.handshake,\n      msgData.options,\n      JanusCAPIRequestTypes.GET_DATA_RESPONSE,\n      response.values,\n    );\n  };\n\n  const debounceSave = useCallback(\n    debounce(\n      ({ id, responses }) => {\n        props.onSave({\n          id,\n          responses,\n        });\n      },\n      100,\n      { maxWait: 30000, leading: true },\n    ),\n    [],\n  );\n\n  const handleValueChange = (msgData: any, domain = 'stage') => {\n    const stateVarsFromSim = Object.keys(msgData.values).map((stateValueKey) => {\n      const variableObj = {\n        id: `${domain}.${id}.${stateValueKey}`,\n        key: stateValueKey,\n        type: msgData.values[stateValueKey] ? msgData.values[stateValueKey].type : null,\n        value: msgData.values[stateValueKey] ? msgData.values[stateValueKey].value : null,\n      };\n      return variableObj;\n    }, {} as any);\n\n    const updatedInternalState = updateInternalState(stateVarsFromSim);\n    writeCapiLog('VALUE CHANGE INTERNAL STATE', { updatedInternalState, stateVarsFromSim });\n\n    // value change is really the only time we should be saving\n    debounceSave({\n      id: `${id}`,\n      responses: updatedInternalState,\n    });\n  };\n\n  const handleSetData = async (message: any) => {\n    // SET DATA is intended to write to user storage, it expects a response\n    const { key, simId, value } = message.values;\n\n    const response: { values: any } = {\n      values: {\n        simId,\n        key,\n      },\n    };\n\n    try {\n      if (!props.onSetData) {\n        return;\n      }\n      const obj = value;\n      await props.onSetData({ simId, key, value: obj, id });\n      response.values.responseType = 'success';\n      response.values.value = value;\n    } catch (err) {\n      response.values.responseType = 'error';\n      response.values.error = err;\n    }\n\n    sendFormedResponse(\n      simLife.handshake,\n      message.options,\n      JanusCAPIRequestTypes.SET_DATA_RESPONSE,\n      response.values,\n    );\n  };\n\n  const handleCheckRequest = (data: any) => {\n    setTimeout(() => {\n      props.onSubmit({\n        id: `${id}`,\n        responses: [],\n      });\n    }, 150);\n  };\n\n  const handleResizeParentContainer = useCallback(\n    (data: any) => {\n      const iFrameResponse: { key: string; type: number; value: string }[] = [];\n      const modifiedData = data;\n      if (data?.width) {\n        setFrameWidth((previousWidth) => {\n          const newW = parseFloat(data.width.value);\n          if (data.width.type === 'relative') {\n            modifiedData.width.value = previousWidth + newW;\n          } else {\n            modifiedData.width.value = newW;\n          }\n          return modifiedData.width.value;\n        });\n      }\n      if (data?.height) {\n        setFrameHeight((previousHeight) => {\n          const newW = parseFloat(data.height.value);\n          if (data.height.type === 'relative') {\n            modifiedData.height.value = previousHeight + newW;\n          } else {\n            modifiedData.height.value = newW;\n          }\n          return modifiedData.height.value;\n        });\n      }\n\n      if (modifiedData?.height?.value) {\n        iFrameResponse.push({\n          key: `IFRAME_frameHeight`,\n          type: CapiVariableTypes.NUMBER,\n          value: modifiedData?.height?.value || frameHeight,\n        });\n      }\n      if (modifiedData?.width?.value) {\n        iFrameResponse.push({\n          key: `IFRAME_frameWidth`,\n          type: CapiVariableTypes.NUMBER,\n          value: modifiedData?.width?.value || frameWidth,\n        });\n      }\n      props.onSave({\n        id,\n        responses: iFrameResponse,\n      });\n      props.onResize({ id: `${id}`, settings: modifiedData });\n      sendFormedResponse(\n        simLife.handshake,\n        {},\n        JanusCAPIRequestTypes.RESIZE_PARENT_CONTAINER_RESPONSE,\n        {\n          messageId: data.messageId,\n          responseType: 'success',\n        },\n      );\n    },\n    [frameWidth, frameHeight],\n  );\n\n  //#endregion\n\n  const handleIFrameSpecificProperties = (stateVars: any[], domain = 'stage') => {\n    const interested = stateVars.filter((v) => v.id.indexOf(`${domain}.${id}.`) === 0);\n\n    const visibility = interested.find((v) => v.key === 'IFRAME_frameVisible');\n    if (visibility) {\n      setFrameVisible(parseBool(visibility.value));\n    }\n    const xPos = interested.find((v) => v.key === 'IFRAME_frameX');\n    if (xPos) {\n      setFrameX(xPos.value);\n    }\n    const yPos = interested.find((v) => v.key === 'IFRAME_frameY');\n    if (yPos) {\n      setFrameY(yPos.value);\n    }\n    const zPos = interested.find((v) => v.key === 'IFRAME_frameZ');\n    if (zPos) {\n      setFrameZ(zPos.value);\n    }\n    const wVal = interested.find((v) => v.key === 'IFRAME_frameWidth');\n    if (wVal) {\n      setFrameWidth(wVal.value);\n    }\n    const hVal = interested.find((v) => v.key === 'IFRAME_frameHeight');\n    if (hVal) {\n      setFrameHeight(hVal.value);\n    }\n  };\n\n  useEffect(() => {\n    if (!simFrame) {\n      return;\n    }\n    //console.log('%c DEBUG SIM LIFE RESET', 'background: purple; color: #fff;', { simLife });\n    // whenever src changes, need to reset life\n    const newLife = getCleanSimLife();\n    setSimLife(newLife);\n\n    // state should be updated already with init state by the time we get it\n    // so here we want to apply configData FIRST, then overwrite it with anything already set in the state\n    const configDataState: any = [\n      ...configData.map((cdVar: { key: any }) => {\n        return { ...cdVar, id: `${newLife.domain}.${id}.${cdVar.key}` };\n      }),\n    ];\n    // override configData values from init trap state data.\n    const newInternalState =\n      configDataState?.map((item: any) => {\n        const initStateValue = initState[item.id];\n        if (initStateValue?.length || initStateValue?.toString()?.length) {\n          item.value = initStateValue;\n        }\n        return item;\n      }) || [];\n\n    setInternalState(newInternalState);\n\n    simLife.currentState = newInternalState;\n\n    /*   console.log('%c CAPI RENDER ************', 'background: navy;color: #fff;', {\n      activitySrc,\n      ref: simFrame,\n      simLife,\n      configData,\n      newInternalState,\n    }); */\n\n    // Catch post messages from our iFrame\n    const messageListenerRef = window.addEventListener('message', (evnt) => {\n      if (!(simFrame?.contentWindow === evnt.source)) {\n        return;\n      }\n      let data: CapiMessage;\n      try {\n        data = JSON.parse(evnt.data);\n      } catch (e) {\n        // not json\n        return;\n      }\n      // TODO: check that we haven't got wires crossed? i.e. requestToken is the same\n      // every time after handshake (if more than one on the same page);\n      writeCapiLog(`Received (${getJanusCAPIRequestTypeString(data.type)} : ${data.type}): `, {\n        data,\n      });\n      switch (data.type) {\n        case JanusCAPIRequestTypes.HANDSHAKE_REQUEST:\n          handleHandshakeRequest(data);\n          break;\n\n        case JanusCAPIRequestTypes.ON_READY:\n          handleOnReady(data);\n          break;\n\n        case JanusCAPIRequestTypes.GET_DATA_REQUEST:\n          handleGetData(data);\n          break;\n\n        case JanusCAPIRequestTypes.VALUE_CHANGE:\n          if (context !== contexts.REVIEW) handleValueChange(data, simLife.domain);\n          break;\n\n        case JanusCAPIRequestTypes.SET_DATA_REQUEST:\n          handleSetData(data);\n          break;\n\n        case JanusCAPIRequestTypes.CHECK_REQUEST:\n          handleCheckRequest(data);\n          break;\n\n        case JanusCAPIRequestTypes.RESIZE_PARENT_CONTAINER_REQUEST:\n          handleResizeParentContainer(data.values);\n          break;\n\n        default:\n          break;\n      }\n    });\n    messageListener.current = messageListenerRef;\n\n    // TODO: set only after SIM says READY???\n    setReady(true);\n\n    // Introducing listeners requires returning a function that also un-listens\n    return () => {\n      /* console.log('%c MESSAGE LISTENER UNLOADED', 'background: darkred; color: #fff;', {\n        activityId: id,\n      }); */\n      // unlisten to post message calls\n      window.removeEventListener('message', messageListener.current);\n    };\n  }, [simFrame]);\n\n  useEffect(() => {\n    if (!simLife.ready || simIsInitStatePassedOnce || !initState) {\n      return;\n    }\n\n    writeCapiLog('INIT STATE APPLIED', 3, { initState });\n    Object.keys(initState)\n      .reverse()\n      .forEach((key: any) => {\n        const formatted: Record<string, unknown> = {};\n        const baseKey = key.replace(`stage.${id}.`, '').replace(`app.${id}.`, '');\n        const value = initState[key];\n        const cVar = new CapiVariable({\n          key: baseKey,\n          value,\n        });\n        formatted[baseKey] = cVar;\n        //hack for Small world type SIMs\n        if (baseKey.indexOf('System.AllowNextOnCacheCase') !== -1) {\n          const mFormatted: Record<string, unknown> = {};\n          const updatedVar = { ...cVar };\n          updatedVar.value = !parseBool(cVar.value);\n          mFormatted[baseKey] = updatedVar;\n          sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.VALUE_CHANGE, mFormatted);\n        }\n        sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.VALUE_CHANGE, formatted);\n      });\n    if (!simLife.init) {\n      sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.INITIAL_SETUP_COMPLETE, {});\n      simLife.init = true;\n    }\n    setSimIsInitStatePassedOnce(true);\n  }, [simLife, initState, simIsInitStatePassedOnce]);\n  const scrolling = allowScrolling ? 'yes' : 'no';\n  return initStateReceived ? (\n    <iframe\n      data-janus-type={tagName}\n      ref={frameRef}\n      style={externalActivityStyles}\n      title={title}\n      src={frameSrc}\n      scrolling={scrolling}\n    />\n  ) : null;\n};\n\nexport const tagName = 'janus-capi-iframe';\n\nexport default ExternalActivity;\n"]}