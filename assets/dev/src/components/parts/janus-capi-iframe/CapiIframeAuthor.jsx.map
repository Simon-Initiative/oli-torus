{"version":3,"file":"CapiIframeAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-capi-iframe/CapiIframeAuthor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AuthorPartComponentProps } from 'components/parts/types/parts';\nimport React, { CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { clone, parseBoolean } from 'utils/common';\nimport { JanusCAPIRequestTypes } from './JanusCAPIRequestTypes';\nimport { CapiIframeModel } from './schema';\nimport { CapiVariable } from '../../../adaptivity/capi';\nimport CapiVariablePicker from './CapiVariablePicker';\nimport {\n  NotificationType,\n  subscribeToNotification,\n} from 'apps/delivery/components/NotificationContext';\n\nconst CapiIframeAuthor: React.FC<AuthorPartComponentProps<CapiIframeModel>> = (props) => {\n  const { model, configuremode, onConfigure, onCancelConfigure, onSaveConfigure } = props;\n  const { x, y, z, width, height, src, configData } = model;\n  const id: string = props.id;\n  const [simFrame, setSimFrame] = useState<HTMLIFrameElement>();\n  const messageListener = useRef<any>(null);\n  const [inConfigureMode, setInConfigureMode] = useState<boolean>(parseBoolean(configuremode));\n  const [configClicked, setconfigClicked] = useState(false);\n  const [ready, setReady] = useState<boolean>(false);\n  const [internalState, setInternalState] = useState<any>([]);\n\n  const styles: CSSProperties = {\n    width,\n    height,\n    zIndex: z,\n    backgroundColor: 'whitesmoke',\n    overflow: 'hidden',\n    fontWeight: 'bold',\n  };\n\n  const lableStyles: CSSProperties = {\n    padding: 0,\n    margin: 0,\n  };\n\n  const configDivStyles: CSSProperties = {\n    padding: 0,\n    margin: 0,\n  };\n\n  const configAnchorStyles: CSSProperties = {\n    padding: 0,\n    margin: 0,\n    textDecoration: 'none',\n    borderBottom: 1,\n    borderBottomColor: 'black',\n    borderBottomStyle: 'solid',\n    cursor: 'pointer',\n  };\n  interface CapiHandshake {\n    requestToken: string;\n    authToken: string;\n    version?: string;\n    config: any;\n  }\n  interface CapiMessage {\n    handshake: CapiHandshake;\n    options?: any; // ?? dunno\n    type: JanusCAPIRequestTypes;\n    values: any; // usually array, but sometimes more?\n  }\n\n  const getCleanSimLife = () => ({\n    key: '',\n    simId: '',\n    handshakeMade: false,\n    handshake: {\n      requestToken: '',\n      authToken: props.id,\n      config: {},\n    },\n    init: false,\n    ready: false,\n    currentState: [],\n    ownerActivityId: 0,\n  });\n\n  const [simLife, setSimLife] = useState(getCleanSimLife());\n  const frameRef = (frame: HTMLIFrameElement) => {\n    if (frame) {\n      setSimFrame(frame);\n    }\n  };\n\n  useEffect(() => {\n    const configMode = parseBoolean(configuremode);\n    setInConfigureMode(configMode);\n    if (configMode) setconfigClicked(true);\n  }, [configuremode]);\n\n  const initialize = useCallback(async (pModel) => {\n    const initResult = await props.onInit({\n      id: props.id,\n      responses: [],\n    });\n    setReady(true);\n  }, []);\n\n  useEffect(() => {\n    initialize(model);\n  }, []);\n\n  useEffect(() => {\n    // all activities *must* emit onReady\n    props.onReady({ id: `${props.id}` });\n  }, [ready]);\n\n  //Methods for CAPI listener starts from her. Eventually this will move to a common place where authroing and delivery both can share the same JS file\n\n  const sendToIframe = (data: any) => {\n    simFrame?.contentWindow?.postMessage(JSON.stringify(data), '*');\n  };\n\n  const sendFormedResponse = (\n    handshake: CapiHandshake,\n    options: any,\n    type: JanusCAPIRequestTypes,\n    values: any,\n  ) => {\n    const responseMsg: CapiMessage = {\n      handshake,\n      options,\n      type,\n      values,\n    };\n    sendToIframe(responseMsg);\n  };\n\n  const handleHandshakeRequest = (msgData: CapiMessage) => {\n    const {\n      handshake: { requestToken: msgRequestToken },\n    } = msgData;\n    simLife.handshakeMade = true;\n    simLife.handshake.requestToken = msgRequestToken;\n\n    // taken from simcapi.js TODO move somewhere, use from settings\n    simLife.handshake.config = { context: 'AUTHOR' };\n\n    // TODO: here in the handshake response we should send come config...\n    sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.HANDSHAKE_RESPONSE, []);\n  };\n\n  const handleValueChange = (msgData: any) => {\n    // TODO: is it possible to set \"other\" values?\n    // like session.whatever from here? if so, the following won't work\n    const stateVarsFromSim = Object.keys(msgData.values).map((key) => {\n      const variableObj: CapiVariable = {\n        key: key,\n        type: msgData.values[key] ? msgData.values[key].type : null,\n        value: msgData.values[key] ? msgData.values[key].value : null,\n        allowedValues: msgData.values[key] ? msgData.values[key].allowedValues : null,\n        bindTo: msgData.values[key] ? msgData.values[key].bindTo : null,\n        readonly: msgData.values[key] ? msgData.values[key].readonly : false,\n        writeonly: msgData.values[key] ? msgData.values[key].writeonly : false,\n      };\n      return variableObj;\n    });\n    setInternalState(stateVarsFromSim);\n  };\n\n  const handleOnReady = (data: any) => {\n    simLife.ready = true;\n    const updateSimLife = { ...simLife };\n    updateSimLife.ready = true;\n    setSimLife(updateSimLife);\n    simLife.currentState.forEach((variable: any) => {\n      const collect: Record<string, unknown> = {};\n      const baseKey = variable.key;\n      const value = variable.value;\n      const type = variable.type;\n\n      const cVar = new CapiVariable({\n        key: baseKey,\n        value,\n        type,\n      });\n      collect[baseKey] = cVar;\n      sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.VALUE_CHANGE, collect);\n    });\n\n    sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.INITIAL_SETUP_COMPLETE, {});\n\n    return;\n  };\n\n  useEffect(() => {\n    if (!simFrame) {\n      return;\n    }\n    //console.log('%c DEBUG SIM LIFE RESET', 'background: purple; color: #fff;', { simLife });\n    // whenever src changes, need to reset life\n    const newLife = getCleanSimLife();\n    setSimLife(newLife);\n\n    const configDataState: any = configData\n      ? [\n          ...configData?.map((cdVar: { key: any }) => {\n            return { ...cdVar, id: `stage.${id}.${cdVar.key}` };\n          }),\n        ]\n      : [];\n    setInternalState(configDataState);\n\n    simLife.currentState = configDataState;\n\n    // Catch post messages from our iFrame\n    const messageListenerRef = window.addEventListener('message', (evnt) => {\n      if (!(simFrame?.contentWindow === evnt.source)) {\n        return;\n      }\n      let data: CapiMessage;\n      try {\n        data = JSON.parse(evnt.data);\n      } catch (e) {\n        // not json\n        return;\n      }\n\n      switch (data.type) {\n        case JanusCAPIRequestTypes.HANDSHAKE_REQUEST:\n          handleHandshakeRequest(data);\n          break;\n\n        case JanusCAPIRequestTypes.ON_READY:\n          handleOnReady(data);\n\n          break;\n        case JanusCAPIRequestTypes.VALUE_CHANGE:\n          handleValueChange(data);\n          break;\n        default:\n          break;\n      }\n    });\n    messageListener.current = messageListenerRef;\n\n    // Introducing listeners requires returning a function that also un-listens\n    return () => {\n      // unlisten to post message calls\n      window.removeEventListener('message', messageListener.current);\n    };\n  }, [simFrame]);\n\n  //Methods for CAPI listener End her\n\n  const handleValueChangeFromModal = (changedVar: any) => {\n    /* console.log('CAPI: CONFIG EDITOR CHANGE', { changedVar }); */\n    const finalConfigData = internalState.map((variable: CapiVariable) => {\n      if (variable.key === changedVar.target) {\n        variable.value = changedVar.value;\n      }\n      return variable;\n    });\n    setInternalState(finalConfigData);\n    const changedVariable: CapiVariable[] = finalConfigData.filter(\n      (variable: CapiVariable) => variable.key === changedVar.target,\n    );\n    if (changedVar) {\n      const collect: Record<string, any> = {};\n      const baseKey = changedVar.target;\n      const value = changedVar.value;\n      const type = changedVar.type;\n      const capiallowedValues =\n        changedVariable?.length && changedVariable[0]?.allowedValues\n          ? changedVariable[0].allowedValues\n          : undefined;\n      const readonly = changedVariable?.length ? changedVariable[0].readonly : undefined;\n      const writeonly = changedVariable?.length ? changedVariable[0].writeonly : undefined;\n      const cVar = new CapiVariable({\n        key: baseKey,\n        value,\n        type,\n        readonly: readonly,\n        writeonly: writeonly,\n        allowedValues: capiallowedValues,\n      });\n      collect[baseKey] = cVar;\n      sendFormedResponse(simLife.handshake, {}, JanusCAPIRequestTypes.VALUE_CHANGE, collect);\n    }\n  };\n  const handleEditorSave = (changeOperations: any) => {\n    if (!inConfigureMode) {\n      return;\n    }\n    setconfigClicked(false);\n    setInConfigureMode(false);\n    const modelClone = clone(model);\n\n    modelClone.configData = internalState;\n    onSaveConfigure({\n      id,\n      snapshot: modelClone,\n    });\n  };\n\n  const handleEditorCancel = () => {\n    if (!inConfigureMode) {\n      return;\n    }\n    setInConfigureMode(false);\n    onCancelConfigure({ id });\n    setconfigClicked(false);\n  };\n\n  const handleNotificationSave = useCallback(async () => {\n    /* console.log('CAPI:NOTIFYSAVE', { id, model, internalState }); */\n    const modelClone = clone(model);\n    modelClone.configData = internalState;\n    onSaveConfigure({\n      id,\n      snapshot: modelClone,\n    });\n    setInConfigureMode(false);\n    setconfigClicked(false);\n  }, [model, internalState]);\n\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CONFIGURE,\n      NotificationType.CONFIGURE_SAVE,\n      NotificationType.CONFIGURE_CANCEL,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        /* console.log(`${notificationType.toString()} notification event [PopupAuthor]`, payload); */\n        if (!payload) {\n          // if we don't have anything, we won't even have an id to know who it's for\n          // for these events we need something, it's not for *all* of them\n          return;\n        }\n        switch (notificationType) {\n          case NotificationType.CONFIGURE:\n            {\n              const { partId, configure } = payload;\n              if (partId === id) {\n                /* console.log('CAPI:NotificationType.CONFIGURE', { partId, configure }); */\n                // if it's not us, then we shouldn't be configuring\n                setInConfigureMode(configure);\n                if (configure) {\n                  onConfigure({ id, configure, context: { fullscreen: false } });\n                }\n              }\n            }\n            break;\n          case NotificationType.CONFIGURE_SAVE:\n            {\n              const { id: partId } = payload;\n              if (partId === id) {\n                /* console.log('CAPI:NotificationType.CONFIGURE_SAVE', { partId }); */\n                handleNotificationSave();\n              }\n            }\n            break;\n          case NotificationType.CONFIGURE_CANCEL:\n            {\n              const { id: partId } = payload;\n              if (partId === id) {\n                /* console.log('CAPI:NotificationType.CONFIGURE_CANCEL', { partId }); */\n                setInConfigureMode(false);\n                setconfigClicked(false);\n              }\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify, handleNotificationSave]);\n\n  //inConfigureMode = true means user has clicked on the Edit button that opens modal for updating the CAPI variables.\n  //configClicked = true means user has clicked on the link to load the capi in auhtoring mode.\n\n  const configClikedRender = (\n    <React.Fragment>\n      <div style={styles}>\n        {configClicked ? (\n          <iframe\n            ref={frameRef}\n            style={{ height: '100%', width: '100%' }}\n            data-janus-type={tagName}\n            src={props.model.src}\n            scrolling={props.type?.toLowerCase() === 'janus-capi-iframe' ? 'no' : ''}\n          />\n        ) : (\n          <div className=\"container h-100\">\n            <div className=\"row h-100 justify-content-center align-items-center\">\n              <div>\n                <label style={lableStyles}>{props.id}</label>\n                {src && !configClicked && (\n                  <div style={configDivStyles} className=\"form-group\">\n                    {\n                      <a\n                        href=\"#!\"\n                        onClick={() => {\n                          setconfigClicked(true);\n                          setInConfigureMode(true);\n                        }}\n                        style={configAnchorStyles}\n                      >\n                        configure\n                      </a>\n                    }\n                    <iframe\n                      ref={frameRef}\n                      style={{ display: 'none', height: '100%', width: '100%' }}\n                      data-janus-type={tagName}\n                      scrolling={props.type?.toLowerCase() === 'janus-capi-iframe' ? 'no' : ''}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n\n  const portalEl = document.getElementById(props.portal) as Element;\n\n  const renderIt =\n    inConfigureMode &&\n    portalEl &&\n    ReactDOM.createPortal(\n      <CapiVariablePicker\n        label=\"Stage\"\n        state={internalState.filter((item: CapiVariable) => !item.readonly)}\n        onChange={handleValueChangeFromModal}\n        onSave={handleEditorSave}\n        onCancel={handleEditorCancel}\n      />,\n      portalEl,\n    );\n  return ready ? (\n    <React.Fragment>\n      {renderIt} {configClikedRender}\n    </React.Fragment>\n  ) : null;\n};\n\nexport const tagName = 'janus-capi-iframe';\n\nexport default CapiIframeAuthor;\n"]}