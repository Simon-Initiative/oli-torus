{"version":3,"file":"PopupAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-popup/PopupAuthor.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  NotificationType,\n  subscribeToNotification,\n} from 'apps/delivery/components/NotificationContext';\nimport ScreenAuthor from 'components/activities/adaptive/components/authoring/ScreenAuthor';\nimport { AuthorPartComponentProps } from 'components/parts/types/parts';\nimport React, { CSSProperties, useCallback, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { clone, parseBoolean } from 'utils/common';\nimport { getIconSrc } from './GetIcon';\nimport PopupWindow from './PopupWindow';\nimport { PopupModel } from './schema';\nimport { ContextProps } from './types';\n\n// eslint-disable-next-line react/display-name\nconst Designer: React.FC<any> = React.memo(({ screenModel, onChange, portal }) => {\n  /* console.log('PopupAuthor: Designer', { screenModel, portal }); */\n  return (\n    portal &&\n    ReactDOM.createPortal(<ScreenAuthor screen={screenModel} onChange={onChange} />, portal)\n  );\n});\n\nconst PopupAuthor: React.FC<AuthorPartComponentProps<PopupModel>> = (props) => {\n  const { id, model, configuremode, onConfigure, onCancelConfigure, onSaveConfigure } = props;\n\n  const [inConfigureMode, setInConfigureMode] = useState<boolean>(parseBoolean(configuremode));\n  useEffect(() => {\n    // console.log('PopupAuthor configuremode changed!!', configuremode);\n    setInConfigureMode(parseBoolean(configuremode));\n  }, [configuremode]);\n\n  const [context, setContext] = useState<ContextProps>({ currentActivity: '', mode: '' });\n  const [showWindow, setShowWindow] = useState(false);\n\n  const [windowModel, setWindowModel] = useState<any>(model.popup);\n  useEffect(() => {\n    // console.log('PopupAuthor windowModel changed!!', { windowModel, gnu: model.popup });\n    setWindowModel(model.popup);\n  }, [model.popup]);\n\n  const handleNotificationSave = useCallback(async () => {\n    const modelClone = clone(model);\n    modelClone.popup = windowModel;\n    // console.log('PA:NOTIFYSAVE', { id, modelClone, windowModel });\n    await onSaveConfigure({ id, snapshot: modelClone });\n    setInConfigureMode(false);\n  }, [windowModel, model]);\n\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CONFIGURE,\n      NotificationType.CONFIGURE_SAVE,\n      NotificationType.CONFIGURE_CANCEL,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        /* console.log(`${notificationType.toString()} notification event [PopupAuthor]`, payload); */\n        if (!payload) {\n          // if we don't have anything, we won't even have an id to know who it's for\n          // for these events we need something, it's not for *all* of them\n          return;\n        }\n        switch (notificationType) {\n          case NotificationType.CONFIGURE:\n            {\n              const { partId, configure } = payload;\n              if (partId === id) {\n                /* console.log('PA:NotificationType.CONFIGURE', { partId, configure }); */\n                // if it's not us, then we shouldn't be configuring\n                setInConfigureMode(configure);\n                if (configure) {\n                  onConfigure({ id, configure, context: { fullscreen: true } });\n                }\n              }\n            }\n            break;\n          case NotificationType.CONFIGURE_SAVE:\n            {\n              const { id: partId } = payload;\n              if (partId === id) {\n                /* console.log('PA:NotificationType.CONFIGURE_SAVE', { partId }); */\n                handleNotificationSave();\n              }\n            }\n            break;\n          case NotificationType.CONFIGURE_CANCEL:\n            {\n              const { id: partId } = payload;\n              if (partId === id) {\n                /* console.log('PA:NotificationType.CONFIGURE_CANCEL', { partId }); */\n              }\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify, handleNotificationSave]);\n\n  const {\n    x,\n    y,\n    z,\n    width,\n    height,\n    customCssClass,\n    openByDefault,\n    visible = true,\n    defaultURL,\n    iconURL,\n    useToggleBehavior,\n    description,\n  } = model;\n\n  // need to offset the window position by the position of the parent element\n  // since it's a child of the parent element and not the activity (screen) directly\n  const offsetWindowConfig = {\n    ...model.popup.custom,\n    x: model.popup.custom.x /*  - (x || 0) */,\n    y: model.popup.custom.y /*  - (y || 0) */,\n    z: Math.max((z || 0) + 1000, (model.popup.custom.z || 0) + 1000),\n  };\n\n  const [windowConfig, setWindowConfig] = useState<any>(offsetWindowConfig);\n  const [windowParts, setWindowParts] = useState<any[]>(model.popup.partsLayout || []);\n\n  // only update when the model updates, not the windowModel, because that is just temporary\n  // for the editing until saved\n  useEffect(() => {\n    setWindowConfig(offsetWindowConfig);\n    setWindowParts(model.popup.partsLayout || []);\n  }, [model.popup]);\n\n  const handleWindowClose = () => {\n    setShowWindow(false);\n  };\n\n  const iconSrc = getIconSrc(iconURL, defaultURL);\n\n  const styles: CSSProperties = {\n    width,\n    height,\n  };\n\n  // for authoring we don't actually want to hide it\n  if (!visible) {\n    styles.opacity = 0.5;\n  }\n\n  const init = useCallback(async () => {\n    const initResult = await props.onInit({ id, responses: [] });\n    console.log('PA INIT', { id, initResult });\n\n    setContext((c) => ({ ...c, ...initResult.context }));\n\n    // all activities *must* emit onReady\n    props.onReady({ id: `${props.id}` });\n  }, [props]);\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const handleScreenAuthorChange = (changedScreen: any) => {\n    /* console.log('POPUP AUTHOR SCREEN AUTHOR CHANGE', changedScreen); */\n    setWindowModel(changedScreen);\n  };\n\n  const [portalEl, setPortalEl] = useState<HTMLElement | null>(null);\n  useEffect(() => {\n    // timeout to give modal a moment to load\n    setTimeout(() => {\n      const el = document.getElementById(props.portal);\n      // console.log('portal changed', { el, p: props.portal });\n      if (el) {\n        setPortalEl(el);\n      }\n    }, 10);\n  }, [inConfigureMode, props.portal]);\n\n  useEffect(() => {\n    const popupModalZ = windowModel.z || 1000;\n    const zIndexIcon = z || 0;\n    const finalZIndex = showWindow ? Math.max(zIndexIcon + popupModalZ, popupModalZ) : zIndexIcon;\n    const modifiedData = { zIndex: { value: finalZIndex } };\n    // console.log('PA: RESIZE', { id, modifiedData });\n    setAuthorStyleOverride(`#${id.replace(/:/g, '\\\\:')} { z-index: ${finalZIndex};}`);\n    props.onResize({ id: `${id}`, settings: modifiedData });\n  }, [showWindow, model]);\n\n  const [authorStyleOverride, setAuthorStyleOverride] = useState<string>('');\n\n  const PortalWindow = () => {\n    if (!context.host) {\n      return null;\n    }\n    const windowProps = {\n      config: windowConfig,\n      parts: windowParts,\n      snapshot: {},\n      context,\n      onClose: handleWindowClose,\n    };\n    return ReactDOM.createPortal(<PopupWindow {...windowProps} />, context.host);\n  };\n\n  return (\n    <React.Fragment>\n      <style>{authorStyleOverride}</style>\n      {inConfigureMode && portalEl && (\n        <Designer screenModel={windowModel} onChange={handleScreenAuthorChange} portal={portalEl} />\n      )}\n      <input\n        role=\"button\"\n        draggable=\"false\"\n        {...(iconSrc\n          ? {\n              src: iconSrc,\n              type: 'image',\n              alt: description,\n            }\n          : {\n              type: 'button',\n            })}\n        className={`info-icon`}\n        onDoubleClick={() => {\n          setShowWindow(true);\n        }}\n        aria-controls={id}\n        aria-haspopup=\"true\"\n        aria-label={description}\n        style={styles}\n      />\n      {showWindow && <PortalWindow />}\n    </React.Fragment>\n  );\n};\n\nexport const tagName = 'janus-popup';\n\nexport default PopupAuthor;\n"]}