{"version":3,"file":"MultiLineTextInput.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-multi-line-text/MultiLineTextInput.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport debounce from 'lodash/debounce';\nimport React, { ChangeEvent, CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport { CapiVariableTypes } from '../../../adaptivity/capi';\nimport {\n  NotificationType,\n  subscribeToNotification,\n} from '../../../apps/delivery/components/NotificationContext';\nimport { contexts } from '../../../types/applicationContext';\nimport { PartComponentProps } from '../types/parts';\nimport { MultiLineTextModel } from './schema';\n\nconst MultiLineTextInput: React.FC<PartComponentProps<MultiLineTextModel>> = (props) => {\n  const [state, setState] = useState<any[]>(Array.isArray(props.state) ? props.state : []);\n  const [model, setModel] = useState<any>(Array.isArray(props.model) ? props.model : {});\n  const [ready, setReady] = useState<boolean>(false);\n  const id: string = props.id;\n\n  const characterCounterRef = useRef<HTMLSpanElement>(null);\n  const [text, setText] = useState<string>('');\n  const [enabled, setEnabled] = useState(true);\n  const [cssClass, setCssClass] = useState('');\n  //need to save the textLength\n  const saveTextLength = (sText: string) => {\n    props.onSave({\n      id,\n      responses: [\n        {\n          key: 'textLength',\n          type: CapiVariableTypes.NUMBER,\n          value: sText.length,\n        },\n      ],\n    });\n  };\n  const initialize = useCallback(async (pModel) => {\n    // set defaults\n    const dEnabled = typeof pModel.enabled === 'boolean' ? pModel.enabled : enabled;\n    setEnabled(dEnabled);\n\n    const dCssClass = pModel.customCssClass || '';\n    setCssClass(dCssClass);\n\n    const dText = pModel.initValue || '';\n    setText(dText);\n\n    const initResult = await props.onInit({\n      id,\n      responses: [\n        {\n          key: 'enabled',\n          type: CapiVariableTypes.BOOLEAN,\n          value: dEnabled,\n        },\n        {\n          key: 'customCssClass',\n          type: CapiVariableTypes.STRING,\n          value: dCssClass,\n        },\n        {\n          key: 'text',\n          type: CapiVariableTypes.STRING,\n          value: dText,\n        },\n        {\n          key: 'textLength',\n          type: CapiVariableTypes.NUMBER,\n          value: dText.length,\n        },\n      ],\n    });\n\n    // result of init has a state snapshot with latest (init state applied)\n    const currentStateSnapshot = initResult.snapshot;\n    const sEnabled = currentStateSnapshot[`stage.${id}.enabled`];\n    if (sEnabled !== undefined) {\n      setEnabled(sEnabled);\n    }\n    const sText = currentStateSnapshot[`stage.${id}.text`];\n    if (sText !== undefined) {\n      setText(sText);\n      saveTextLength(sText);\n    }\n    const sCssClass = currentStateSnapshot[`stage.${id}.customCssClass`];\n    if (sCssClass !== undefined) {\n      setCssClass(sCssClass);\n    }\n    //Instead of hardcoding REVIEW, we can make it an global interface and then importa that here.\n    if (initResult.context.mode === contexts.REVIEW) {\n      setEnabled(false);\n    }\n    setReady(true);\n  }, []);\n\n  useEffect(() => {\n    let pModel;\n    let pState;\n    if (typeof props?.model === 'string') {\n      try {\n        pModel = JSON.parse(props.model);\n        setModel(pModel);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (typeof props?.state === 'string') {\n      try {\n        pState = JSON.parse(props.state);\n        setState(pState);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (!pModel) {\n      return;\n    }\n    initialize(pModel);\n  }, [props]);\n\n  useEffect(() => {\n    if (!ready) {\n      return;\n    }\n    props.onReady({ id, responses: [] });\n  }, [ready]);\n\n  const {\n    label,\n    x = 0,\n    y = 0,\n    z = 0,\n    width,\n    height,\n    prompt,\n    showLabel,\n    showCharacterCount,\n    fontSize,\n  } = model;\n\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CHECK_STARTED,\n      NotificationType.CHECK_COMPLETE,\n      NotificationType.CONTEXT_CHANGED,\n      NotificationType.STATE_CHANGED,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        /* console.log(\n          `${notificationType.toString()} notification handled [Multiline text Input]`,\n          payload,\n        ); */\n        switch (notificationType) {\n          case NotificationType.CHECK_STARTED:\n            // nothing to do\n            break;\n          case NotificationType.CHECK_COMPLETE:\n            // nothing to do\n            break;\n          case NotificationType.STATE_CHANGED:\n            {\n              const { mutateChanges: changes } = payload;\n              const sText = changes[`stage.${id}.text`];\n              if (sText !== undefined) {\n                setText(sText);\n                saveTextLength(sText);\n              }\n\n              const sEnabled = changes[`stage.${id}.enabled`];\n              if (sEnabled !== undefined) {\n                setEnabled(sEnabled);\n              }\n\n              const sCssClass = changes[`stage.${id}.customCssClass`];\n              if (sCssClass !== undefined) {\n                setCssClass(sCssClass);\n              }\n            }\n            break;\n          case NotificationType.CONTEXT_CHANGED:\n            {\n              const { snapshot } = payload;\n              const sText = snapshot[`stage.${id}.text`];\n              if (sText !== undefined) {\n                setText(sText.toString());\n                saveTextLength(sText.toString());\n              }\n\n              const sEnabled = snapshot[`stage.${id}.enabled`];\n              if (sEnabled !== undefined) {\n                setEnabled(sEnabled);\n              }\n\n              const sCssClass = snapshot[`stage.${id}.customCssClass`];\n              if (sCssClass !== undefined) {\n                setCssClass(sCssClass);\n              }\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify]);\n\n  // Set up the styles\n  const wrapperStyles: CSSProperties = {\n    width,\n  };\n  const inputStyles: CSSProperties = {\n    width,\n    height,\n    resize: 'none',\n    fontSize,\n  };\n\n  useEffect(() => {\n    //TODO commenting for now. Need to revisit once state structure logic is in place\n    //handleStateChange(state);\n  }, [state]);\n\n  const saveInputText = (val: string) => {\n    props.onSave({\n      id: `${id}`,\n      responses: [\n        {\n          key: 'text',\n          type: CapiVariableTypes.STRING,\n          value: val,\n        },\n        {\n          key: 'textLength',\n          type: CapiVariableTypes.NUMBER,\n          value: val.length,\n        },\n      ],\n    });\n  };\n\n  const handleOnChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const val = event.target.value;\n    if (characterCounterRef.current) characterCounterRef.current.innerText = val.length.toString();\n    setText(val);\n    // Wait until user has stopped typing to save the new value\n    debounceInputText(val);\n  };\n\n  const debounceWaitTime = 250;\n  const debounceInputText = useCallback(\n    debounce((val) => saveInputText(val), debounceWaitTime),\n    [],\n  );\n\n  useEffect(() => {\n    const styleChanges: any = {};\n    if (width !== undefined) {\n      styleChanges.width = { value: width as number };\n    }\n    if (height != undefined) {\n      styleChanges.height = { value: height as number };\n    }\n\n    props.onResize({ id: `${id}`, settings: styleChanges });\n  }, [width, height]);\n\n  const initialCharacterCount = text.length || 0;\n\n  return ready ? (\n    <div data-janus-type={tagName} className={`long-text-input`} style={wrapperStyles}>\n      <label\n        htmlFor={id}\n        style={{\n          display: showLabel ? 'inline-block' : 'none',\n        }}\n      >\n        {label}\n      </label>\n      <textarea\n        name=\"test\"\n        id={id}\n        onChange={handleOnChange}\n        style={inputStyles}\n        placeholder={prompt}\n        value={text}\n        disabled={!enabled}\n      />\n      <div\n        title=\"Number of characters\"\n        className=\"characterCounter\"\n        style={{\n          padding: '0px',\n          color: 'rgba(0,0,0,0.6)',\n          display: showCharacterCount ? 'block' : 'none',\n          width: '250px',\n          fontFamily: 'Arial',\n          textAlign: 'right',\n        }}\n      >\n        <span\n          className={`span_${id}`}\n          ref={characterCounterRef}\n          style={{\n            padding: '0px',\n            fontFamily: 'Arial',\n          }}\n        >\n          {initialCharacterCount}\n        </span>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport const tagName = 'janus-multi-line-text';\n\nexport default MultiLineTextInput;\n"]}