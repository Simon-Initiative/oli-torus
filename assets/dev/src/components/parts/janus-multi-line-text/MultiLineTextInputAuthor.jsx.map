{"version":3,"file":"MultiLineTextInputAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-multi-line-text/MultiLineTextInputAuthor.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAiB,SAAS,EAAE,MAAM,OAAO,CAAC;AAGxD,MAAM,wBAAwB,GAA2D,CACvF,KAAK,EACL,EAAE;IACF,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAE5B,MAAM,EACJ,KAAK,EACL,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,EACL,CAAC,GAAG,CAAC,EACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,SAAS,EACT,SAAS,EACT,QAAQ,EACR,kBAAkB,GACnB,GAAG,KAAK,CAAC;IACV,MAAM,aAAa,GAAkB;QACnC,KAAK;KACN,CAAC;IACF,MAAM,WAAW,GAAkB;QACjC,KAAK;QACL,MAAM;QACN,MAAM,EAAE,MAAM;QACd,QAAQ;KACT,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,qCAAqC;QACrC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAChF;MAAA,CAAC,KAAK,CACJ,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CACvB,KAAK,CAAC,CAAC;YACL,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM;SAC7C,CAAC,CAEF;QAAA,CAAC,KAAK,CACR;MAAA,EAAE,KAAK,CACP;MAAA,CAAC,QAAQ,CACP,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CACnB,EAAE,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAClB,KAAK,CAAC,CAAC,WAAW,CAAC,CACnB,WAAW,CAAC,CAAC,MAAM,CAAC,CACpB,KAAK,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,CACvB,QAAQ,CAAC,CAAC,IAAI,CAAC,EAEjB;MAAA,CAAC,GAAG,CACF,KAAK,CAAC,sBAAsB,CAC5B,SAAS,CAAC,kBAAkB,CAC5B,KAAK,CAAC,CAAC;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,iBAAiB;YACxB,OAAO,EAAE,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;YAC9C,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,MAAM;YAChB,UAAU,EAAE,OAAO;YACnB,SAAS,EAAE,OAAO;SACnB,CAAC,CAEF;QAAA,CAAC,IAAI,CACH,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CACxB,KAAK,CAAC,CAAC;YACL,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,OAAO;SACpB,CAAC,CAEF;UAAA,CAAC,CAAC,CACJ;QAAA,EAAE,IAAI,CACR;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,uBAAuB,CAAC;AAE/C,eAAe,wBAAwB,CAAC","sourcesContent":["import { AuthorPartComponentProps } from 'components/parts/types/parts';\nimport React, { CSSProperties, useEffect } from 'react';\nimport { MultiLineTextModel } from './schema';\n\nconst MultiLineTextInputAuthor: React.FC<AuthorPartComponentProps<MultiLineTextModel>> = (\n  props,\n) => {\n  const { id, model } = props;\n\n  const {\n    label,\n    x = 0,\n    y = 0,\n    z = 0,\n    width,\n    height,\n    prompt,\n    showLabel,\n    initValue,\n    fontSize,\n    showCharacterCount,\n  } = model;\n  const wrapperStyles: CSSProperties = {\n    width,\n  };\n  const inputStyles: CSSProperties = {\n    width,\n    height,\n    resize: 'none',\n    fontSize,\n  };\n\n  useEffect(() => {\n    // all activities *must* emit onReady\n    props.onReady({ id: `${props.id}` });\n  }, []);\n\n  return (\n    <div data-janus-type={tagName} className={`long-text-input`} style={wrapperStyles}>\n      <label\n        htmlFor={`${id}-input`}\n        style={{\n          display: showLabel ? 'inline-block' : 'none',\n        }}\n      >\n        {label}\n      </label>\n      <textarea\n        name={`name-${id}`}\n        id={`${id}-input`}\n        style={inputStyles}\n        placeholder={prompt}\n        value={initValue || ''}\n        disabled={true}\n      />\n      <div\n        title=\"Number of characters\"\n        className=\"characterCounter\"\n        style={{\n          padding: '0px',\n          color: 'rgba(0,0,0,0.6)',\n          display: showCharacterCount ? 'block' : 'none',\n          width: '100%',\n          fontSize: '12px',\n          fontFamily: 'Arial',\n          textAlign: 'right',\n        }}\n      >\n        <span\n          className={`span_${id}`}\n          style={{\n            padding: '0px',\n            fontFamily: 'Arial',\n          }}\n        >\n          {0}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport const tagName = 'janus-multi-line-text';\n\nexport default MultiLineTextInputAuthor;\n"]}