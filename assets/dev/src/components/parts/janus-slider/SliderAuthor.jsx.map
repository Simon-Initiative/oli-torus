{"version":3,"file":"SliderAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-slider/SliderAuthor.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAiB,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE1E,OAAO,eAAe,CAAC;AAEvB,MAAM,YAAY,GAAoD,CAAC,KAAK,EAAE,EAAE;IAC9E,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAE5B,MAAM,EACJ,CAAC,EACD,CAAC,EACD,CAAC,EACD,KAAK,EACL,MAAM,EACN,cAAc,EACd,KAAK,EACL,OAAO,GAAG,CAAC,EACX,OAAO,GAAG,CAAC,EACX,YAAY,EACZ,WAAW,EACX,eAAe,EACf,SAAS,EACT,SAAS,EACT,WAAW,GACZ,GAAG,KAAK,CAAC;IAEV,MAAM,MAAM,GAAkB;QAC5B,KAAK,EAAE,MAAM;QACb,aAAa,EAAE,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK;KAC5C,CAAC;IACF,MAAM,WAAW,GAAkB;QACjC,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,KAAK;QACb,MAAM,EAAE,CAAC;QACT,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;KACvC,CAAC;IACF,MAAM,SAAS,GAAkB;QAC/B,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,MAAM;QACf,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,QAAQ;KACrB,CAAC;IAEF,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAS,CAAC,CAAC,CAAC;IAClE,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,QAAQ,CAAS,CAAC,CAAC,CAAC;IAEhE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAElD,SAAS,CAAC,GAAG,EAAE;QACb,qCAAqC;QACrC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,UAAU,GAAG,eAAe,CAAC;IACnC,MAAM,UAAU,GAAG,cAAc,CAAC;IAClC,MAAM,cAAc,GAAG,UAAU,GAAG,CAAC,CAAC;IACtC,MAAM,aAAa,GACjB,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;QACvD,CAAC,UAAU,GAAG,UAAU,GAAG,cAAc,CAAC,CAAC;IAC7C,MAAM,WAAW,GAAG,cAAc,GAAG,CAAC,CAAC,GAAG,cAAc,GAAG,CAAC,CAAC;IAE7D,MAAM,cAAc,GAAG,MAAM,CAAmB,IAAI,CAAC,CAAC;IACtD,SAAS,CAAC,GAAG,EAAE;;QACb,IAAI,cAAc,IAAI,cAAc,CAAC,OAAO,EAAE;YAC5C,kBAAkB,CAAC,MAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,OAAO,0CAAE,WAAW,CAAC,CAAC;SAC1D;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,MAAM,CAAkB,IAAI,CAAC,CAAC;IACnD,SAAS,CAAC,GAAG,EAAE;;QACb,IAAI,YAAY,IAAI,YAAY,CAAC,OAAO,EAAE;YACxC,iBAAiB,CAAC,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,0CAAE,WAAW,CAAC,CAAC;SACvD;IACH,CAAC,CAAC,CAAC;IACH,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,IAAI,YAAY,EAAE;YAChB,MAAM,OAAO,GAAG,EAAE,CAAC;YACnB,MAAM,aAAa,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,YAAY,CAAC;YACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAE,EAAE;gBACvC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;aAC1D;YACD,OAAO,OAAO,CAAC;SAChB;IACH,CAAC,CAAC;IACF,MAAM,UAAU,GAAG,GAAG,EAAE,UAAU,CAAC;IAEnC,OAAO,CACL,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAChE;MAAA,CAAC,SAAS,IAAI,CACZ,CAAC,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CACjD;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,KAAK,CAAC,CACT,CACD;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAC1B;QAAA,CAAC,eAAe,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CACzF;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CACxB;UAAA,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CACpB;YAAA,CAAC,WAAW,IAAI,CACd,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,UAAU,UAAU,EAAE,CAAC,CACrD;gBAAA,CAAC,IAAI,CACH,GAAG,CAAC,CAAC,YAAY,CAAC,CAClB,EAAE,CAAC,CAAC,gBAAgB,UAAU,EAAE,CAAC,CACjC,KAAK,CAAC,CAAC;gBACL,IAAI,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,IAAI;gBACpD,UAAU,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,IAAI;gBACxD,KAAK,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,IAAI;gBACrD,WAAW,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,IAAI;aAC1D,CAAC,CAEF;kBAAA,CAAC,WAAW,CACd;gBAAA,EAAE,IAAI,CACR;cAAA,EAAE,GAAG,CAAC,CACP,CACD;YAAA,CAAC,KAAK,CACJ,GAAG,CAAC,CAAC,cAAc,CAAC,CACpB,QAAQ,CAAC,CAAC,KAAK,CAAC,CAChB,KAAK,CAAC,CAAC,WAAW,CAAC,CACnB,GAAG,CAAC,CAAC,OAAO,CAAC,CACb,GAAG,CAAC,CAAC,OAAO,CAAC,CACb,IAAI,CAAC,CAAC,OAAO,CAAC,CACd,KAAK,CAAC,CAAC,WAAW,CAAC,CACnB,IAAI,CAAC,CAAC,YAAY,CAAC,CACnB,EAAE,CAAC,CAAC,UAAU,CAAC,CACf,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAEjD;YAAA,CAAC,SAAS,IAAI,CACZ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,UAAU,EAAE,CAAC,CAChE;gBAAA,CAAC,cAAc,EAAE,CACnB;cAAA,EAAE,QAAQ,CAAC,CACZ,CACH;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CACL;QAAA,CAAC,eAAe,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAC3F;MAAA,EAAE,GAAG,CACP;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,cAAc,CAAC;AAEtC,eAAe,YAAY,CAAC","sourcesContent":["import { AuthorPartComponentProps } from 'components/parts/types/parts';\nimport React, { CSSProperties, useEffect, useRef, useState } from 'react';\nimport { SliderModel } from './schema';\nimport './Slider.scss';\n\nconst SliderAuthor: React.FC<AuthorPartComponentProps<SliderModel>> = (props) => {\n  const { id, model } = props;\n\n  const {\n    x,\n    y,\n    z,\n    width,\n    height,\n    customCssClass,\n    label,\n    maximum = 1,\n    minimum = 0,\n    snapInterval,\n    showDataTip,\n    showValueLabels,\n    showLabel,\n    showTicks,\n    invertScale,\n  } = model;\n\n  const styles: CSSProperties = {\n    width: '100%',\n    flexDirection: showLabel ? 'column' : 'row',\n  };\n  const inputStyles: CSSProperties = {\n    width: '100%',\n    height: `3px`,\n    zIndex: z,\n    direction: invertScale ? 'rtl' : 'ltr',\n  };\n  const divStyles: CSSProperties = {\n    width: '100%',\n    display: `flex`,\n    flexDirection: 'row',\n    alignItems: 'center',\n  };\n\n  const [inputInnerWidth, setInputInnerWidth] = useState<number>(0);\n  const [spanInnerWidth, setSpanInnerWidth] = useState<number>(0);\n\n  const [sliderValue, setSliderValue] = useState(0);\n\n  useEffect(() => {\n    // all activities *must* emit onReady\n    props.onReady({ id: `${props.id}` });\n  }, []);\n\n  const inputWidth = inputInnerWidth;\n  const thumbWidth = spanInnerWidth;\n  const thumbHalfWidth = thumbWidth / 2;\n  const thumbPosition =\n    ((Number(sliderValue) - minimum) / (maximum - minimum)) *\n    (inputWidth - thumbWidth + thumbHalfWidth);\n  const thumbMargin = thumbHalfWidth * -1 + thumbHalfWidth / 2;\n\n  const inputTargetRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (inputTargetRef && inputTargetRef.current) {\n      setInputInnerWidth(inputTargetRef?.current?.offsetWidth);\n    }\n  });\n\n  const divTargetRef = useRef<HTMLSpanElement>(null);\n  useEffect(() => {\n    if (divTargetRef && divTargetRef.current) {\n      setSpanInnerWidth(divTargetRef?.current?.offsetWidth);\n    }\n  });\n  const getTickOptions = () => {\n    if (snapInterval) {\n      const options = [];\n      const numberOfTicks = (maximum - minimum) / snapInterval;\n      for (let i = 0; i <= numberOfTicks; i++) {\n        options.push(<option value={i * snapInterval}></option>);\n      }\n      return options;\n    }\n  };\n  const internalId = `${id}__slider`;\n\n  return (\n    <div data-janus-type={tagName} style={styles} className={`slider`}>\n      {showLabel && (\n        <label className=\"input-label\" htmlFor={internalId}>\n          {label}\n        </label>\n      )}\n      <div className=\"sliderInner\">\n        {showValueLabels && <label htmlFor={internalId}>{invertScale ? maximum : minimum}</label>}\n        <div className=\"rangeWrap\">\n          <div style={divStyles}>\n            {showDataTip && (\n              <div className=\"rangeValue\" id={`rangeV-${internalId}`}>\n                <span\n                  ref={divTargetRef}\n                  id={`slider-thumb-${internalId}`}\n                  style={{\n                    left: `${invertScale ? undefined : thumbPosition}px`,\n                    marginLeft: `${invertScale ? undefined : thumbMargin}px`,\n                    right: `${invertScale ? thumbPosition : undefined}px`,\n                    marginRight: `${invertScale ? thumbMargin : undefined}px`,\n                  }}\n                >\n                  {sliderValue}\n                </span>\n              </div>\n            )}\n            <input\n              ref={inputTargetRef}\n              disabled={false}\n              style={inputStyles}\n              min={minimum}\n              max={maximum}\n              type={'range'}\n              value={sliderValue}\n              step={snapInterval}\n              id={internalId}\n              list={showTicks ? `datalist${internalId}` : ''}\n            />\n            {showTicks && (\n              <datalist style={{ display: 'none' }} id={`datalist${internalId}`}>\n                {getTickOptions()}\n              </datalist>\n            )}\n          </div>\n        </div>\n        {showValueLabels && <label htmlFor={internalId}>{invertScale ? minimum : maximum}</label>}\n      </div>\n    </div>\n  );\n};\n\nexport const tagName = 'janus-slider';\n\nexport default SliderAuthor;\n"]}