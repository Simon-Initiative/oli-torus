{"version":3,"file":"Markup.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-text-flow/Markup.tsx"],"names":[],"mappings":"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","sourcesContent":["import { templatizeText } from 'apps/delivery/components/TextParser';\nimport { Environment } from 'janus-script';\nimport React, { Fragment, useEffect, useRef } from 'react';\nimport guid from 'utils/guid';\n\n// removes irrelevant styles\nconst styleFilter = (styles: any) => {\n  // list of styles to remove\n  const stylesToRemove = ['textAlignLast'];\n  // duplicate style object\n  const updatedStyles = { ...styles };\n  // loop removal list\n  stylesToRemove.forEach((remove) => delete updatedStyles[remove]);\n  // return the goods\n  return updatedStyles;\n};\n\n/*eslint-disable */\nconst Markup: React.FC<any> = ({\n  tag,\n  href,\n  src,\n  target,\n  style = {},\n  text = '',\n  children,\n  state = {},\n  customCssClass = '',\n  displayRawText = false,\n  env = new Environment(),\n}) => {\n  /*eslint-enable */\n  const el = useRef<any>(null);\n\n  useEffect(() => {\n    // this effect is needed to support global style overrides that are expecting things\n    // to be like SS did it ex. .content P SPAN[style*=\"font-family:Arial;\"]\n    if (!el.current) {\n      return;\n    }\n    const ogStyles = el.current.getAttribute('style');\n    const formatted = ogStyles && ogStyles.replace(/: /g, ':');\n    el.current.setAttribute('style', formatted || '');\n  }, [style]);\n\n  // mutate the original styles w/o triggering re-render\n  const renderStyles = {\n    ...styleFilter(style),\n  };\n  if (renderStyles.fontSize) {\n    if (typeof renderStyles.fontSize === 'string') {\n      // I believe that React style attribute fontSize can accept different units\n      // but can't have the units omitted\n      if (renderStyles.fontSize.match(/^[0-9]+$/)) {\n        renderStyles.fontSize = parseFloat(renderStyles.fontSize);\n      }\n    }\n  }\n  if (renderStyles.backgroundColor === 'transparent') {\n    // seems that SS does not apply backgroundColor if the values is transparent\n    renderStyles.backgroundColor = '';\n  }\n\n  let processedText = text;\n  // allow (authoring usually) skipping the template processing\n  if (!displayRawText) {\n    processedText = templatizeText(text, state, env);\n  }\n\n  // eslint-disable-next-line\n  if (!children.length) {\n    // empty elements in HTML don't stay in the flow\n    // add a non breaking space instead of nothing\n\n    processedText = processedText.length < 2 && !processedText.trim() ? '\\u00a0' : processedText;\n    if (tag === 'span') {\n      renderStyles.visibility = 'hidden';\n    }\n  }\n  if (processedText.length !== processedText.trimLeft().length) {\n    const noOfleadingSpaces = processedText.length - processedText.trimLeft().length;\n    let leadingSpacePart = processedText.substring(0, noOfleadingSpaces);\n    let actualText = processedText.substring(noOfleadingSpaces);\n    leadingSpacePart = leadingSpacePart.replace(/ /g, '\\u00a0');\n    actualText = actualText.replace(/\\s /g, ' \\u00a0');\n    processedText = leadingSpacePart + actualText;\n    // check if text has leading and trailing spaces.\n    //handling the leading blank spacecs in the span\n  } else {\n    processedText = processedText.replace(/\\s /g, ' \\u00a0');\n  }\n\n  // this is to support \"legacy\" SmartSparrow lessons\n  let renderTag = tag;\n  if (renderStyles.styleName) {\n    // TODO:\n    switch (renderStyles.styleName.toLowerCase()) {\n      case 'body text':\n        renderTag = 'p';\n        break;\n      case 'title':\n        renderTag = 'h1';\n        break;\n      case 'heading':\n        renderTag = 'h2';\n        break;\n      case 'sub-heading':\n        renderTag = 'h3';\n        break;\n      case 'small text':\n        renderTag = 'small';\n        break;\n      case 'subscript':\n        renderTag = 'sub';\n        break;\n      case 'superscript':\n        renderTag = 'sup';\n        break;\n    }\n  }\n\n  // fix key bug, TODO: use this for ID on the element (needed/useful)?\n  const key = `${renderTag}-${guid()}`;\n\n  // TODO: support MathJax\n  // TODO: support templating in text\n  // TODO: support tables, quotes, definition lists?? form elements???\n\n  switch (renderTag) {\n    case 'a':\n      return (\n        <a\n          ref={el}\n          key={key}\n          className={customCssClass}\n          href={href}\n          target={target}\n          style={{ ...renderStyles, display: 'inline' }}\n        >\n          {processedText}\n          {children}\n        </a>\n      );\n    case 'span':\n      return (\n        <span ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </span>\n      );\n    case 'strong':\n    case 'b':\n      return (\n        <strong ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </strong>\n      );\n    case 'em':\n    case 'i':\n      return (\n        <em ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </em>\n      );\n    case 'div':\n      return (\n        <div ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </div>\n      );\n    case 'h1':\n      // because of the global injected override .content *\n      // sets display: inline for everything... we need to fix it again\n      if (!renderStyles.display) {\n        renderStyles.display = 'block';\n      }\n      return (\n        <h1 ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </h1>\n      );\n    case 'h2':\n      return (\n        <h2 ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </h2>\n      );\n    case 'h3':\n      return (\n        <h3 ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </h3>\n      );\n    case 'h4':\n      return (\n        <h4 ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </h4>\n      );\n    case 'h5':\n      return (\n        <h5 ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </h5>\n      );\n    case 'h6':\n      return (\n        <h6 ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </h6>\n      );\n    case 'p':\n      // because of the global injected override .content *\n      // sets display: inline for everything... we need to fix it again\n      if (!renderStyles.display) {\n        renderStyles.display = 'block';\n      }\n      // because of the global injected override .content *\n      // sets line-height: 1.4 for everything\n      if (!renderStyles.lineHeight) {\n        renderStyles.lineHeight = 'normal';\n      }\n      //let's not do this for all P tags forces fontSize to be specified\n      //PMP-1308 - Uncommenting this for fixing spacing issues. If lineHeight is not applied then SS sets it to 0px.\n      //In future, if for some reason someone has to comment it, please make sure to check PMP-1308\n      // FIXME: we can't do this because this will basically make all the text invisible\n      // TODO: figure out how to do it both ways\n      /* if (!renderStyles.fontSize) {\n        renderStyles.fontSize = '0px';\n      } */\n      return (\n        <p ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </p>\n      );\n    case 'sub':\n      return (\n        <sub ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </sub>\n      );\n    case 'sup':\n      return (\n        <sup ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </sup>\n      );\n    case 'small':\n      if (!renderStyles.display) {\n        renderStyles.display = 'inline';\n      }\n      return (\n        <small ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </small>\n      );\n    case 'code':\n      return (\n        <code ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </code>\n      );\n    case 'blockquote':\n      return (\n        <blockquote ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </blockquote>\n      );\n    case 'ol':\n      return (\n        <ol ref={el} key={key} className={customCssClass} style={renderStyles}>\n          {processedText}\n          {children}\n        </ol>\n      );\n    case 'ul':\n      delete renderStyles.width;\n      return (\n        <ul\n          ref={el}\n          key={key}\n          className={customCssClass}\n          style={{ ...renderStyles, paddingLeft: '40px' }}\n        >\n          {processedText}\n          {children}\n        </ul>\n      );\n    case 'li':\n      // eslint-disable-next-line\n      const spanChildren = children.filter((child: any) => {\n        return child.props.tag === 'span';\n      });\n      const listStyle = { ...renderStyles, display: 'list-item' };\n      if (spanChildren.length === 1 && spanChildren[0].props.style.color && !listStyle.color) {\n        listStyle.color = spanChildren[0].props.style.color;\n      }\n      return (\n        <li ref={el} key={key} className={customCssClass} style={listStyle}>\n          {processedText}\n          {children}\n        </li>\n      );\n    case 'br':\n      return <br ref={el} key={key} className={customCssClass} />;\n    case 'img':\n      if (renderStyles?.width === 'auto') {\n        renderStyles.width = '';\n      }\n      if (renderStyles?.height === 'auto') {\n        renderStyles.height = '';\n      }\n      return <img src={src} ref={el} key={key} className={customCssClass} style={renderStyles} />;\n    case 'text':\n      // this is a special case similar to xml text nodes\n      // not expected to have children\n      return <Fragment>{processedText || '\\u00a0'}</Fragment>;\n    default:\n      return (\n        <Fragment>\n          {processedText}\n          {children}\n        </Fragment>\n      );\n  }\n};\n\nexport default Markup;\n"]}