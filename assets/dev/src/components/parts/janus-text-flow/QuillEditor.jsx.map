{"version":3,"file":"QuillEditor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-text-flow/QuillEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import Delta from 'quill-delta';\nimport React, { useEffect } from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport register from '../customElementWrapper';\nimport { convertJanusToQuill, convertQuillToJanus } from './quill-utils';\n\ninterface QuillEditorProps {\n  tree: any[];\n  html?: string;\n  onChange: (changes: any) => void;\n  onSave: (contents: any) => void;\n  onCancel: () => void;\n  showSaveCancelButtons?: boolean;\n  showimagecontrol?: boolean;\n}\n\nconst supportedFonts = ['Initial', 'Arial', 'Times New Roman', 'Sans Serif'];\n\n// get code friendly font names\nconst getFontName = (font: string) => {\n  return font.toLowerCase().replace(/\\s/g, '-');\n};\n\nconst FontAttributor = Quill.import('attributors/class/font');\nFontAttributor.whitelist = supportedFonts.map(getFontName);\nQuill.register(FontAttributor, true);\n\nconst FontSizeAttributor = Quill.import('attributors/style/size');\nFontSizeAttributor.whitelist = ['10px', '12px', '14px', '16px', '18px'];\nQuill.register(FontSizeAttributor, true);\n\nconst getCssForFonts = (fonts: string[]) => {\n  return fonts\n    .map(\n      (font) => `\n    .ql-snow .ql-picker.ql-font .ql-picker-label[data-value='${getFontName(font)}']::before,\n    .ql-snow .ql-picker.ql-font .ql-picker-item[data-value='${getFontName(font)}']::before\n    {\n      content: '${font}';\n      font-family: '${font}';\n    }\n    .ql-font-${getFontName(font)} {\n      font-family: '${font}';\n    }\n  `,\n    )\n    .join('\\n');\n};\n\nconst fontStyles = `${getCssForFonts(supportedFonts)}\n/* default normal size */\n.ql-container {\n  font-size: 14px !important;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"10px\"]::before {\n  content: 'Smaller (10px)';\n  font-size: 10px !important;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"12px\"]::before {\n  content: 'Small (12px)';\n  font-size: 12px !important;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"14px\"]::before {\n  content: 'Normal (14px)';\n  font-size: 14px !important;\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"16px\"]::before {\n  content: 'Large (16px)';\n  font-size: 16px !important;\n}\n\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=\"18px\"]::before {\n  content: 'Larger (18px)';\n  font-size: 18px !important;\n}\n`;\n\nconst customHandlers = {\n  adaptivity: function (value: string) {\n    const range = this.quill.getSelection();\n    let selectionValue = '';\n    if (range && range.length > 0) {\n      selectionValue = this.quill.getText(range.index, range.length);\n      if (selectionValue.charAt(0) === '{') {\n        selectionValue = selectionValue.substring(1, selectionValue.length - 1);\n      }\n    }\n    const expression = prompt('Enter the Expression', selectionValue);\n    if (expression) {\n      this.quill.insertText(range.index, `{${expression}}`);\n      this.quill.deleteText(range.index + expression.length + 2, expression.length + 2);\n    }\n  },\n  image: function (value: string) {\n    const range = this.quill.getSelection();\n    const expression = prompt('Enter the image URL', '');\n    if (expression) {\n      this.quill.insertEmbed(range.index, 'image', expression);\n    }\n  },\n};\n\nconst QuillEditor: React.FC<QuillEditorProps> = ({\n  tree,\n  html,\n  showSaveCancelButtons = false,\n  onChange,\n  onSave,\n  onCancel,\n  showimagecontrol = false,\n}) => {\n  const [contents, setContents] = React.useState<any>(tree);\n  const [delta, setDelta] = React.useState<any>(convertJanusToQuill(tree));\n\n  /*  console.log('[QuillEditor]', { tree, html }); */\n\n  useEffect(() => {\n    const convertedTree = convertJanusToQuill(tree);\n    /* console.log('[QuillEditor] convertedTree', convertedTree); */\n    setDelta(convertedTree);\n  }, [tree]);\n\n  const handleSave = React.useCallback(() => {\n    if (!contents) {\n      return;\n    }\n    onSave(contents);\n  }, [onSave, contents]);\n\n  const handleQuillChange = React.useCallback(\n    (content, delta, source, editor) => {\n      // console.log('quill changes', { content, delta, source, editor });\n      const janusText = convertQuillToJanus(new Delta(editor.getContents().ops));\n      // console.log('JANUS TEXT', janusText);\n      setContents(janusText);\n      onChange({ value: janusText });\n    },\n    [onChange],\n  );\n\n  return (\n    <React.Fragment>\n      <link rel=\"stylesheet\" href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" />\n      <style>{fontStyles}</style>\n      <div\n        style={{\n          maxWidth: 520,\n          height: '100%',\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          backgroundColor: '#fff',\n        }}\n      >\n        <ReactQuill\n          style={{ maxHeight: '100%' }}\n          modules={{\n            toolbar: {\n              container: [\n                ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n                ['blockquote' /* , 'code-block' */],\n\n                [{ list: 'ordered' }, { list: 'bullet' }],\n                [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n                [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n\n                [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n                [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n                [\n                  { font: FontAttributor.whitelist },\n                  { size: ['10px', '12px', '14px', '16px', '18px'] },\n                ],\n                [{ align: [] }],\n                ['link', 'adaptivity'],\n                ['clean'], // remove formatting button\n                showimagecontrol ? ['image'] : [],\n              ],\n              handlers: customHandlers,\n            },\n          }}\n          defaultValue={delta}\n          onChange={handleQuillChange}\n        />\n        {showSaveCancelButtons && (\n          <>\n            <button onClick={handleSave}>Save</button>\n            <button onClick={onCancel}>Cancel</button>\n          </>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport const tagName = 'tf-quill-editor';\n\nexport const registerEditor = () => {\n  if (!customElements.get(tagName)) {\n    register(QuillEditor, tagName, ['tree', 'html', 'showimagecontrol'], {\n      shadow: false, // shadow dom breaks the quill toolbar\n      customEvents: {\n        onChange: `${tagName}-change`,\n        onSave: `${tagName}-save`,\n        onCancel: `${tagName}-cancel`,\n      },\n      attrs: {\n        tree: {\n          json: true,\n        },\n      },\n    });\n  }\n};\n"]}