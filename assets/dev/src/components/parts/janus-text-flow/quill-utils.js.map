{"version":3,"file":"quill-utils.js","sourceRoot":"","sources":["../../../../../src/components/parts/janus-text-flow/quill-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import Delta from 'quill-delta';\nimport { CSSProperties } from 'react';\n\ninterface JanusMarkupNode {\n  tag: string;\n  href?: string;\n  style: CSSProperties;\n  children: JanusMarkupNode[];\n  text?: string;\n  customCssClass?: string;\n  src?: string;\n}\n\nconst appendToStringProperty = (append: string, str?: string) => {\n  if (!str) {\n    return append;\n  }\n  return `${str} ${append}`;\n};\n\nconst convertFontName = (fontCode: string) => {\n  const result = fontCode\n    .split('-')\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join(' ');\n  return result;\n};\n\nexport const convertQuillToJanus = (delta: Delta) => {\n  const doc = new Delta().compose(delta);\n  const nodes: JanusMarkupNode[] = [];\n  let listParent: JanusMarkupNode | null = null;\n  doc.eachLine((line, attrs) => {\n    const nodeStyle: CSSProperties = {};\n\n    const node: JanusMarkupNode = {\n      tag: 'p',\n      style: nodeStyle,\n      children: [],\n    };\n\n    if (attrs.fontSize) {\n      nodeStyle.fontSize = attrs.fontSize;\n    }\n\n    if (attrs.indent) {\n      nodeStyle.paddingLeft = `${attrs.indent * 3}em`;\n      node.customCssClass = appendToStringProperty(\n        `ql-indent-${attrs.indent}`,\n        node.customCssClass,\n      );\n    }\n\n    if (attrs.align) {\n      nodeStyle.textAlign = attrs.align;\n    }\n\n    if (attrs.list) {\n      if (!listParent) {\n        listParent = {\n          tag: attrs.list === 'ordered' ? 'ol' : 'ul',\n          style: {},\n          children: [],\n        };\n        nodes.push(listParent);\n      }\n      node.tag = 'li';\n    } else if (listParent) {\n      listParent = null;\n    }\n\n    if (attrs.blockquote) {\n      node.tag = 'blockquote';\n    }\n\n    if (attrs.header) {\n      node.tag = `h${attrs.header}`;\n    }\n\n    line.forEach((op) => {\n      if (typeof op.insert === 'object') {\n        const imageDetails: any = op.insert;\n        const child: JanusMarkupNode = {\n          tag: 'img',\n          style: {\n            height: '100%',\n            width: '100%',\n          },\n          src: `${imageDetails.image}`,\n          children: [],\n        };\n        node.children.push(child);\n      } else if (typeof op.insert === 'string') {\n        const style: any = {};\n        if (op.attributes) {\n          if (op.attributes.font) {\n            style.fontFamily = convertFontName(op.attributes.font);\n          }\n          if (op.attributes.bold) {\n            style.fontWeight = 'bold';\n          }\n          if (op.attributes.italic) {\n            style.fontStyle = 'italic';\n          }\n          if (op.attributes.size) {\n            style.fontSize = op.attributes.size;\n          }\n          if (op.attributes.underline) {\n            style.textDecoration = appendToStringProperty('underline', style.textDecoration);\n          }\n          if (op.attributes.strike) {\n            style.textDecoration = appendToStringProperty('line-through', style.textDecoration);\n          }\n          if (op.attributes.color) {\n            style.color = op.attributes.color;\n          }\n          if (op.attributes.background) {\n            style.backgroundColor = op.attributes.background;\n          }\n        }\n        const child: JanusMarkupNode = {\n          tag: 'span',\n          style,\n          children: [\n            {\n              tag: 'text',\n              style: {},\n              text: op.insert,\n              children: [],\n            },\n          ],\n        };\n        if (style.fontFamily) {\n          child.customCssClass = appendToStringProperty(\n            `ql-font-${op.attributes?.font}`,\n            child.customCssClass,\n          );\n        }\n        if (op.attributes?.script) {\n          if (op.attributes.script === 'sub') {\n            child.tag = 'sub';\n          }\n          if (op.attributes.script === 'super') {\n            child.tag = 'sup';\n          }\n        }\n        if (op.attributes?.link) {\n          child.tag = 'a';\n          child.href = op.attributes.link;\n        }\n        node.children.push(child);\n      }\n    });\n\n    if (listParent) {\n      listParent.children.push(node);\n    } else {\n      nodes.push(node);\n    }\n  });\n\n  /* console.log('Q -> J', { doc, nodes }); */\n\n  return nodes;\n};\n\nconst processJanusChildren = (node: JanusMarkupNode, doc: Delta, parentAttrs: any = {}) => {\n  const attrs: any = {};\n  if (node.style?.fontWeight === 'bold') {\n    attrs.bold = true;\n  }\n  if (node.style?.fontSize) {\n    let size = node.style.fontSize;\n    if (typeof size === 'number' || !size.endsWith('px')) {\n      size = `${size}px`;\n    }\n    attrs.size = size;\n  }\n  if (node.style?.textDecoration) {\n    if ((node.style.textDecoration as string).includes('underline')) {\n      attrs.underline = true;\n    }\n    if ((node.style.textDecoration as string).includes('line-through')) {\n      attrs.strike = true;\n    }\n  }\n  if (node.style?.fontStyle === 'italic') {\n    attrs.italic = true;\n  }\n  if (node.style?.color) {\n    attrs.color = node.style.color;\n  }\n  if (node.style?.backgroundColor) {\n    attrs.background = node.style.backgroundColor;\n  }\n  if (node.href) {\n    attrs.link = node.href;\n  }\n  if (node.tag === 'sub') {\n    attrs.script = 'sub';\n  }\n  if (node.tag === 'sup') {\n    attrs.script = 'super';\n  }\n\n  if (node.children && node.children.length && node.children[0].tag === 'text') {\n    const textNode = node.children[0];\n    doc.insert(textNode.text as string, { ...parentAttrs, ...attrs });\n  } else {\n    node.children.forEach((child, index) => {\n      const line = new Delta();\n      if (blockTags.includes(child.tag) || child.style?.textAlign) {\n        if ((child.tag === 'p' && index > 0) || child.tag !== 'p') {\n          const lineAttrs: any = {};\n          if (child.tag.startsWith('h')) {\n            lineAttrs.header = parseInt(child.tag.substring(1), 10);\n          }\n          if (child.tag === 'blockquote') {\n            lineAttrs.blockquote = true;\n          }\n          if (child.tag === 'ol') {\n            parentAttrs.list = 'ordered';\n          }\n          if (child.tag === 'ul') {\n            parentAttrs.list = 'bullet';\n          }\n          if (child.tag === 'li') {\n            if (index === 0) {\n              doc.insert('\\n');\n            }\n            lineAttrs.list = parentAttrs.list;\n          }\n          if (child.style?.textAlign) {\n            lineAttrs.align = child.style.textAlign;\n          }\n          if (child.tag === 'img') {\n            doc.insert({ image: child.src });\n          }\n          line.insert('\\n', lineAttrs);\n        }\n      }\n      const childLine = processJanusChildren(child, new Delta(), attrs);\n      doc = line.compose(childLine).compose(doc);\n    });\n  }\n  return doc;\n};\n\nconst blockTags = ['p', 'blockquote', 'ol', 'ul', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'img'];\n\nexport const convertJanusToQuill = (nodes: JanusMarkupNode[]) => {\n  let doc = new Delta();\n  const parentAttrs: any = {};\n  nodes.forEach((node, index) => {\n    const line = new Delta();\n    if (blockTags.includes(node.tag) || node.style?.textAlign) {\n      if ((node.tag === 'p' && index > 0) || node.tag !== 'p') {\n        const attrs: any = {};\n        if (node.tag.startsWith('h')) {\n          attrs.header = parseInt(node.tag.substring(1), 10);\n        }\n        if (node.tag === 'blockquote') {\n          attrs.blockquote = true;\n        }\n        if (node.tag === 'ol') {\n          parentAttrs.list = 'ordered';\n        }\n        if (node.tag === 'ul') {\n          parentAttrs.list = 'bullet';\n        }\n        if (node.tag === 'li') {\n          attrs.list = parentAttrs.list;\n        }\n        if (node.style?.textAlign) {\n          if (index === 1) {\n            doc.insert('\\n');\n          }\n          attrs.align = node.style.textAlign;\n        }\n        line.insert('\\n', attrs);\n      }\n    }\n    const childLine = processJanusChildren(node, new Delta(), parentAttrs);\n    doc = line.compose(childLine).compose(doc);\n  });\n\n  /*   console.log('J -> Q', { nodes, doc }); */\n\n  return doc;\n};\n"]}