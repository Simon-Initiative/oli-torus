{"version":3,"file":"TextFlowAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-text-flow/TextFlowAuthor.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  NotificationType,\n  subscribeToNotification,\n} from 'apps/delivery/components/NotificationContext';\nimport chroma from 'chroma-js';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { clone, parseBoolean } from 'utils/common';\nimport guid from 'utils/guid';\nimport { AuthorPartComponentProps } from '../types/parts';\nimport Markup from './Markup';\nimport { registerEditor, tagName as quillEditorTagName } from './QuillEditor';\nimport { TextFlowModel } from './schema';\n\nexport interface MarkupTree {\n  tag: string;\n  href?: string;\n  src?: string;\n  target?: string;\n  style?: any;\n  text?: string;\n  children?: MarkupTree[];\n  customCssClass?: string;\n}\n\nexport const getStylesToOverwrite = (node: MarkupTree, child: MarkupTree, fontSize?: any) => {\n  const style: any = {};\n  if (!node.style) {\n    return style;\n  }\n  if (\n    (node.style.styleName === 'Heading' || node.style.styleName === 'Title') &&\n    node.children?.length === 1 &&\n    child.tag === 'span'\n  ) {\n    // PMP-526\n    style.backgroundColor = '';\n  }\n  if (node.tag === 'p' && child.tag === 'span' && child.style.color === '#000000') {\n    style.color = 'inherit';\n  }\n  if (!(child.style && child.style.fontSize) && fontSize) {\n    style.fontSize = `${fontSize}px`;\n  }\n  return style;\n};\n\nexport const renderFlow = (\n  key: string,\n  treeNode: MarkupTree,\n  styleOverrides: any,\n  state: any = {},\n  fontSize?: any,\n  specialTag?: string,\n) => {\n  // clone styles\n  const styles: any = { ...treeNode.style };\n  // loop override styles\n  Object.keys(styleOverrides).forEach((s) => {\n    // override styles\n    styles[s] = styleOverrides[s];\n  });\n  // if style have 'baselineShift = superscript' or 'baselineShift = subscript'\n  // need to handle them separately\n  let customTag = '';\n  if (styles?.baselineShift === 'superscript') {\n    customTag = 'sup';\n  } else if (styles?.baselineShift === 'subscript') {\n    customTag = 'sub';\n  }\n\n  // disable hyperlinks and replace with a faux hyperlink\n  // because we don't want to navigate in authoring mode\n  if (treeNode.tag === 'a') {\n    specialTag = 'span';\n    styles.color = '#0000ff';\n    styles.textDecoration = 'underline';\n  }\n\n  return (\n    <Markup\n      key={key}\n      tag={specialTag || treeNode.tag}\n      href={treeNode.href}\n      src={treeNode.src}\n      target={treeNode.target}\n      style={styles}\n      text={treeNode.text}\n      state={state}\n      customCssClass={treeNode.customCssClass}\n      displayRawText={true}\n    >\n      {treeNode.children &&\n        treeNode.children.map((child, index) => {\n          return renderFlow(\n            `${key}_${index}`,\n            child,\n            getStylesToOverwrite(treeNode, child, fontSize),\n            state,\n            fontSize,\n            customTag,\n          );\n        })}\n    </Markup>\n  );\n};\n\n// eslint-disable-next-line react/display-name\nconst Editor: React.FC<any> = React.memo(({ html, tree, portal }) => {\n  const quillProps: { tree?: any; html?: any } = {};\n  if (tree) {\n    quillProps.tree = JSON.stringify(tree);\n  }\n  if (html) {\n    quillProps.html = html;\n  }\n  /* console.log('E RERENDER', { html, tree, portal }); */\n  const E = () => (\n    <div style={{ padding: 20 }}>{React.createElement(quillEditorTagName, quillProps)}</div>\n  );\n\n  return portal && ReactDOM.createPortal(<E />, portal);\n});\n\nconst TextFlowAuthor: React.FC<AuthorPartComponentProps<TextFlowModel>> = (props) => {\n  const { configuremode, onConfigure, onCancelConfigure, onSaveConfigure } = props;\n  const [ready, setReady] = useState<boolean>(false);\n  const id: string = props.id;\n  const [inConfigureMode, setInConfigureMode] = useState<boolean>(parseBoolean(configuremode));\n\n  const htmlPreviewRef = useRef<any>(null);\n  const [htmlPreview, setHtmlPreview] = useState<string>('');\n\n  const [model, setModel] = useState<TextFlowModel>(props.model);\n  const [textNodes, setTextNodes] = useState<any[]>(props.model.nodes);\n\n  useEffect(() => {\n    setModel(props.model);\n  }, [props.model]);\n\n  useEffect(() => {\n    setInConfigureMode(parseBoolean(configuremode));\n  }, [configuremode]);\n\n  const initialize = useCallback(async (pModel) => {\n    setReady(true);\n  }, []);\n\n  useEffect(() => {\n    initialize(model);\n  }, []);\n\n  const {\n    x = 0,\n    y = 0,\n    width,\n    z = 0,\n    customCssClass,\n    nodes,\n    palette,\n    fontSize,\n    height,\n    overrideWidth = true,\n    overrideHeight = false,\n  } = model;\n\n  const styles: any = {\n    wordWrap: 'break-word',\n    lineHeight: 'inherit',\n  };\n  if (overrideWidth) {\n    styles.width = width;\n  }\n  if (overrideHeight) {\n    styles.height = height;\n  }\n  if (fontSize) {\n    styles.fontSize = `${fontSize}px`;\n  }\n\n  if (palette) {\n    if (palette.useHtmlProps) {\n      styles.backgroundColor = palette.backgroundColor;\n      styles.borderColor = palette.borderColor;\n      styles.borderWidth = palette.borderWidth;\n      styles.borderStyle = palette.borderStyle;\n      styles.borderRadius = palette.borderRadius;\n    } else {\n      styles.borderWidth = `${palette.lineThickness ? palette.lineThickness + 'px' : 0}`;\n      styles.borderRadius = 0;\n      styles.borderStyle = palette.lineStyle === 0 ? 'none' : 'solid';\n      let borderColor = 'transparent';\n      if (palette.lineColor! >= 0) {\n        borderColor = chroma(palette.lineColor || 0)\n          .alpha(palette.lineAlpha || 0)\n          .css();\n      }\n      styles.borderColor = borderColor;\n\n      let bgColor = 'transparent';\n      if (palette.fillColor! >= 0) {\n        bgColor = chroma(palette.fillColor || 0)\n          .alpha(palette.fillAlpha || 0)\n          .css();\n      }\n      styles.backgroundColor = bgColor;\n    }\n  }\n\n  // TODO: preprocess model to find required variables and/or expressions\n  // using onInit to wait for initial state to be sent, and hold rendering\n  // until isReady (and also then fire onReady)\n  // send pre-calculated map of required values to Markup\n\n  useEffect(() => {\n    if (!ready) {\n      return;\n    }\n    props.onReady({ id, responses: [] });\n  }, [ready]);\n\n  // due to custom elements, objects will be JSON\n  let tree: MarkupTree[] = [];\n  if (nodes && typeof nodes === 'string') {\n    tree = JSON.parse(nodes as string) as MarkupTree[];\n  } else if (Array.isArray(nodes)) {\n    tree = nodes;\n  }\n  const styleOverrides: any = {};\n  if (width) {\n    styleOverrides.width = width;\n  }\n  if (fontSize) {\n    styleOverrides.fontSize = `${fontSize}px`;\n  }\n\n  useEffect(() => {\n    registerEditor();\n  }, []);\n\n  useEffect(() => {\n    const handleEditorSave = (e: any) => {\n      if (!inConfigureMode) {\n        return;\n      } // not mine\n      const { payload, callback } = e.detail;\n      // console.log('TF EDITOR SAVE', { payload, callback, props });\n      const modelClone = clone(model);\n      modelClone.nodes = payload;\n      // optimistic update\n      setModel(modelClone);\n      onSaveConfigure({\n        id,\n        snapshot: modelClone,\n      });\n    };\n\n    const handleEditorCancel = () => {\n      if (!inConfigureMode) {\n        return;\n      } // not mine\n      // console.log('TF EDITOR CANCEL');\n      setInConfigureMode(false);\n      onCancelConfigure({ id });\n    };\n\n    const handleEditorChange = (e: any) => {\n      if (!inConfigureMode) {\n        return;\n      } // not mine\n      const { payload, callback } = e.detail;\n      // console.log('TF EDITOR CHANGE', { payload, callback });\n      setTextNodes(payload.value);\n    };\n\n    if (inConfigureMode) {\n      document.addEventListener(`${quillEditorTagName}-change`, handleEditorChange);\n      document.addEventListener(`${quillEditorTagName}-save`, handleEditorSave);\n      document.addEventListener(`${quillEditorTagName}-cancel`, handleEditorCancel);\n    }\n\n    return () => {\n      document.removeEventListener(`${quillEditorTagName}-change`, handleEditorChange);\n      document.removeEventListener(`${quillEditorTagName}-save`, handleEditorSave);\n      document.removeEventListener(`${quillEditorTagName}-cancel`, handleEditorCancel);\n    };\n  }, [ready, inConfigureMode, model]);\n\n  const handleNotificationSave = useCallback(async () => {\n    /* console.log('TF:NOTIFYSAVE', { id, model, textNodes }); */\n    const modelClone = clone(model);\n    modelClone.nodes = textNodes;\n    await onSaveConfigure({ id, snapshot: modelClone });\n    setInConfigureMode(false);\n  }, [model, textNodes]);\n\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CONFIGURE,\n      NotificationType.CONFIGURE_SAVE,\n      NotificationType.CONFIGURE_CANCEL,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        /* console.log(`${notificationType.toString()} notification event [PopupAuthor]`, payload); */\n        if (!payload) {\n          // if we don't have anything, we won't even have an id to know who it's for\n          // for these events we need something, it's not for *all* of them\n          return;\n        }\n        switch (notificationType) {\n          case NotificationType.CONFIGURE:\n            {\n              const { partId, configure } = payload;\n              if (partId === id) {\n                /* console.log('TF:NotificationType.CONFIGURE', { partId, configure }); */\n                // if it's not us, then we shouldn't be configuring\n                setInConfigureMode(configure);\n                if (configure) {\n                  onConfigure({ id, configure, context: { fullscreen: false } });\n                }\n              }\n            }\n            break;\n          case NotificationType.CONFIGURE_SAVE:\n            {\n              const { id: partId } = payload;\n              if (partId === id) {\n                /* console.log('TF:NotificationType.CONFIGURE_SAVE', { partId }); */\n                handleNotificationSave();\n              }\n            }\n            break;\n          case NotificationType.CONFIGURE_CANCEL:\n            {\n              const { id: partId } = payload;\n              if (partId === id) {\n                /* console.log('TF:NotificationType.CONFIGURE_CANCEL', { partId }); */\n                setInConfigureMode(false);\n              }\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify, handleNotificationSave]);\n\n  const [portalEl, setPortalEl] = useState<HTMLElement | null>(null);\n  useEffect(() => {\n    // timeout to give modal a moment to load\n    setTimeout(() => {\n      const el = document.getElementById(props.portal);\n      // console.log('portal changed', { el, p: props.portal });\n      if (el) {\n        setPortalEl(el);\n      }\n    }, 10);\n  }, [inConfigureMode, props.portal]);\n\n  /* console.log('TF RENDER', { id, htmlPreview }); */\n\n  if (htmlPreviewRef.current) {\n    const latestPreview = htmlPreviewRef.current?.innerHTML || '';\n    if (latestPreview !== htmlPreview) {\n      setHtmlPreview(latestPreview);\n    }\n  }\n\n  const renderIt =\n    inConfigureMode && portalEl ? (\n      <Editor html={htmlPreview} tree={tree} portal={portalEl} />\n    ) : (\n      <React.Fragment>\n        <style>\n          {/*\n        note these custom styles are for dealing with KIP / legacy content * that are applied\n        we may need to do something else for the new theme and/or the themeless?\n      */}\n          {`\n        .text-flow-authoring-preview {\n          font-size: 13px;\n        }\n        .text-flow-authoring-preview p {\n          margin: 0;\n        }\n      `}\n        </style>\n        <div ref={htmlPreviewRef} className=\"text-flow-authoring-preview\" style={styles}>\n          {tree?.map((subtree: MarkupTree) =>\n            renderFlow(`textflow-${guid()}`, subtree, styleOverrides, {}, fontSize),\n          )}\n        </div>\n      </React.Fragment>\n    );\n\n  return ready ? renderIt : null;\n};\n\nexport const tagName = 'janus-text-flow';\n\nexport default TextFlowAuthor;\n"]}