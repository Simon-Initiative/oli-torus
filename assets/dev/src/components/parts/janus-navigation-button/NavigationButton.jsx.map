{"version":3,"file":"NavigationButton.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-navigation-button/NavigationButton.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { CSSProperties, useCallback, useEffect, useState } from 'react';\nimport { CapiVariableTypes } from '../../../adaptivity/capi';\nimport {\n  NotificationType,\n  subscribeToNotification,\n} from '../../../apps/delivery/components/NotificationContext';\nimport { contexts } from '../../../types/applicationContext';\nimport { parseBoolean } from '../../../utils/common';\nimport { PartComponentProps } from '../types/parts';\nimport { NavButtonModel } from './schema';\n\nconst NavigationButton: React.FC<PartComponentProps<NavButtonModel>> = (props) => {\n  const [state, setState] = useState<any[]>(Array.isArray(props.state) ? props.state : []);\n  const [model, setModel] = useState<any>(Array.isArray(props.model) ? props.model : {});\n  const [ready, setReady] = useState<boolean>(false);\n  const id: string = props.id;\n\n  const [buttonSelected, setButtonSelected] = useState(false);\n  const [buttonTextColor, setButtonTextColor] = useState('');\n  const [accessibilityText, setAccessibilityText] = useState('');\n  const [backgroundColor, setBackgroundColor] = useState('');\n  const [buttonVisible, setButtonVisible] = useState(true);\n  // BS: why isn't transparent a bool?\n  const [buttonTransparent, setButtonTransparent] = useState('');\n  const [buttonEnabled, setButtonEnabled] = useState(true);\n  const [buttonTitle, setButtonTitle] = useState('');\n  const [cssClass, setCssClass] = useState('');\n\n  const initialize = useCallback(async (pModel) => {\n    // set defaults\n    const dEnabled = typeof pModel.enabled === 'boolean' ? pModel.enabled : enabled;\n    setButtonEnabled(dEnabled);\n\n    const dVisible = typeof pModel.visible === 'boolean' ? pModel.visible : buttonVisible;\n    setButtonVisible(dVisible);\n\n    const dCssClass = pModel.customCssClass || '';\n    setCssClass(dCssClass);\n\n    const dTitle = pModel.title || '';\n    setButtonTitle(dTitle);\n\n    const dAccessibilityText = pModel.ariaLabel || accessibilityText;\n    setAccessibilityText(dAccessibilityText);\n\n    const dSelected = parseBoolean(pModel.selected);\n    setButtonSelected(dSelected);\n\n    const dBackgroundColor = pModel.buttonColor || '';\n    setBackgroundColor(dBackgroundColor);\n\n    const dButtonTextColor = pModel.textColor || '';\n    setButtonTextColor(dButtonTextColor);\n\n    const dTransparent = pModel.transparent || '';\n    setButtonTransparent(dTransparent);\n\n    const initResult = await props.onInit({\n      id,\n      responses: [\n        {\n          key: 'Selected',\n          type: CapiVariableTypes.BOOLEAN,\n          value: dSelected,\n        },\n        {\n          key: 'selected',\n          type: CapiVariableTypes.BOOLEAN,\n          value: dSelected,\n        },\n        {\n          key: 'visible',\n          type: CapiVariableTypes.BOOLEAN,\n          value: dVisible,\n        },\n        {\n          key: 'enabled',\n          type: CapiVariableTypes.BOOLEAN,\n          value: dEnabled,\n        },\n        {\n          key: 'title',\n          type: CapiVariableTypes.STRING,\n          value: dTitle,\n        },\n        {\n          key: 'textColor',\n          type: CapiVariableTypes.STRING,\n          value: dButtonTextColor,\n        },\n        {\n          key: 'backgroundColor',\n          type: CapiVariableTypes.STRING,\n          value: dBackgroundColor,\n        },\n        {\n          key: 'transparent',\n          type: CapiVariableTypes.STRING,\n          value: dTransparent,\n        },\n        {\n          key: 'accessibilityText',\n          type: CapiVariableTypes.STRING,\n          value: dAccessibilityText,\n        },\n        {\n          key: 'customCssClass',\n          type: CapiVariableTypes.STRING,\n          value: dCssClass,\n        },\n      ],\n    });\n\n    // result of init has a state snapshot with latest (init state applied)\n    const currentStateSnapshot = initResult.snapshot;\n    const sEnabled = currentStateSnapshot[`stage.${id}.enabled`];\n    if (sEnabled !== undefined) {\n      setButtonEnabled(sEnabled);\n    }\n    const sCssClass = currentStateSnapshot[`stage.${id}.customCssClass`];\n    if (sCssClass !== undefined) {\n      setCssClass(sCssClass);\n    }\n    const sVisible = currentStateSnapshot[`stage.${id}.visible`];\n    if (sVisible !== undefined) {\n      setButtonVisible(sVisible);\n    }\n\n    const sTitle = currentStateSnapshot[`stage.${id}.title`];\n    if (sTitle !== undefined) {\n      setButtonTitle(sTitle);\n    }\n\n    const sAccessibilityText = currentStateSnapshot[`stage.${id}.ariaLabel`];\n    if (sAccessibilityText !== undefined) {\n      setAccessibilityText(sAccessibilityText);\n    }\n\n    let sSelected = currentStateSnapshot[`stage.${id}.Selected`];\n    if (sSelected === undefined) {\n      sSelected = currentStateSnapshot[`stage.${id}.selected`];\n    }\n    if (sSelected !== undefined) {\n      setButtonSelected(parseBoolean(sSelected));\n    }\n\n    const sBackgroundColor = currentStateSnapshot[`stage.${id}.buttonColor`];\n    if (sBackgroundColor !== undefined) {\n      setBackgroundColor(sBackgroundColor);\n    }\n\n    const sButtonTextColor = currentStateSnapshot[`stage.${id}.textColor`];\n    if (sButtonTextColor !== undefined) {\n      setButtonTextColor(sButtonTextColor);\n    }\n\n    const sTransparent = currentStateSnapshot[`stage.${id}.transparent`];\n    if (sTransparent !== undefined) {\n      setButtonTransparent(sTransparent);\n    }\n    //Instead of hardcoding REVIEW, we can make it an global interface and then importa that here.\n    if (initResult.context.mode === contexts.REVIEW) {\n      setButtonEnabled(false);\n    }\n    setReady(true);\n  }, []);\n\n  useEffect(() => {\n    let pModel;\n    let pState;\n    if (typeof props?.model === 'string') {\n      try {\n        pModel = JSON.parse(props.model);\n        setModel(pModel);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (typeof props?.state === 'string') {\n      try {\n        pState = JSON.parse(props.state);\n        setState(pState);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (!pModel) {\n      return;\n    }\n    initialize(pModel);\n  }, [props]);\n\n  useEffect(() => {\n    if (!ready) {\n      return;\n    }\n    props.onReady({ id, responses: [] });\n  }, [ready]);\n\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CHECK_STARTED,\n      NotificationType.CHECK_COMPLETE,\n      NotificationType.CONTEXT_CHANGED,\n      NotificationType.STATE_CHANGED,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        console.log(`${notificationType.toString()} notification handled [Nav Button]`, payload);\n        switch (notificationType) {\n          case NotificationType.CHECK_STARTED:\n            // nothing to do\n            break;\n          case NotificationType.CHECK_COMPLETE:\n            //as per the comments in the  ticket - At the end of a check event, the platform will set the .Selected property to false.\n            //This is so that on screens where the nav button is used to trigger some action on the current screen, and not navigate to a different screen,\n            //the button will reset\n            setButtonSelected(false);\n            props.onSave({\n              id: `${id}`,\n              responses: [\n                {\n                  key: 'Selected',\n                  type: CapiVariableTypes.BOOLEAN,\n                  value: false,\n                },\n                {\n                  key: 'selected',\n                  type: CapiVariableTypes.BOOLEAN,\n                  value: false,\n                },\n              ],\n            });\n            break;\n          case NotificationType.STATE_CHANGED:\n            {\n              const { mutateChanges: changes } = payload;\n              const sTitle = changes[`stage.${id}.title`];\n              if (sTitle !== undefined) {\n                setButtonTitle(sTitle);\n              }\n\n              const sTitles = changes[`stage.${id}.buttonTitles`];\n              if (sTitles !== undefined) {\n                setButtonTitle(sTitles[0]);\n              }\n\n              let sSelected = changes[`stage.${id}.Selected`];\n              if (sSelected === undefined) {\n                sSelected = changes[`stage.${id}.selected`];\n              }\n              if (sSelected !== undefined) {\n                setButtonSelected(parseBoolean(sSelected));\n              }\n\n              const sVisible = changes[`stage.${id}.visible`];\n              if (sVisible !== undefined) {\n                setButtonVisible(sVisible);\n              }\n\n              const sEnabled = changes[`stage.${id}.enabled`];\n              if (sEnabled !== undefined) {\n                setButtonEnabled(sEnabled);\n              }\n\n              const sButtonTextColor = changes[`stage.${id}.textColor`];\n              if (sButtonTextColor !== undefined) {\n                setButtonTextColor(sButtonTextColor);\n              }\n\n              const sAccessibilityText = changes[`stage.${id}.accessibilityText`];\n              if (sAccessibilityText !== undefined) {\n                setAccessibilityText(sAccessibilityText);\n              }\n\n              const sBackgroundColor = changes[`stage.${id}.backgroundColor`];\n              if (sBackgroundColor !== undefined) {\n                setBackgroundColor(sBackgroundColor);\n              }\n\n              const sTransparent = changes[`stage.${id}.transparent`];\n              if (sTransparent !== undefined) {\n                setButtonTransparent(sTransparent);\n              }\n            }\n            break;\n          case NotificationType.CONTEXT_CHANGED:\n            {\n              const { initStateFacts: changes } = payload;\n              const sTitle = changes[`stage.${id}.title`];\n              if (sTitle !== undefined) {\n                setButtonTitle(sTitle);\n              }\n\n              const sTitles = changes[`stage.${id}.buttonTitles`];\n              if (sTitles !== undefined) {\n                setButtonTitle(sTitles[0]);\n              }\n\n              let sSelected = changes[`stage.${id}.Selected`];\n              if (sSelected === undefined) {\n                sSelected = changes[`stage.${id}.selected`];\n              }\n              if (sSelected !== undefined) {\n                setButtonSelected(parseBoolean(sSelected));\n              }\n\n              const sVisible = changes[`stage.${id}.visible`];\n              if (sVisible !== undefined) {\n                setButtonVisible(sVisible);\n              }\n\n              const sEnabled = changes[`stage.${id}.enabled`];\n              if (sEnabled !== undefined) {\n                setButtonEnabled(sEnabled);\n              }\n\n              const sButtonTextColor = changes[`stage.${id}.textColor`];\n              if (sButtonTextColor !== undefined) {\n                setButtonTextColor(sButtonTextColor);\n              }\n\n              const sAccessibilityText = changes[`stage.${id}.accessibilityText`];\n              if (sAccessibilityText !== undefined) {\n                setAccessibilityText(sAccessibilityText);\n              }\n\n              const sBackgroundColor = changes[`stage.${id}.backgroundColor`];\n              if (sBackgroundColor !== undefined) {\n                setBackgroundColor(sBackgroundColor);\n              }\n\n              const sTransparent = changes[`stage.${id}.transparent`];\n              if (sTransparent !== undefined) {\n                setButtonTransparent(sTransparent);\n              }\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify]);\n\n  const {\n    title,\n    x = 0,\n    y = 0,\n    z = 0,\n    width,\n    height,\n    textColor,\n    buttonColor,\n    visible = true,\n    enabled = true,\n    ariaLabel,\n    transparent,\n    selected,\n  } = model;\n\n  const styles: CSSProperties = {\n    display: visible ? 'block' : 'none',\n    width,\n    height,\n  };\n\n  const janusButtonStyle: CSSProperties = {\n    width: width,\n  };\n  if (buttonTransparent) styles.opacity = 0;\n  if (buttonTextColor) {\n    styles.color = buttonTextColor;\n    janusButtonStyle.color = buttonTextColor;\n  }\n  // TODO: figure out how to handle custom colors on hover\n  if (backgroundColor) {\n    styles.backgroundColor = backgroundColor;\n    janusButtonStyle.backgroundColor = backgroundColor;\n  }\n\n  const handleButtonPress = () => {\n    props.onSubmit({\n      id: `${id}`,\n      responses: [\n        {\n          key: 'Selected',\n          type: CapiVariableTypes.BOOLEAN,\n          value: true,\n        },\n        {\n          key: 'selected',\n          type: CapiVariableTypes.BOOLEAN,\n          value: true,\n        },\n      ],\n    });\n  };\n\n  if (buttonSelected) {\n    setButtonSelected(false);\n    handleButtonPress();\n    props.onSave({\n      id: `${id}`,\n      responses: [\n        {\n          key: 'Selected',\n          type: CapiVariableTypes.BOOLEAN,\n          value: false,\n        },\n        {\n          key: 'selected',\n          type: CapiVariableTypes.BOOLEAN,\n          value: false,\n        },\n      ],\n    });\n  }\n\n  useEffect(() => {\n    //TODO commenting for now. Need to revisit once state structure logic is in place\n    //handleStateChange(state);\n  }, [state]);\n\n  const buttonProps = {\n    title: buttonTitle,\n    onClick: handleButtonPress,\n    'aria-label': ariaLabel,\n    disabled: !buttonEnabled,\n  };\n\n  return ready && buttonVisible ? (\n    <button data-janus-type={tagName} {...buttonProps} style={styles}>\n      {buttonTitle}\n    </button>\n  ) : null;\n};\n\nexport const tagName = 'janus-navigation-button';\n\nexport default NavigationButton;\n"]}