{"version":3,"file":"InputTextAuthor.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-input-text/InputTextAuthor.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAiB,SAAS,EAAE,MAAM,OAAO,CAAC;AAGxD,MAAM,eAAe,GAAuD,CAAC,KAAK,EAAE,EAAE;IACpF,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAE5B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAC7E,MAAM,MAAM,GAAkB;QAC5B,KAAK,EAAE,MAAM;QACb,6DAA6D;QAC7D,MAAM,EAAE,CAAC;KACV,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,qCAAqC;QACrC,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAChD;MAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,mBAAmB,CAAC,CACvC;QAAA,CAAC,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CACnD;MAAA,EAAE,KAAK,CACP;MAAA,CAAC,KAAK,CACJ,IAAI,CAAC,kBAAkB,CACvB,EAAE,CAAC,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAC7B,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,CAAC,MAAM,CAAC,CACpB,QAAQ,CAAC,CAAC,IAAI,CAAC,CACf,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,EAEvC;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,kBAAkB,CAAC;AAE1C,eAAe,eAAe,CAAC","sourcesContent":["import { AuthorPartComponentProps } from 'components/parts/types/parts';\nimport React, { CSSProperties, useEffect } from 'react';\nimport { InputTextModel } from './schema';\n\nconst InputTextAuthor: React.FC<AuthorPartComponentProps<InputTextModel>> = (props) => {\n  const { id, model } = props;\n\n  const { x, y, z, width, height, showLabel, label, prompt, fontSize } = model;\n  const styles: CSSProperties = {\n    width: '100%',\n    // height // TODO: only if the delivery component supports it\n    zIndex: z,\n  };\n\n  useEffect(() => {\n    // all activities *must* emit onReady\n    props.onReady({ id: `${props.id}` });\n  }, []);\n\n  return (\n    <div className={`short-text-input`} style={styles}>\n      <label htmlFor={`${id}-short-text-input`}>\n        {showLabel && label ? label : <span>&nbsp;</span>}\n      </label>\n      <input\n        name=\"janus-input-text\"\n        id={`${id}-short-text-input`}\n        type=\"text\"\n        placeholder={prompt}\n        disabled={true}\n        style={{ width: '100%', fontSize }}\n      />\n    </div>\n  );\n};\n\nexport const tagName = 'janus-input-text';\n\nexport default InputTextAuthor;\n"]}