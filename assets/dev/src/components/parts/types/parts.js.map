{"version":3,"file":"parts.js","sourceRoot":"","sources":["../../../../../src/components/parts/types/parts.ts"],"names":[],"mappings":"AAsFA,MAAM,CAAC,MAAM,mBAAmB,GAAG;IACjC,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,KAAK;IACb,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,IAAI;IACZ,SAAS,EAAE,IAAI;IACf,SAAS,EAAE,KAAK;CACjB,CAAC","sourcesContent":["export interface CustomProperties {\n  $schema?: string;\n  [key: string]: any;\n}\nexport interface JanusCustomCss extends CustomProperties {\n  customCssClass?: string;\n}\n\nexport interface JanusAbsolutePositioned extends CustomProperties {\n  x?: number;\n  y?: number;\n  z?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface AnyPartModel extends JanusCustomCss, JanusAbsolutePositioned {\n  [key: string]: any;\n}\n\nexport interface AnyPartComponent {\n  id: string;\n  type: string;\n  custom: AnyPartModel;\n}\n\nexport interface CapiVariable {\n  id: string;\n  key: string;\n  type: number;\n  value: any;\n}\n\nexport interface PartComponentProps<T extends CustomProperties> {\n  id: string;\n  type: string;\n  model: T;\n  state: any;\n  notify?: any;\n  className?: string;\n  onInit: (payload: any) => Promise<any>;\n  onReady: (payload: any) => Promise<any>;\n  onSave: (payload: any) => Promise<any>;\n  onSubmit: (payload: any) => Promise<any>;\n  onResize: (payload: any) => Promise<any>;\n  onGetData?: (payload: any) => Promise<any>;\n  onSetData?: (payload: any) => Promise<any>;\n}\n\nexport interface AuthorPartComponentProps<T extends CustomProperties>\n  extends PartComponentProps<T> {\n  editMode: boolean;\n  configuremode: boolean; // TODO fix case in custom element wrapper\n  portal: string;\n  onClick: (payload: any) => void;\n  onConfigure: (payload: any) => Promise<any>; // part wants to initiate configuration\n  onSaveConfigure: (payload: any) => Promise<any>;\n  onCancelConfigure: (payload: any) => Promise<any>;\n}\n\nexport interface CreationContext {\n  transform?: {\n    x: number;\n    y: number;\n    z: number;\n    width: number;\n    height: number;\n  };\n  [key: string]: any;\n}\n\nexport interface ColorPalette {\n  useHtmlProps: boolean;\n  backgroundColor: string;\n  borderColor: string;\n  borderRadius: number | string;\n  borderStyle: string;\n  borderWidth: number | string;\n  fillColor?: number;\n  fillAlpha?: number;\n  lineColor?: number;\n  lineAlpha?: number;\n  lineStyle?: number;\n  lineThickness?: number;\n}\n\nexport const defaultCapabilities = {\n  move: true,\n  copy: true,\n  resize: true,\n  rotate: false,\n  select: true,\n  delete: true,\n  duplicate: true,\n  configure: false,\n};\n"]}