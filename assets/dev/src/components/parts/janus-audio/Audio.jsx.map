{"version":3,"file":"Audio.jsx","sourceRoot":"","sources":["../../../../../src/components/parts/janus-audio/Audio.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { CSSProperties, useCallback, useEffect, useState } from 'react';\nimport { parseBool } from 'utils/common';\nimport { CapiVariableTypes } from '../../../adaptivity/capi';\nimport {\n  NotificationType,\n  subscribeToNotification,\n} from '../../../apps/delivery/components/NotificationContext';\nimport { PartComponentProps } from '../types/parts';\nimport { AudioModel } from './schema';\n\nconst Audio: React.FC<PartComponentProps<AudioModel>> = (props) => {\n  const [state, setState] = useState<any[]>(Array.isArray(props.state) ? props.state : []);\n  const [model, setModel] = useState<any>(Array.isArray(props.model) ? props.model : {});\n  const [ready, setReady] = useState<boolean>(false);\n  const id: string = props.id;\n  const [showControls, setShowControls] = useState(true);\n  const [classes, setClasses] = useState<any>('');\n\n  const initialize = useCallback(async (pModel) => {\n    // set defaults\n    const dCssClass = pModel.customCssClass || classes;\n    setClasses(dCssClass);\n\n    const dShowControls =\n      typeof pModel.showControls === 'boolean' ? pModel.showControls : showControls;\n    setShowControls(dShowControls);\n\n    const dStartTime = pModel.startTime || 0;\n    const dEndTime = pModel.endTime || '';\n\n    const initResult = await props.onInit({\n      id,\n      responses: [\n        {\n          key: 'hasStarted',\n          type: CapiVariableTypes.BOOLEAN,\n          value: false,\n        },\n        {\n          key: 'currentTime',\n          type: CapiVariableTypes.STRING,\n          value: dStartTime,\n        },\n        {\n          key: 'duration',\n          type: CapiVariableTypes.STRING,\n          value: '',\n        },\n        {\n          key: 'hasCompleted',\n          type: CapiVariableTypes.BOOLEAN,\n          value: false,\n        },\n        {\n          key: 'state',\n          type: CapiVariableTypes.STRING,\n          value: 'notStarted',\n        },\n      ],\n    });\n\n    // result of init has a state snapshot with latest (init state applied)\n    const currentStateSnapshot = initResult.snapshot;\n\n    const sCssClass = currentStateSnapshot[`stage.${id}.customCssClass`];\n    if (sCssClass !== undefined) {\n      setClasses(sCssClass);\n    }\n\n    const sAutoPlay = currentStateSnapshot[`stage.${id}.autoPlay`];\n    if (sAutoPlay !== undefined) {\n      setAudioAutoPlay(sAutoPlay);\n    }\n\n    const sEnableReplay = currentStateSnapshot[`stage.${id}.enableReplay`];\n    if (sEnableReplay !== undefined) {\n      setAudioEnableReplay(sEnableReplay);\n    }\n    setReady(true);\n  }, []);\n\n  useEffect(() => {\n    let pModel;\n    let pState;\n    if (typeof props?.model === 'string') {\n      try {\n        pModel = JSON.parse(props.model);\n        setModel(pModel);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (typeof props?.state === 'string') {\n      try {\n        pState = JSON.parse(props.state);\n        setState(pState);\n      } catch (err) {\n        // bad json, what do?\n      }\n    }\n    if (!pModel) {\n      return;\n    }\n    initialize(pModel);\n    setAudioAutoPlay(!!pModel.autoPlay);\n  }, [props]);\n\n  useEffect(() => {\n    if (!props.notify) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CHECK_STARTED,\n      NotificationType.CHECK_COMPLETE,\n      NotificationType.CONTEXT_CHANGED,\n      NotificationType.STATE_CHANGED,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        /* console.log(`${notificationType.toString()} notification handled [Audio]`, payload); */\n        switch (notificationType) {\n          case NotificationType.CHECK_STARTED:\n            // nothing to do\n            break;\n          case NotificationType.CHECK_COMPLETE:\n            // nothing to do\n            break;\n          case NotificationType.STATE_CHANGED:\n            {\n              const { mutateChanges: changes } = payload;\n              const sCustomCssClass = changes[`stage.${id}.customCssClass`];\n              if (sCustomCssClass !== undefined) {\n                setClasses(String(sCustomCssClass));\n              }\n              const sAutoPlay = changes[`stage.${id}.autoPlay`];\n              if (sAutoPlay !== undefined) {\n                setAudioAutoPlay(sAutoPlay);\n              }\n\n              const sEnableReplay = changes[`stage.${id}.enableReplay`];\n              if (sEnableReplay !== undefined) {\n                setAudioEnableReplay(sEnableReplay);\n              }\n\n              const sHasStarted = changes[`stage.${id}.hasStarted`];\n              if (sHasStarted !== undefined) {\n                setAudioIsPlayerStarted(sHasStarted);\n                props.onSave({\n                  id,\n                  responses: [\n                    {\n                      key: 'hasStarted',\n                      type: CapiVariableTypes.NUMBER,\n                      value: parseBool(sHasStarted),\n                    },\n                  ],\n                });\n              }\n\n              const sHasCompleted = changes[`stage.${id}.hasCompleted`];\n              if (sHasCompleted !== undefined) {\n                setAudioIsCompleted(sHasCompleted);\n                props.onSave({\n                  id,\n                  responses: [\n                    {\n                      key: 'hasCompleted',\n                      type: CapiVariableTypes.NUMBER,\n                      value: parseBool(sHasCompleted),\n                    },\n                  ],\n                });\n              }\n\n              const sCurrentTime = changes[`stage.${id}.currentTime`];\n              if (sCurrentTime !== undefined) {\n                setAudioCurrentTime(sCurrentTime);\n                props.onSave({\n                  id,\n                  responses: [\n                    {\n                      key: 'currentTime',\n                      type: CapiVariableTypes.NUMBER,\n                      value: sCurrentTime,\n                    },\n                  ],\n                });\n                const audio: any = document.getElementById(`audioTag-${id}`);\n                if (audio) {\n                  audio.currentTime = sCurrentTime;\n                }\n              }\n            }\n            break;\n          case NotificationType.CONTEXT_CHANGED:\n            {\n              const { initStateFacts: changes } = payload;\n              const sCustomCssClass = changes[`stage.${id}.customCssClass`];\n              if (sCustomCssClass !== undefined) {\n                setClasses(String(sCustomCssClass));\n              }\n              const sAutoPlay = changes[`stage.${id}.autoPlay`];\n              if (sAutoPlay !== undefined) {\n                setAudioAutoPlay(sAutoPlay);\n              }\n\n              const sEnableReplay = changes[`stage.${id}.enableReplay`];\n              if (sEnableReplay !== undefined) {\n                setAudioEnableReplay(sEnableReplay);\n              }\n\n              const sHasStarted = changes[`stage.${id}.hasStarted`];\n              if (sHasStarted !== undefined) {\n                setAudioIsPlayerStarted(sHasStarted);\n                props.onSave({\n                  id,\n                  responses: [\n                    {\n                      key: 'hasStarted',\n                      type: CapiVariableTypes.NUMBER,\n                      value: parseBool(sHasStarted),\n                    },\n                  ],\n                });\n              }\n\n              const sHasCompleted = changes[`stage.${id}.hasCompleted`];\n              if (sHasCompleted !== undefined) {\n                setAudioIsCompleted(sHasCompleted);\n                props.onSave({\n                  id,\n                  responses: [\n                    {\n                      key: 'hasCompleted',\n                      type: CapiVariableTypes.NUMBER,\n                      value: parseBool(sHasCompleted),\n                    },\n                  ],\n                });\n              }\n            }\n            break;\n        }\n      };\n      const unsub = subscribeToNotification(props.notify, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [props.notify]);\n\n  useEffect(() => {\n    if (!ready) {\n      return;\n    }\n    props.onReady({ id, responses: [] });\n  }, [ready]);\n\n  const {\n    x,\n    y,\n    z,\n    width,\n    height,\n    src,\n    alt,\n    customCssClass,\n    triggerCheck,\n    autoPlay,\n    startTime,\n    endTime,\n    enableReplay,\n    subtitles,\n  } = model;\n  const [audioIsPlayerStarted, setAudioIsPlayerStarted] = useState(false);\n  const [audioIsCompleted, setAudioIsCompleted] = useState(false);\n  const [audioAutoPlay, setAudioAutoPlay] = useState(autoPlay || false);\n  const [audioEnableReplay, setAudioEnableReplay] = useState(enableReplay || true);\n  const [audioCurrentTime, setAudioCurrentTime] = useState(0);\n  const audioStyles: CSSProperties = {\n    /* position: 'absolute',\n    top: y,\n    left: x,\n    width,\n    height,\n    zIndex: z, */\n    width,\n    outline: 'none',\n    filter: 'sepia(20%) saturate(70%) grayscale(1) contrast(99%) invert(12%)',\n  };\n\n  useEffect(() => {\n    const styleChanges: any = {};\n    if (width !== undefined) {\n      styleChanges.width = { value: width as number };\n    }\n    if (height != undefined) {\n      styleChanges.height = { value: height as number };\n    }\n\n    props.onResize({ id: `${id}`, settings: styleChanges });\n  }, [width, height]);\n\n  let finalSrc = src;\n  if (startTime && startTime >= 0) {\n    finalSrc = `${finalSrc}#t=${startTime || 0}`;\n    if (endTime && endTime >= 0) {\n      finalSrc = `${finalSrc},${endTime}`;\n    }\n  }\n  const saveState = ({\n    isAudioPlayerStarted,\n    currentTime,\n    duration,\n    isAudioCompleted,\n    audioState,\n  }: {\n    isAudioPlayerStarted: boolean;\n    currentTime: any;\n    duration: any;\n    isAudioCompleted: boolean;\n    audioState: string;\n  }) => {\n    const currentVideoTime = parseFloat(currentTime || 0);\n    const audioDuration = parseFloat(duration || 0);\n    const exposurePercentage = (currentVideoTime / audioDuration) * 100;\n    props.onSave({\n      id: `${props.id}`,\n      responses: [\n        {\n          key: 'hasStarted',\n          type: CapiVariableTypes.BOOLEAN,\n          value: isAudioPlayerStarted,\n        },\n        {\n          key: 'autoPlay',\n          type: CapiVariableTypes.BOOLEAN,\n          value: autoPlay,\n        },\n        {\n          key: 'currentTime',\n          type: CapiVariableTypes.STRING,\n          value: currentTime,\n        },\n        {\n          key: 'duration',\n          type: CapiVariableTypes.STRING,\n          value: duration,\n        },\n        {\n          key: 'endTime',\n          type: CapiVariableTypes.STRING,\n          value: endTime || '',\n        },\n        {\n          key: 'exposureInSeconds',\n          type: CapiVariableTypes.NUMBER,\n          value: currentTime,\n        },\n        {\n          key: 'exposurePercentage',\n          type: CapiVariableTypes.NUMBER,\n          value: isNaN(exposurePercentage) ? 0 : parseInt(exposurePercentage.toString()),\n        },\n        {\n          key: 'hasCompleted',\n          type: CapiVariableTypes.BOOLEAN,\n          value: isAudioCompleted,\n        },\n        {\n          key: 'startTime',\n          type: CapiVariableTypes.STRING,\n          value: startTime || 0,\n        },\n        {\n          key: 'state',\n          type: CapiVariableTypes.STRING,\n          value: audioState,\n        },\n        {\n          key: 'totalSecondsWatched',\n          type: CapiVariableTypes.STRING,\n          value: currentTime,\n        },\n        {\n          key: 'customCssClass',\n          type: CapiVariableTypes.STRING,\n          value: customCssClass,\n        },\n      ],\n    });\n  };\n\n  const handleAudioPlay = (data: any) => {\n    setAudioIsPlayerStarted(true);\n    saveState({\n      isAudioPlayerStarted: true,\n      currentTime: data.target.currentTime,\n      duration: data.target.duration,\n      isAudioCompleted: audioIsCompleted,\n      audioState: 'playing',\n    });\n  };\n\n  const handleAudioPause = (data: any) => {\n    setAudioCurrentTime(data.target.currentTime);\n    saveState({\n      isAudioPlayerStarted: audioIsPlayerStarted,\n      currentTime: data.target.currentTime,\n      duration: data.target.duration,\n      isAudioCompleted: audioIsCompleted,\n      audioState: 'paused',\n    });\n  };\n\n  const handleAudioEnd = (data: any) => {\n    setAudioIsCompleted(true);\n    saveState({\n      isAudioPlayerStarted: audioIsPlayerStarted,\n      currentTime: data.target.currentTime,\n      duration: data.target.duration,\n      isAudioCompleted: true,\n      audioState: 'done',\n    });\n    if (!enableReplay) {\n      setShowControls(false);\n    }\n    if (triggerCheck) {\n      props.onSubmit({ id: `${id}`, responses: [] });\n    }\n  };\n\n  useEffect(() => {\n    //TODO commenting for now. Need to revisit once state structure logic is in place\n    //handleStateChange(state);\n  }, [state]);\n\n  return ready ? (\n    <audio\n      id={`audioTag-${id}`}\n      data-janus-type={tagName}\n      style={audioStyles}\n      autoPlay={audioAutoPlay}\n      controls={showControls}\n      controlsList=\"nodownload\"\n      onPlay={handleAudioPlay}\n      onPause={handleAudioPause}\n      onEnded={handleAudioEnd}\n    >\n      <source src={finalSrc} />\n\n      {subtitles &&\n        subtitles.length > 0 &&\n        subtitles.map((subtitle: any) => {\n          const defaults = subtitles.length === 1 ? true : subtitle.default;\n          return (\n            <track\n              key={subtitle.src}\n              src={subtitle.src}\n              srcLang={subtitle.language}\n              label={subtitle.language}\n              kind=\"subtitles\"\n              default={defaults || false}\n            />\n          );\n        })}\n    </audio>\n  ) : null;\n};\n\nexport const tagName = 'janus-audio';\n\nexport default Audio;\n"]}