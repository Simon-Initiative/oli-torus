{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/components/parts/janus-audio/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAe7D,MAAM,CAAC,MAAM,MAAM,GAAsB;IACvC,GAAG,EAAE;QACH,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,QAAQ;KACf;IACD,cAAc,EAAE;QACd,KAAK,EAAE,kBAAkB;QACzB,IAAI,EAAE,QAAQ;KACf;IACD,YAAY,EAAE;QACZ,KAAK,EAAE,eAAe;QACtB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,+EAA+E;QAC5F,OAAO,EAAE,KAAK;KACf;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,0DAA0D;QACvE,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;QACT,KAAK,EAAE,kBAAkB;QACzB,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,CAAC;KACX;IACD,OAAO,EAAE;QACP,KAAK,EAAE,gBAAgB;QACvB,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,qCAAqC;QAClD,OAAO,EAAE,CAAC;KACX;IACD,YAAY,EAAE;QACZ,KAAK,EAAE,eAAe;QACtB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,8DAA8D;QAC3E,OAAO,EAAE,IAAI;KACd;IACD,SAAS,EAAE;QACT,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,OAAO;QACb,KAAK,EAAE;YACL,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACV,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;gBAC5B,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBAC5B,GAAG,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;aACxB;YACD,QAAQ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC;SAC9B;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,EAAE,CAAC;AAE3B,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,iBAAiB,EAAE,iBAAiB,CAAC,MAAM;IAC3C,kBAAkB,EAAE,iBAAiB,CAAC,MAAM;IAC5C,UAAU,EAAE,iBAAiB,CAAC,OAAO;IACrC,YAAY,EAAE,iBAAiB,CAAC,OAAO;IACvC,mBAAmB,EAAE,iBAAiB,CAAC,MAAM;IAC7C,QAAQ,EAAE,iBAAiB,CAAC,MAAM;IAClC,QAAQ,EAAE,iBAAiB,CAAC,OAAO;IACnC,KAAK,EAAE,iBAAiB,CAAC,IAAI;IAC7B,SAAS,EAAE,iBAAiB,CAAC,MAAM;IACnC,OAAO,EAAE,iBAAiB,CAAC,MAAM;IACjC,WAAW,EAAE,iBAAiB,CAAC,MAAM;CACtC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,GAAwB,EAAE,CAAC,CAAC;IACtD,GAAG,EAAE,EAAE;IACP,cAAc,EAAE,EAAE;IAClB,YAAY,EAAE,KAAK;IACnB,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE,CAAC;IACZ,OAAO,EAAE,CAAC;IACV,YAAY,EAAE,IAAI;IAClB,SAAS,EAAE,EAAE;CACd,CAAC,CAAC","sourcesContent":["import { CapiVariableTypes } from '../../../adaptivity/capi';\nimport { JSONSchema7Object } from 'json-schema';\nimport { JanusAbsolutePositioned, JanusCustomCss } from '../types/parts';\n\nexport interface AudioModel extends JanusAbsolutePositioned, JanusCustomCss {\n  src: string;\n  customCssClass: string;\n  triggerCheck: boolean;\n  autoPlay: boolean;\n  startTime: number;\n  endTime: number;\n  enableReplay: boolean;\n  subtitles: any;\n}\n\nexport const schema: JSONSchema7Object = {\n  src: {\n    title: 'Source',\n    type: 'string',\n  },\n  customCssClass: {\n    title: 'Custom CSS Class',\n    type: 'string',\n  },\n  triggerCheck: {\n    title: 'Trigger Check',\n    type: 'boolean',\n    description: 'if set to true then once audio is played till end, it will fire a check event',\n    default: false,\n  },\n  autoPlay: {\n    title: 'Auto Play',\n    type: 'boolean',\n    description: 'if set to true then audio player will play automatically',\n    default: false,\n  },\n  startTime: {\n    title: 'Start time(secs)',\n    type: 'number',\n    description: 'specifies the start time of the audio',\n    default: 0,\n  },\n  endTime: {\n    title: 'End time(secs)',\n    type: 'number',\n    description: 'specifies the end time of the audio',\n    default: 0,\n  },\n  enableReplay: {\n    title: 'Enable Replay',\n    type: 'boolean',\n    description: \"specifies whether user can replay the audio once it's played\",\n    default: true,\n  },\n  subtitles: {\n    title: 'Subtitles',\n    type: 'array',\n    items: {\n      type: 'object',\n      properties: {\n        default: { type: 'boolean' },\n        language: { type: 'string' },\n        src: { type: 'string' },\n      },\n      required: ['src', 'language'],\n    },\n  },\n};\n\nexport const uiSchema = {};\n\nexport const adaptivitySchema = {\n  exposureInSeconds: CapiVariableTypes.NUMBER,\n  exposurePercentage: CapiVariableTypes.NUMBER,\n  hasStarted: CapiVariableTypes.BOOLEAN,\n  hasCompleted: CapiVariableTypes.BOOLEAN,\n  totalSecondsWatched: CapiVariableTypes.NUMBER,\n  duration: CapiVariableTypes.NUMBER,\n  autoPlay: CapiVariableTypes.BOOLEAN,\n  state: CapiVariableTypes.ENUM,\n  startTime: CapiVariableTypes.NUMBER,\n  endTime: CapiVariableTypes.NUMBER,\n  currentTime: CapiVariableTypes.NUMBER,\n};\n\nexport const createSchema = (): Partial<AudioModel> => ({\n  src: '',\n  customCssClass: '',\n  triggerCheck: false,\n  autoPlay: false,\n  startTime: 0,\n  endTime: 0,\n  enableReplay: true,\n  subtitles: [],\n});\n"]}