{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/components/parts/janus-input-number/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAgB7D,MAAM,CAAC,MAAM,MAAM,GAAsB;IACvC,cAAc,EAAE;QACd,KAAK,EAAE,kBAAkB;QACzB,IAAI,EAAE,QAAQ;KACf;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,EAAE;KACZ;IAED,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,QAAQ;KACf;IACD,QAAQ,EAAE;QACR,KAAK,EAAE,WAAW;QAClB,IAAI,EAAE,QAAQ;KACf;IACD,SAAS,EAAE;QACT,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,oCAAoC;QACjD,OAAO,EAAE,IAAI;KACd;IACD,KAAK,EAAE;QACL,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,gCAAgC;KAC9C;IACD,UAAU,EAAE;QACV,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,kCAAkC;KAChD;IACD,OAAO,EAAE;QACP,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,mDAAmD;QAChE,OAAO,EAAE,IAAI;KACd;IACD,mBAAmB,EAAE;QACnB,KAAK,EAAE,uBAAuB;QAC9B,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,wEAAwE;QACrF,OAAO,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ;KACf;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,EAAE,CAAC;AAE3B,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC9B,KAAK,EAAE,iBAAiB,CAAC,MAAM;IAC/B,OAAO,EAAE,iBAAiB,CAAC,OAAO;CACnC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,GAA8B,EAAE,CAAC,CAAC;IAC5D,OAAO,EAAE,IAAI;IACb,mBAAmB,EAAE,KAAK;IAC1B,SAAS,EAAE,IAAI;IACf,KAAK,EAAE,WAAW;IAClB,UAAU,EAAE,OAAO;IACnB,oBAAoB,EAAE,KAAK;IAC3B,cAAc,EAAE,CAAC;IACjB,MAAM,EAAE,mBAAmB;CAC5B,CAAC,CAAC","sourcesContent":["import { CapiVariableTypes } from '../../../adaptivity/capi';\nimport { JSONSchema7Object } from 'json-schema';\nimport { JanusAbsolutePositioned, JanusCustomCss } from '../types/parts';\n\nexport interface InputNumberModel extends JanusAbsolutePositioned, JanusCustomCss {\n  fontSize?: number;\n  maxValue: number;\n  minValue: number;\n  showLabel: boolean;\n  label: string;\n  unitsLabel: string;\n  enabled: boolean;\n  showIncrementArrows: boolean;\n  prompt: string;\n}\n\nexport const schema: JSONSchema7Object = {\n  customCssClass: {\n    title: 'Custom CSS Class',\n    type: 'string',\n  },\n  fontSize: {\n    title: 'Font Size',\n    type: 'number',\n    default: 12,\n  },\n\n  maxValue: {\n    title: 'Max Value',\n    type: 'number',\n  },\n  minValue: {\n    title: 'Min Value',\n    type: 'number',\n  },\n  showLabel: {\n    title: 'Show Label',\n    type: 'boolean',\n    description: 'specifies whether label is visible',\n    default: true,\n  },\n  label: {\n    title: 'Label',\n    type: 'string',\n    description: 'text label for the input field',\n  },\n  unitsLabel: {\n    title: 'Unit Label',\n    type: 'string',\n    description: 'text label appended to the input',\n  },\n  enabled: {\n    title: 'Enabled',\n    type: 'boolean',\n    description: 'specifies whether number input textbox is enabled',\n    default: true,\n  },\n  showIncrementArrows: {\n    title: 'Show Increment Arrows',\n    type: 'boolean',\n    description: 'specifies whether increment arrows should be visible in number textbox',\n    default: false,\n  },\n  prompt: {\n    type: 'string',\n  },\n};\n\nexport const uiSchema = {};\n\nexport const adaptivitySchema = {\n  value: CapiVariableTypes.NUMBER,\n  enabled: CapiVariableTypes.BOOLEAN,\n};\n\nexport const createSchema = (): Partial<InputNumberModel> => ({\n  enabled: true,\n  showIncrementArrows: false,\n  showLabel: true,\n  label: 'How many?',\n  unitsLabel: 'units',\n  requireManualGrading: false,\n  maxManualGrade: 0,\n  prompt: 'enter a number...',\n});\n"]}