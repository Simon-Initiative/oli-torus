{"version":3,"file":"MediaIcon.jsx","sourceRoot":"","sources":["../../../../../src/components/media/manager/MediaIcon.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AASlC,MAAM,oBAAoB,GAAG,CAAC,QAAgB,EAAE,EAAE;IAChD,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;QACrB,OAAO,SAAS,CAAC;KAClB;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,SAAS,GAA6C,CAAC;AAClE,2BAA2B;AAC3B,SAAS;AACT,2BAA2B;AAC3B,QAAQ;AACR,2BAA2B;AAC3B,QAAQ;AACR,2BAA2B;AAC3B,GAAG,GACJ,EAAE,EAAE;IACH,2BAA2B;IAC3B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACpD,MAAM,SAAS,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IAEzF,MAAM,IAAI,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IAE5C,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,cAAc,SAAS,IAAI,EAAE,EAAE,CAAC,CAC9C;MAAA,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAC3D;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { FileIcon } from './FileIcon';\nimport { ImageIcon } from './ImageIcon';\nimport { isImage } from './utils';\n\nexport interface MediaIconProps {\n  className?: string;\n  filename: string;\n  mimeType: string;\n  url: string;\n}\n\nconst getMediaIconRenderer = (mimeType: string) => {\n  if (isImage(mimeType)) {\n    return ImageIcon;\n  }\n\n  return FileIcon;\n};\n\n/**\n * MediaIcon React Stateless MediaIcon\n */\nexport const MediaIcon: React.StatelessComponent<MediaIconProps> = ({\n  // eslint-disable-next-line\n  className,\n  // eslint-disable-next-line\n  filename,\n  // eslint-disable-next-line\n  mimeType,\n  // eslint-disable-next-line\n  url,\n}) => {\n  // eslint-disable-next-line\n  const extensionMatches = filename.match(/\\.[^.]+$/);\n  const extension = extensionMatches ? extensionMatches[0].substr(1, 3).toLowerCase() : '';\n\n  const Icon = getMediaIconRenderer(mimeType);\n\n  return (\n    <div className={`media-icon ${className || ''}`}>\n      <Icon filename={filename} extension={extension} url={url} />\n    </div>\n  );\n};\n"]}