{"version":3,"file":"MediaManager.jsx","sourceRoot":"","sources":["../../../../../src/components/media/manager/MediaManager.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Immutable from 'immutable';\nimport { Maybe } from 'tsmonad';\nimport { MediaIcon } from './MediaIcon';\nimport { MediaLibraryOption, MediaItem } from 'types/media';\nimport guid from 'utils/guid';\nimport { convert, stringFormat } from 'utils/format';\nimport { OrderedMediaLibrary } from '../OrderedMediaLibrary';\nimport { LoadingSpinner, LoadingSpinnerSize } from 'components/common/LoadingSpinner';\nimport { relativeToNow } from 'utils/date';\nimport { uploadFiles } from './upload';\n\nconst PAGELOAD_TRIGGER_MARGIN_PX = 100;\nconst MAX_NAME_LENGTH = 26;\nconst PAGE_LOADING_MESSAGE = 'Hang on while we load your items...';\n\nexport const MIMETYPE_FILTERS = {\n  IMAGE: ['image/jpeg', 'image/png', 'image/tiff', 'image/gif'],\n  AUDIO: ['audio/mpeg', 'audio/wav', 'audio/mid', 'audio/mp4'],\n  VIDEO: ['video/mp4'],\n  HTML: ['text/html'],\n  CSV: ['text/csv'],\n  ALL: undefined,\n};\n\nexport enum SELECTION_TYPES {\n  MULTI,\n  SINGLE,\n  NONE,\n}\n\nexport enum LAYOUTS {\n  GRID,\n  LIST,\n}\n\nconst SORT_MAPPINGS = {\n  Newest: {\n    orderBy: 'dateCreated',\n    order: 'desc',\n    icon: 'fa fa-calendar',\n  },\n  Oldest: {\n    orderBy: 'dateCreated',\n    order: 'asc',\n    icon: 'fa fa-calendar',\n  },\n  'A-Z': {\n    orderBy: 'fileName',\n    order: 'asc',\n    icon: 'fas fa-sort-alpha-up',\n  },\n  'Z-A': {\n    orderBy: 'fileName',\n    order: 'desc',\n    icon: 'fas fa-sort-alpha-down',\n  },\n  Type: {\n    orderBy: 'mimeType',\n    order: 'asc',\n    icon: 'far fa-file-image',\n  },\n  'File Size': {\n    orderBy: 'fileSize',\n    order: 'asc',\n    icon: 'fas fa-sort-numeric-up',\n  },\n} as any;\n\nconst getSortMappingKey = (orderBy: string, order?: string) => {\n  return Object.keys(SORT_MAPPINGS).find(\n    (key) =>\n      orderBy === SORT_MAPPINGS[key].orderBy &&\n      (order === undefined || order === SORT_MAPPINGS[key].order),\n  );\n};\n\nconst popOpenImage = (e: any) => {\n  const link = e.target;\n  const w = window.open(\n    link.href,\n    link.target || '_blank',\n    'menubar=no,toolbar=no,location=no,directories=no,status=no,scrollbars=no,' +\n      'resizable=no,dependent,width=800,height=620',\n  );\n\n  // allow the link to work if popup is blocked\n  return w ? false : true;\n};\n\nexport interface MediaManagerProps {\n  disabled?: boolean;\n  className?: string;\n  projectSlug: string;\n  media: OrderedMediaLibrary;\n  mimeFilter?: string[] | undefined;\n  selectionType: SELECTION_TYPES;\n  initialSelectionPaths: string[];\n  onEdit: (updated: MediaLibraryOption) => void;\n  onLoadCourseMediaNextPage: (\n    projectSlug: string,\n    mimeFilter: string[] | undefined,\n    searchText: string,\n    orderBy: string,\n    order: string,\n  ) => Promise<Maybe<Immutable.List<MediaItem>>>;\n  onResetMedia: () => void;\n  onSelectionChange: (selection: MediaItem[]) => void;\n  onLoadMediaItemByPath: (projectSlug: string, path: string) => Promise<Maybe<MediaItem>>;\n  toggleDisableInsert?: (b: boolean) => void;\n}\n\nexport interface MediaManagerState {\n  selection: Immutable.List<string>;\n  searchText: string | undefined;\n  orderBy: string;\n  order: string;\n  layout: LAYOUTS;\n  showDetails: boolean;\n  error: Maybe<string>;\n  filteredMimeTypes: string[] | undefined;\n}\n\n/**\n * MediaManager React Component\n */\nexport class MediaManager extends React.PureComponent<MediaManagerProps, MediaManagerState> {\n  scrollView: HTMLElement;\n  scrollContent: HTMLElement;\n\n  constructor(props: MediaManagerProps) {\n    super(props);\n\n    this.state = {\n      selection: Immutable.List<string>(),\n      searchText: undefined,\n      orderBy: SORT_MAPPINGS.Newest.orderBy,\n      order: SORT_MAPPINGS.Newest.order,\n      layout: LAYOUTS.GRID,\n      showDetails: true,\n      error: Maybe.nothing<string>(),\n      filteredMimeTypes: props.mimeFilter,\n    };\n\n    this.onScroll = this.onScroll.bind(this);\n    this.isSelected = this.isSelected.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onChangeLayout = this.onChangeLayout.bind(this);\n  }\n\n  componentDidMount() {\n    const { mimeFilter, initialSelectionPaths, onLoadCourseMediaNextPage, onLoadMediaItemByPath } =\n      this.props;\n    const { searchText, orderBy, order } = this.state;\n\n    onLoadCourseMediaNextPage(\n      this.props.projectSlug,\n      mimeFilter as string[],\n      searchText as string,\n      orderBy,\n      order,\n    );\n\n    // load initial selection data\n    if (initialSelectionPaths) {\n      Promise.all(\n        initialSelectionPaths\n          .filter((path) => path)\n          .map((path) => onLoadMediaItemByPath(this.props.projectSlug, path.replace(/^[./]+/, ''))),\n      )\n        .then((mediaItems) => {\n          this.setState({\n            selection: Immutable.List(\n              mediaItems\n                .map(\n                  (mi) =>\n                    mi.caseOf({\n                      just: (item) => item.guid,\n                      nothing: () => undefined,\n                    }) as string,\n                )\n                .filter((i) => i),\n            ),\n            error: Maybe.nothing<string>(),\n          });\n        })\n        .catch((e) => this.setState({ error: Maybe.just(e.message) }));\n    }\n  }\n\n  componentWillUnmount() {\n    const { onResetMedia } = this.props;\n\n    this.scrollView.removeEventListener('scroll', this.onScroll);\n    onResetMedia();\n  }\n\n  onUploadClick(id: string) {\n    (window as any).$('#' + id).trigger('click');\n  }\n\n  setupScrollListener(scrollView: HTMLElement) {\n    if (!scrollView) {\n      return;\n    }\n\n    if (this.scrollView) {\n      this.scrollView.removeEventListener('scroll', this.onScroll);\n    }\n\n    this.scrollView = scrollView;\n    this.scrollView.addEventListener('scroll', this.onScroll);\n  }\n\n  onScroll() {\n    const { media, onLoadCourseMediaNextPage } = this.props;\n    const { searchText, orderBy, order, filteredMimeTypes } = this.state;\n\n    const isLoadingMedia = media.isLoading;\n\n    const allItemsLoaded = media.items.size >= media.totalItems;\n\n    if (allItemsLoaded) {\n      this.scrollView.removeEventListener('scroll', this.onScroll);\n      return;\n    }\n\n    if (\n      !isLoadingMedia &&\n      this.scrollView.scrollTop + PAGELOAD_TRIGGER_MARGIN_PX >\n        this.scrollContent.offsetHeight - this.scrollView.offsetHeight\n    ) {\n      onLoadCourseMediaNextPage(\n        this.props.projectSlug,\n        filteredMimeTypes,\n        searchText as string,\n        orderBy,\n        order,\n      );\n    }\n  }\n\n  onFileUpload(files: FileList) {\n    const { mimeFilter, onLoadCourseMediaNextPage, onResetMedia } = this.props;\n    const { searchText, orderBy, order } = this.state;\n\n    // get a list of the files to upload\n    const fileList: File[] = [];\n    for (let i = 0; i < files.length; i = i + 1) {\n      fileList.push(files[i]);\n    }\n\n    // sequentially upload files one at a time, then reload the media page\n    uploadFiles(this.props.projectSlug, fileList)\n      .then((result: any) => {\n        onResetMedia();\n        onLoadCourseMediaNextPage(\n          this.props.projectSlug,\n          mimeFilter as string[],\n          searchText as string,\n          orderBy,\n          order,\n        )\n          // select the most recently uploaded item\n          .then((mediaItems) => {\n            mediaItems.lift((files) => {\n              if (files.size > 0) {\n                Maybe.maybe(files.find((f) => f.url === (result[0] && result[0].url))).lift(\n                  (file) => this.onSelect(file.guid),\n                );\n              }\n            });\n          })\n          .then(() => this.setState({ error: Maybe.nothing<string>() }));\n      })\n      .catch((e: Error) => this.setState({ error: Maybe.just(e.message) }));\n  }\n\n  onChangeLayout(newLayout: LAYOUTS) {\n    this.setState({\n      layout: newLayout,\n    });\n  }\n\n  isSelected(guid: string) {\n    const { selection } = this.state;\n\n    return selection.includes(guid);\n  }\n\n  onSelect(guid: string) {\n    const { media, selectionType, onSelectionChange } = this.props;\n    const { selection } = this.state;\n\n    let updatedSelection = selection;\n\n    if (selectionType === SELECTION_TYPES.SINGLE) {\n      // clear the current selection\n      updatedSelection = Immutable.List([guid]);\n    } else if (selectionType === SELECTION_TYPES.MULTI) {\n      if (this.isSelected(guid)) {\n        // unselect item\n        updatedSelection = updatedSelection.remove(updatedSelection.findIndex((s) => s === guid));\n      } else {\n        // select item\n        updatedSelection = updatedSelection.push(guid);\n      }\n    } else {\n      return;\n    }\n\n    this.setState({\n      selection: updatedSelection,\n    });\n\n    const mediaLibrary = media;\n    if (mediaLibrary) {\n      onSelectionChange(\n        updatedSelection.map((s) => mediaLibrary.getItem(s)).toArray() as MediaItem[],\n      );\n      this.props.toggleDisableInsert && this.props.toggleDisableInsert(false);\n    }\n  }\n\n  onSearch(searchText: string) {\n    const { onLoadCourseMediaNextPage, onResetMedia } = this.props;\n    const { orderBy, order, filteredMimeTypes } = this.state;\n\n    onResetMedia();\n    onLoadCourseMediaNextPage(\n      this.props.projectSlug,\n      filteredMimeTypes,\n      searchText,\n      orderBy,\n      order,\n    );\n  }\n\n  onSortChange(sortKey: string) {\n    const { onLoadCourseMediaNextPage, onResetMedia } = this.props;\n    const { searchText, filteredMimeTypes } = this.state;\n\n    this.setState({\n      orderBy: SORT_MAPPINGS[sortKey].orderBy,\n      order: SORT_MAPPINGS[sortKey].order,\n    });\n\n    onResetMedia();\n    onLoadCourseMediaNextPage(\n      this.props.projectSlug,\n      filteredMimeTypes,\n      searchText as string,\n      SORT_MAPPINGS[sortKey].orderBy,\n      SORT_MAPPINGS[sortKey].order,\n    );\n  }\n\n  isItemSelectable = (selectionType: SELECTION_TYPES, item: MediaItem) =>\n    selectionType !== SELECTION_TYPES.NONE &&\n    (!this.props.mimeFilter || this.props.mimeFilter.includes(item.mimeType));\n\n  renderMediaList(disabled: boolean) {\n    const { media, selectionType } = this.props;\n\n    const isLoadingMedia = media.isLoading;\n\n    const allItemsLoaded = media.allItemsLoaded();\n\n    const mediaItems: MediaItem[] = media.getItems() as MediaItem[];\n\n    const mediaItemRefs = media.references;\n\n    return (\n      <div className=\"media-list\">\n        <div className=\"list-header\">\n          <div className=\"sel-col\" />\n          <div className=\"name-col\">Name</div>\n          <div className=\"refs-col\">References</div>\n          <div className=\"date-col\">Date Modified</div>\n          <div className=\"size-col\">Size</div>\n        </div>\n        <div className=\"list-body\" ref={(el) => this.setupScrollListener(el as HTMLElement)}>\n          <div ref={(el) => (this.scrollContent = el as HTMLElement)}>\n            {mediaItems.map((item) => (\n              <div\n                key={item.guid}\n                className={\n                  `media-item ${this.isSelected(item.guid) ? 'selected' : ''} ` +\n                  `${\n                    this.isItemSelectable(selectionType, item) && !disabled\n                      ? 'selectable'\n                      : 'not-selectable'\n                  }`\n                }\n                onClick={() =>\n                  this.isItemSelectable(selectionType, item) && !disabled\n                    ? this.onSelect(item.guid)\n                    : null\n                }\n              >\n                <div className=\"sel-col\">\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    className=\"selection-check\"\n                    checked={this.isSelected(item.guid)}\n                    onClick={() => this.onSelect(item.guid)}\n                  />\n                </div>\n                <div className=\"name-col\">\n                  <MediaIcon filename={item.fileName} mimeType={item.mimeType} url={item.url} />\n                  {` ${item.fileName}`}\n                </div>\n                <div className=\"refs-col\">\n                  {mediaItemRefs.get(item.guid) && (mediaItemRefs.get(item.guid) as any).size}\n                </div>\n                <div className=\"date-col\">{item.dateUpdated}</div>\n                <div className=\"size-col\">{convert.toByteNotation(item.fileSize)}</div>\n              </div>\n            ))}\n            {isLoadingMedia && !allItemsLoaded ? (\n              <LoadingSpinner\n                key=\"loading\"\n                size={LoadingSpinnerSize.Small}\n                message={PAGE_LOADING_MESSAGE}\n              />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderMediaGrid(disabled: boolean) {\n    const { media, selectionType } = this.props;\n\n    const isLoadingMedia = media.isLoading;\n\n    const allItemsLoaded = media.allItemsLoaded();\n\n    const mediaItems: MediaItem[] = media.getItems() as MediaItem[];\n\n    return (\n      <div className=\"media-grid\" ref={(el) => this.setupScrollListener(el as HTMLElement)}>\n        <div className=\"scroll-content\" ref={(el) => (this.scrollContent = el as HTMLElement)}>\n          {mediaItems.map((item) => (\n            <div\n              key={item.guid}\n              className={\n                `media-item ${this.isSelected(item.guid) ? 'selected' : ''} ` +\n                `${\n                  this.isItemSelectable(selectionType, item) && !disabled\n                    ? 'selectable'\n                    : 'not-selectable'\n                }`\n              }\n              onClick={() =>\n                this.isItemSelectable(selectionType, item) && !disabled\n                  ? this.onSelect(item.guid)\n                  : null\n              }\n            >\n              <input\n                type=\"checkbox\"\n                readOnly\n                className=\"selection-check\"\n                checked={this.isSelected(item.guid)}\n                onClick={() => this.onSelect(item.guid)}\n              />\n              <MediaIcon filename={item.fileName} mimeType={item.mimeType} url={item.url} />\n              <div className=\"name\">\n                {stringFormat.ellipsize(item.fileName, MAX_NAME_LENGTH, 5)}\n              </div>\n            </div>\n          ))}\n        </div>\n        {isLoadingMedia && !allItemsLoaded ? (\n          <div className=\"loading\">\n            <i className=\"fas fa-circle-notch fa-spin fa-1x fa-fw\" />\n            {PAGE_LOADING_MESSAGE}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  renderMediaSelectionDetails(disabled: boolean) {\n    const { media } = this.props;\n    const { selection, showDetails } = this.state;\n\n    const selectedMediaItems = selection.map((guid) =>\n      media.data.get(guid),\n    ) as Immutable.List<MediaItem>;\n\n    if (selectedMediaItems.size > 1) {\n      return (\n        <div className=\"media-selection-details\">\n          <div className=\"details-title\">Multiple Items Selected</div>\n        </div>\n      );\n    }\n\n    const detailsOnClick = () => this.setState({ showDetails: !showDetails });\n\n    if (selectedMediaItems.size > 0) {\n      const selectedItem = selectedMediaItems.first() as MediaItem;\n\n      return (\n        <div className=\"media-selection-details\">\n          <div className=\"details-title\">\n            <span>\n              Selected:{' '}\n              <a\n                href={selectedItem.url}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                onClick={(e) => {\n                  if (!disabled) {\n                    popOpenImage(e);\n                  }\n                }}\n              >\n                {stringFormat.ellipsize(selectedItem.fileName, 65, 5)}\n              </a>\n            </span>\n            {showDetails ? (\n              <span role=\"button\" onClick={detailsOnClick} className=\"material-icons\">\n                keyboard_arrow_down\n              </span>\n            ) : (\n              <span role=\"button\" onClick={detailsOnClick} className=\"material-icons\">\n                keyboard_arrow_up\n              </span>\n            )}\n          </div>\n          {showDetails && (\n            <div className=\"details-content\">\n              <MediaIcon\n                filename={selectedItem.fileName}\n                mimeType={selectedItem.mimeType}\n                url={selectedItem.url}\n              />\n              <div className=\"details-info\">\n                <div className=\"detail-row date-created\">\n                  <b>Uploaded:</b> {relativeToNow(new Date(selectedItem.dateCreated))}\n                </div>\n                <div className=\"detail-row file-size\">\n                  <b>Size:</b> {convert.toByteNotation(selectedItem.fileSize)}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n\n  renderError() {\n    const { error } = this.state;\n\n    return error.caseOf({\n      just: (error) => (\n        <div className=\"alert alert-danger fade show\" role=\"alert\">\n          {error}\n        </div>\n      ),\n      nothing: () => null,\n    });\n  }\n\n  displayMediaOfType = (mimeFilter: string[] | undefined) => {\n    const { searchText, orderBy, order } = this.state;\n    this.props.onResetMedia();\n    this.props\n      .onLoadCourseMediaNextPage(\n        this.props.projectSlug,\n        mimeFilter,\n        searchText as string,\n        orderBy,\n        order,\n      )\n      .then((_) => this.setState({ filteredMimeTypes: mimeFilter }));\n  };\n\n  mimeTypeFilter = (type: string[] | undefined) => {\n    const { filteredMimeTypes } = this.state;\n    if (type === MIMETYPE_FILTERS.ALL || filteredMimeTypes === MIMETYPE_FILTERS.ALL) {\n      return type === filteredMimeTypes ? 'active' : '';\n    }\n\n    const filtersAreSame = (arr1: string[], arr2: string[]) =>\n      arr1.reduce((acc, curr, i) => (curr === arr2[i] ? acc : false), true);\n\n    return filtersAreSame(filteredMimeTypes, type) ? 'active' : '';\n  };\n\n  render() {\n    const { className, mimeFilter, media } = this.props;\n    const { searchText, layout, orderBy, order } = this.state;\n    const disabled = this.props.disabled === undefined ? false : this.props.disabled;\n\n    const id = guid();\n\n    const mediaCount = { numResults: media.totalItemsLoaded, totalResults: media.totalItems };\n\n    return (\n      <div className={`media-manager ${className || ''}`}>\n        {this.renderError()}\n        <div className=\"media-toolbar\">\n          <input\n            id={id}\n            style={{ display: 'none' }}\n            disabled={disabled}\n            accept={mimeFilter && `${mimeFilter}`}\n            multiple\n            onChange={({ target: { files } }) => this.onFileUpload(files as FileList)}\n            type=\"file\"\n          />\n          <button\n            disabled={disabled}\n            className=\"btn btn-primary media-toolbar-item upload\"\n            onClick={() => this.onUploadClick(id)}\n          >\n            <i className=\"fa fa-upload\" /> Upload\n          </button>\n          <div className=\"media-toolbar-item btn-group layout-control\">\n            <button\n              disabled={disabled}\n              className={`btn btn-outline-primary ${layout === LAYOUTS.GRID ? 'selected' : ''}`}\n              onClick={() => this.onChangeLayout(LAYOUTS.GRID)}\n            >\n              <i className=\"fa fa-th\" /> Grid\n            </button>\n            <button\n              disabled={disabled}\n              className={`btn btn-outline-primary ${layout === LAYOUTS.LIST ? 'selected' : ''}`}\n              onClick={() => this.onChangeLayout(LAYOUTS.LIST)}\n            >\n              <i className=\"fa fa-th-list\" /> List\n            </button>\n          </div>\n\n          <div className=\"flex-grow-1\"></div>\n\n          <div className=\"media-toolbar-item sort-control dropdown\">\n            Sort by:&nbsp;\n            <span className=\"dropdown-toggle sort-btn\" id=\"dropdownMenu2\" data-toggle=\"dropdown\">\n              <i className={SORT_MAPPINGS[getSortMappingKey(orderBy, order) as any].icon} />\n              {` ${getSortMappingKey(orderBy, order)}`}\n            </span>\n            <div className=\"dropdown-menu\">\n              {Object.keys(SORT_MAPPINGS).map((sortKey) => (\n                <button\n                  disabled={disabled}\n                  key={sortKey}\n                  type=\"button\"\n                  className=\"dropdown-item\"\n                  onClick={() => this.onSortChange(sortKey)}\n                >\n                  {sortKey}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div className=\"media-toolbar-item search\">\n            <div className=\"input-group\">\n              <input\n                disabled={disabled}\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search\"\n                value={searchText}\n                onChange={({ target: { value } }) => this.onSearch(value)}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"media-library\">\n          <ol className=\"media-sidebar text-center\">\n            <li\n              className={this.mimeTypeFilter(MIMETYPE_FILTERS.ALL)}\n              onClick={() => this.displayMediaOfType(MIMETYPE_FILTERS.ALL)}\n            >\n              All Media\n            </li>\n            <li\n              className={this.mimeTypeFilter(MIMETYPE_FILTERS.IMAGE)}\n              onClick={() => this.displayMediaOfType(MIMETYPE_FILTERS.IMAGE)}\n            >\n              Images\n            </li>\n            <li\n              className={this.mimeTypeFilter(MIMETYPE_FILTERS.AUDIO)}\n              onClick={() => this.displayMediaOfType(MIMETYPE_FILTERS.AUDIO)}\n            >\n              Audio\n            </li>\n            <li className=\"video d-flex flex-column\">\n              <span>Video</span>\n              <small>Managed by YouTube</small>\n            </li>\n          </ol>\n          <div className=\"media-content\">\n            {layout === LAYOUTS.GRID\n              ? this.renderMediaGrid(disabled)\n              : this.renderMediaList(disabled)}\n            {this.renderMediaSelectionDetails(disabled)}\n          </div>\n        </div>\n        <div className=\"media-infobar\">\n          <div className=\"flex-spacer\" />\n          {mediaCount && mediaCount.totalResults > -Infinity && (\n            <div>\n              Showing {mediaCount.numResults} of {mediaCount.totalResults}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"]}