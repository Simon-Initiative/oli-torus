{"version":3,"file":"UrlOrUpload.jsx","sourceRoot":"","sources":["../../../../src/components/media/UrlOrUpload.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { MediaLibraryOption, MediaItem } from 'types/media';\nimport { MediaManager, SELECTION_TYPES } from './manager/MediaManager.controller';\n\ntype Source = 'upload' | 'url';\ninterface Props {\n  toggleDisableInsert?: (b: boolean) => void;\n  onUrlChange: (url: string) => void;\n  projectSlug: string;\n  mimeFilter?: string[] | undefined;\n  selectionType: SELECTION_TYPES;\n  initialSelectionPaths: string[];\n  onEdit: (updated: MediaLibraryOption) => void;\n  onMediaSelectionChange: (items: MediaItem[]) => void;\n}\nexport const UrlOrUpload = (props: Props) => {\n  const { toggleDisableInsert, onUrlChange } = props;\n  const [source, setSource] = useState<Source>('url');\n  const [url, setUrl] = useState('');\n\n  const onChangeSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    if (value === 'url') {\n      setSource('url');\n    }\n    setSource(value === 'upload' ? 'upload' : 'url');\n  };\n\n  return (\n    <>\n      <div className=\"mb-2\">\n        <div className=\"form-check\">\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"inlineRadio2\"\n            onClick={() => setSource('url')}\n          >\n            <input\n              className=\"form-check-input\"\n              defaultChecked={source === 'url'}\n              onChange={onChangeSource}\n              checked={source === 'url'}\n              type=\"radio\"\n              name=\"inlineRadioOptions\"\n              id=\"inlineRadio2\"\n              value=\"url\"\n            />\n            Use external media item\n          </label>\n          <div className=\"media-url mb-4\">\n            <input\n              className=\"form-control w-100\"\n              placeholder=\"Enter the media URL address\"\n              value={url}\n              disabled={source === 'upload'}\n              onChange={({ target: { value } }) => {\n                setUrl(value);\n                onUrlChange(value);\n\n                if (!toggleDisableInsert) {\n                  return;\n                }\n                return value.trim() ? toggleDisableInsert(false) : toggleDisableInsert(true);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"form-check mb-3\">\n          <label\n            className=\"form-check-label\"\n            htmlFor=\"inlineRadio1\"\n            onClick={() => setSource('upload')}\n          >\n            <input\n              className=\"form-check-input\"\n              defaultChecked={source === 'upload'}\n              onChange={onChangeSource}\n              checked={source !== 'url'}\n              type=\"radio\"\n              name=\"inlineRadioOptions\"\n              id=\"inlineRadio1\"\n              value=\"upload\"\n            />\n            Upload new or use existing media library item\n          </label>\n        </div>\n      </div>\n      <MediaManager\n        disabled={source === 'url'}\n        toggleDisableInsert={props.toggleDisableInsert}\n        projectSlug={props.projectSlug}\n        // eslint-disable-next-line\n        onEdit={() => {}}\n        mimeFilter={props.mimeFilter}\n        selectionType={SELECTION_TYPES.SINGLE}\n        initialSelectionPaths={props.initialSelectionPaths}\n        onSelectionChange={props.onMediaSelectionChange}\n      />\n    </>\n  );\n};\n"]}