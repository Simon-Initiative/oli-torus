{"version":3,"file":"AddResourceContent.jsx","sourceRoot":"","sources":["../../../../../src/components/content/add_resource_content/AddResourceContent.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ActivityEditContext } from 'data/content/activity';\nimport { ResourceContent } from 'data/content/resource';\nimport React, { useState } from 'react';\nimport { Popover } from 'react-tiny-popover';\nimport { classNames } from 'utils/classNames';\n\nexport type AddCallback = (\n  content: ResourceContent,\n  index: number,\n  a?: ActivityEditContext,\n) => void;\n\n// Component that presents a drop down to use to add structure\n// content or the any of the registered activities\ninterface AddResourceContentProps {\n  editMode: boolean;\n  isLast?: boolean;\n}\nexport const AddResourceContent: React.FC<AddResourceContentProps> = ({\n  editMode,\n  isLast,\n  children,\n}) => {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const [latestClickEvent, setLatestClickEvent] = useState<MouseEvent>();\n  const togglePopover = (e: React.MouseEvent) => {\n    setIsPopoverOpen(!isPopoverOpen);\n    setLatestClickEvent(e.nativeEvent);\n  };\n\n  return (\n    <>\n      <Popover\n        containerClassName=\"add-resource-popover\"\n        onClickOutside={(e) => {\n          if (e !== latestClickEvent) {\n            setIsPopoverOpen(false);\n          }\n        }}\n        isOpen={isPopoverOpen}\n        align=\"start\"\n        positions={['bottom', 'left']}\n        content={() => <div className=\"add-resource-popover-content\">{children}</div>}\n      >\n        <div\n          className={classNames([\n            'add-resource-content',\n            isPopoverOpen ? 'active' : '',\n            isLast ? 'add-resource-content-last' : '',\n            editMode ? '' : 'disabled',\n          ])}\n          onClick={togglePopover}\n        >\n          {editMode && (\n            <>\n              <div className=\"insert-button-container\">\n                <div className=\"insert-button\">\n                  <i className=\"fa fa-plus\"></i>\n                </div>\n              </div>\n              <div className=\"insert-adornment\"></div>\n            </>\n          )}\n        </div>\n      </Popover>\n      <LastAddContentButton\n        isLast={typeof isLast === 'boolean' && isLast}\n        editMode={editMode}\n        togglePopover={togglePopover}\n      />\n    </>\n  );\n};\n\ninterface LastAddContentButtonProps {\n  isLast: boolean;\n  editMode: boolean;\n  togglePopover: (e: React.MouseEvent) => void;\n  content?: React.ReactNode;\n}\nconst LastAddContentButton: React.FC<LastAddContentButtonProps> = ({\n  isLast,\n  editMode,\n  togglePopover,\n  content,\n}) => {\n  if (!isLast) {\n    return null;\n  }\n  return (\n    <div className=\"insert-label my-4 text-center\">\n      <button onClick={togglePopover} disabled={!editMode} className=\"btn btn-sm btn-light\">\n        {content || 'Add Content or Activity'}\n      </button>\n    </div>\n  );\n};\n"]}