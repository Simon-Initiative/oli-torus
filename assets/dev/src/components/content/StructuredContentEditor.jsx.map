{"version":3,"file":"StructuredContentEditor.jsx","sourceRoot":"","sources":["../../../../src/components/content/StructuredContentEditor.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAG1B,OAAO,EAAE,MAAM,EAAE,MAAM,kCAAkC,CAAC;AAE1D,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAWhE,kCAAkC;AAClC,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,KAA8B,EAAE,EAAE;IACxE,MAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAC9B,CAAC,QAAsB,EAAE,EAAE;QACzB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC,EACD,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAC9B,CAAC;IAEF,OAAO,CACL,CAAC,aAAa,CACZ;MAAA,CAAC,MAAM,CACL,SAAS,CAAC,oBAAoB,CAC9B,cAAc,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CACnD,QAAQ,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CACzB,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAC9B,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,YAAY,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAErC;IAAA,EAAE,aAAa,CAAC,CACjB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { Descendant } from 'slate';\nimport { StructuredContent } from 'data/content/resource';\nimport { Editor } from 'components/editing/editor/Editor';\nimport { ProjectSlug } from 'data/types';\nimport { ErrorBoundary } from 'components/common/ErrorBoundary';\nimport { ToolbarItem } from 'components/editing/commands/interfaces';\n\nexport type StructuredContentEditor = {\n  editMode: boolean; // Whether or not we can edit\n  content: StructuredContent; // Content to edit\n  onEdit: (content: StructuredContent) => void; // Edit handler\n  toolbarItems: ToolbarItem[]; // Toolbar to use\n  projectSlug: ProjectSlug;\n};\n\n// The resource editor for content\nexport const StructuredContentEditor = (props: StructuredContentEditor) => {\n  const onEdit = React.useCallback(\n    (children: Descendant[]) => {\n      props.onEdit(Object.assign({}, props.content, { children }));\n    },\n    [props.content, props.onEdit],\n  );\n\n  return (\n    <ErrorBoundary>\n      <Editor\n        className=\"structured-content\"\n        commandContext={{ projectSlug: props.projectSlug }}\n        editMode={props.editMode}\n        value={props.content.children}\n        onEdit={onEdit}\n        toolbarItems={props.toolbarItems}\n      />\n    </ErrorBoundary>\n  );\n};\n"]}