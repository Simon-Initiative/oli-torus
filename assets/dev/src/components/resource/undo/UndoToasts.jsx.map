{"version":3,"file":"UndoToasts.jsx","sourceRoot":"","sources":["../../../../../src/components/resource/undo/UndoToasts.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAOxE,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,EAAE;IACpC,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAS,EAAE,EAAE;QAC1C,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,KAAsB,EAAE,EAAE;IACnD,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;QACjD,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QACxB,OAAO,CACL,CAAC,aAAa,CACZ,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,EAAE,CAAC,CAAC,IAAI,CAAC,CACT,OAAO,CAAC,CAAC;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,EAAE;aACT,CAAC,CACF,UAAU,CAAC,WAAW,CAEtB;QAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,WAAW,CAClC;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,2CAA2C,CACxD;YAAA,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CACnF;YAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAChF;;YACF,EAAE,MAAM,CACV;UAAA,EAAE,GAAG,CACP;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,aAAa,CAAC,CACjB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAC1B;MAAA,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,EAAE,eAAe,CAC5C;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Undoables } from '../../../apps/page-editor/types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nexport type UndoToastsProps = {\n  undoables: Undoables;\n  onInvokeUndo: (guid: string) => void;\n};\n\nconst toProperCase = (text: string) => {\n  return text.replace(/\\w\\S*/g, (s: string) => {\n    return s.charAt(0).toUpperCase() + s.substr(1).toLowerCase();\n  });\n};\n\nexport const UndoToasts = (props: UndoToastsProps) => {\n  const toasts = props.undoables.toArray().map((u) => {\n    const [key, action] = u;\n    return (\n      <CSSTransition\n        key={key}\n        in={true}\n        timeout={{\n          appear: 500,\n          enter: 500,\n          exit: 50,\n        }}\n        classNames=\"undotoast\"\n      >\n        <div key={key} className=\"undotoast\">\n          <div className=\"toast-body d-flex justify-content-between\">\n            <span className=\"undo-toast-desc\">{toProperCase(action.undoable.description)}</span>\n            <button onClick={() => props.onInvokeUndo(key)} className=\"btn btn-primary btn-xs\">\n              Undo\n            </button>\n          </div>\n        </div>\n      </CSSTransition>\n    );\n  });\n\n  return (\n    <div className=\"undo-toasts\">\n      <TransitionGroup>{toasts}</TransitionGroup>\n    </div>\n  );\n};\n"]}