{"version":3,"file":"TestModeHandler.jsx","sourceRoot":"","sources":["../../../../src/components/resource/TestModeHandler.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ActivityModelSchema, ClientEvaluation, PartResponse } from 'components/activities/types';\nimport * as Persistence from 'data/persistence/activity';\nimport { RequestHintResponse } from 'components/activities/DeliveryElement';\nimport { removeEmpty } from 'utils/common';\nimport produce from 'immer';\n\nexport const xdefaultState = (model: ActivityModelSchema) => {\n  const parts = model.authoring.parts.map((p: any) => ({\n    attemptNumber: 1,\n    attemptGuid: p.id,\n    dateEvaluated: null,\n    score: null,\n    outOf: null,\n    response: null,\n    feedback: null,\n    hints: [],\n    hasMoreHints: removeEmpty(p.hints).length > 0,\n    hasMoreAttempts: true,\n    partId: p.id,\n  }));\n\n  return {\n    attemptNumber: 1,\n    attemptGuid: 'testmode',\n    dateEvaluated: null,\n    score: null,\n    outOf: null,\n    hasMoreAttempts: true,\n    parts,\n  };\n};\n\nexport interface TestModelHandlerProps {\n  model: ActivityModelSchema;\n}\n\ntype DeliveredHints = { [index: string]: number };\n\nexport interface TestModelHandlerState {\n  model: ActivityModelSchema;\n  hints: DeliveredHints;\n}\n\ntype Continuation = (success: any, error: any) => void;\n\nfunction initHints(model: ActivityModelSchema) {\n  return model.authoring.parts.reduce((m: any, p: any) => {\n    m[p.id] = 0;\n    return m;\n  }, {});\n}\n\nexport class TestModeHandler extends React.Component<TestModelHandlerProps, TestModelHandlerState> {\n  ref: any;\n\n  constructor(props: TestModelHandlerProps) {\n    super(props);\n\n    this.state = {\n      model: props.model,\n      hints: initHints(props.model),\n    };\n\n    this.ref = React.createRef();\n  }\n\n  getPart(id: string): any {\n    return this.state.model.authoring.parts.find((p: any) => p.id === id);\n  }\n\n  componentDidMount() {\n    this.setUpHandler('submitPart', this.handleSubmit.bind(this));\n    this.setUpHandler('submitActivity', this.handleSubmit.bind(this));\n    this.setUpHandler('requestHint', this.handleHint.bind(this));\n    this.setUpHandler('resetActivity', this.handleReset.bind(this));\n    this.setUpHandler('submitEvaluations', this.handleSubmitEvaluations.bind(this));\n  }\n\n  // Helper function to isolate the setting up and handling of the custom event listener\n  setUpHandler(\n    name: string,\n    handler: (continuation: Continuation, partId: string, payload: any) => void,\n  ) {\n    if (this.ref !== null) {\n      this.ref.current.addEventListener(name, (e: CustomEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        handler(e.detail.continuation, e.detail.partAttemptGuid, e.detail.payload);\n      });\n    }\n  }\n\n  // we can handle individual part and activity submits in a unified manner\n  handleSubmit(continuation: Continuation, partId: string, partInputs: PartResponse[]) {\n    Persistence.evaluate(this.state.model, partInputs).then((result: Persistence.Evaluated) => {\n      const actions = result.evaluations.map((e: any) => {\n        return {\n          type: 'FeedbackAction',\n          error: e.error,\n          attempt_guid: e.part_id,\n          out_of: e.result.out_of,\n          score: e.result.score,\n          feedback: e.feedback,\n        };\n      });\n\n      continuation({ type: 'success', actions }, undefined);\n    });\n  }\n\n  handleSubmitEvaluations(\n    continuation: Continuation,\n    attemptGuid: any,\n    clientEvaluations: ClientEvaluation[],\n  ) {\n    const evaluatedParts = clientEvaluations.map((e: any) => {\n      return {\n        type: 'EvaluatedPart',\n        out_of: e.out_of,\n        score: e.score,\n        feedback: e.feedback,\n      };\n    });\n\n    continuation({ type: 'success', actions: evaluatedParts }, undefined);\n  }\n\n  handleHint(continuation: Continuation, partId: string) {\n    const index = this.state.hints[partId];\n    const hints = removeEmpty(this.getPart(partId).hints);\n    const hasMoreHints = hints.length > index + 1;\n    const hint = hints[index];\n    const response: RequestHintResponse = {\n      type: 'success',\n      hint,\n      hasMoreHints,\n    };\n\n    this.setState(\n      produce(this.state, (draftState) => {\n        draftState.hints[partId] = index + 1;\n      }),\n    );\n\n    continuation(response, undefined);\n  }\n\n  handleReset(continuation: Continuation) {\n    Persistence.transform(this.props.model).then((result: Persistence.Transformed) => {\n      const model = result.transformed === null ? this.props.model : result.transformed;\n      this.setState(\n        produce(this.state, (draftState) => {\n          draftState.model = model;\n          draftState.hints = initHints(model);\n        }),\n      );\n\n      const attemptState = xdefaultState(model);\n      continuation({ type: 'success', model, attemptState }, undefined);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"test-mode-handler delivery\" ref={this.ref}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n"]}