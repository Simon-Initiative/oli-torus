{"version":3,"file":"ObjectiveSelection.jsx","sourceRoot":"","sources":["../../../../src/components/resource/ObjectiveSelection.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as Immutable from 'immutable';\nimport { Objective, ResourceId } from 'data/content/objective';\n\nexport type ObjectiveSelectionProps = {\n  objectives: Immutable.List<Objective>;\n  childrenObjectives: Immutable.Map<ResourceId, Immutable.List<Objective>>;\n  onRegisterNewObjective: (title: string) => Promise<Objective>;\n  onUseSelected: (objectives: Immutable.List<ResourceId>) => void;\n};\n\ntype ObjectNodeProps = {\n  objective: Objective;\n  childrenObjectives: Immutable.Map<ResourceId, Immutable.List<Objective>>;\n  level: number;\n  // eslint-disable-next-line\n  selected: Object;\n  toggleSelected: (id: ResourceId) => void;\n};\n\nconst indentPerLevel = (level: number) => ({ marginLeft: level * 15 + 'px' });\n\nconst ObjectiveNode = (props: ObjectNodeProps) => {\n  const { objective, childrenObjectives, level } = props;\n\n  const myChildren = childrenObjectives.get(objective.id);\n  const renderedChildren =\n    myChildren === undefined\n      ? null\n      : myChildren\n          .toArray()\n          .map((o) => (\n            <ObjectiveNode\n              key={o.id}\n              selected={props.selected}\n              toggleSelected={props.toggleSelected}\n              objective={o}\n              childrenObjectives={childrenObjectives}\n              level={level + 1}\n            />\n          ));\n\n  return (\n    <div key={objective.id}>\n      <div\n        key=\"title\"\n        onClick={() => props.toggleSelected(objective.id)}\n        className={`title ${(props.selected as any)[objective.id] === true ? 'selected' : ''}`}\n        style={indentPerLevel(level)}\n      >\n        {objective.title}\n      </div>\n      {renderedChildren}\n    </div>\n  );\n};\n\nconst ObjectiveTree = (\n  // eslint-disable-next-line\n  props: ObjectiveSelectionProps & { selected: Object; toggleSelected: (slug: ResourceId) => void },\n) => {\n  return (\n    <React.Fragment>\n      {props.objectives\n        .toArray()\n        .filter((o) => o.parentId === null)\n        .map((o) => (\n          <ObjectiveNode\n            key={o.id}\n            objective={o}\n            selected={props.selected}\n            toggleSelected={props.toggleSelected}\n            childrenObjectives={props.childrenObjectives}\n            level={1}\n          />\n        ))}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectiveSelection = (props: ObjectiveSelectionProps) => {\n  const [selected, setSelected] = useState({});\n  const [text, setText] = useState('');\n\n  const toList = () =>\n    props.objectives.filter((o) => (selected as any)[o.id] === true).map((o) => o.id);\n\n  const toggleSelected = (id: ResourceId) => {\n    if ((selected as any)[id] === true) {\n      setSelected(Object.assign({}, selected, { [id]: false }));\n    } else {\n      setSelected(Object.assign({}, selected, { [id]: true }));\n    }\n  };\n\n  const selectedCount = Object.keys(selected).filter((k) => (selected as any)[k] === true).length;\n  const selectedLabel =\n    selectedCount > 0 ? (\n      <span>\n        Use Selected <span className=\"badge badge-pill badge-light\">{selectedCount}</span>\n      </span>\n    ) : (\n      'Use Selected'\n    );\n\n  return (\n    <div className=\"objective-selection\">\n      <div className=\"d-flex justify-content-between mb-2\">\n        <h4>Select from existing objectives:</h4>\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          disabled={Object.keys(selected).length === 0}\n          onClick={() => props.onUseSelected(toList())}\n        >\n          {selectedLabel}\n        </button>\n      </div>\n\n      <div className=\"existing-objectives\">\n        <ObjectiveTree {...props} selected={selected} toggleSelected={toggleSelected} />\n      </div>\n\n      <h4>Or create a new objective:</h4>\n\n      <small className=\"muted\">At the end of the course, my students should be able to...</small>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            disabled={text.trim() === ''}\n            onClick={() => props.onRegisterNewObjective(text)}\n          >\n            Create\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]}