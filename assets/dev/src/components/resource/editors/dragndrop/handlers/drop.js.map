{"version":3,"file":"drop.js","sourceRoot":"","sources":["../../../../../../../src/components/resource/editors/dragndrop/handlers/drop.ts"],"names":[],"mappings":"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","sourcesContent":["import { ResourceContent } from 'data/content/resource';\nimport { DragPayload } from '../interfaces';\nimport * as Immutable from 'immutable';\nimport * as Persistence from 'data/persistence/activity';\n\nconst scrollToResourceEditor = (contentId: string) => {\n  setTimeout(() => {\n    document.querySelector(`#re${contentId}`)?.scrollIntoView({ behavior: 'smooth' });\n  });\n};\n\nexport const dropHandler =\n  (\n    content: Immutable.OrderedMap<string, ResourceContent>,\n    onEditContentList: (content: Immutable.OrderedMap<string, ResourceContent>) => void,\n    projectSlug: string,\n    onDragEnd: () => void,\n    editMode: boolean,\n  ) =>\n  (e: React.DragEvent<HTMLDivElement>, index: number) => {\n    onDragEnd();\n\n    if (editMode) {\n      const data = e.dataTransfer.getData('application/x-oli-resource-content');\n\n      if (data) {\n        const droppedContent = JSON.parse(data) as DragPayload;\n\n        const sourceIndex = content.keySeq().findIndex((k) => k === droppedContent.id);\n\n        if (sourceIndex === -1) {\n          // This is a cross window drop, we insert it but have to have to\n          // ensure that for activities that we create a new activity for\n          // tied to this project\n          if (droppedContent.type === 'ActivityPayload') {\n            if (droppedContent.project !== projectSlug) {\n              Persistence.create(\n                droppedContent.project,\n                droppedContent.activity.typeSlug,\n                droppedContent.activity.model,\n                [],\n              ).then((result: Persistence.Created) => {\n                onEditContentList(\n                  content\n                    .take(index)\n                    .concat([[droppedContent.id, droppedContent.reference]])\n                    .concat(content.skip(index)),\n                );\n              });\n            } else {\n              onEditContentList(\n                content\n                  .take(index)\n                  .concat([[droppedContent.id, droppedContent.reference]])\n                  .concat(content.skip(index)),\n              );\n            }\n          } else if (droppedContent.type === 'content') {\n            onEditContentList(\n              content\n                .take(index)\n                .concat([[droppedContent.id, droppedContent]])\n                .concat(content.skip(index)),\n            );\n          } else {\n            onEditContentList(\n              content\n                .take(index)\n                .concat([[droppedContent.id, droppedContent.data]])\n                .concat(content.skip(index)),\n            );\n          }\n\n          // scroll to inserted item\n          scrollToResourceEditor(droppedContent.id);\n          return;\n        }\n        if (sourceIndex > -1) {\n          // Handle a same window drag and drop\n          const adjusted = sourceIndex < index ? index - 1 : index;\n\n          let toInsert;\n          if (droppedContent.type === 'ActivityPayload') {\n            toInsert = droppedContent.reference;\n          } else if (droppedContent.type === 'content') {\n            toInsert = droppedContent;\n          } else {\n            toInsert = droppedContent.data;\n          }\n\n          const prefix = content.delete(droppedContent.id).take(adjusted);\n          const suffix = content.delete(droppedContent.id).skip(adjusted);\n          const reordered = prefix.concat([[toInsert.id, toInsert]]).concat(suffix);\n\n          onEditContentList(reordered);\n\n          // scroll to moved item\n          scrollToResourceEditor(droppedContent.id);\n          return;\n        }\n      }\n\n      // Handle a drag and drop from VSCode\n      const text = e.dataTransfer.getData('codeeditors');\n      if (text) {\n        try {\n          const json = JSON.parse(text);\n          const parsedContent = JSON.parse(json[0].content);\n\n          // Remove it if we find the same identified content item\n          const inserted = content\n            .filter((contentItem) => parsedContent.id !== contentItem.id)\n            // Then insert it\n            .set(parsedContent.id, parsedContent);\n\n          onEditContentList(inserted);\n\n          // scroll to inserted item\n          scrollToResourceEditor(parsedContent.id);\n        } catch (err) {\n          // eslint-disable-next-line\n        }\n      }\n    }\n  };\n"]}