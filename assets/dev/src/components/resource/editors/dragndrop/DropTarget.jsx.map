{"version":3,"file":"DropTarget.jsx","sourceRoot":"","sources":["../../../../../../src/components/resource/editors/dragndrop/DropTarget.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAQ9C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAmB,EAAE,EAAE;IAC3E,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE9C,MAAM,eAAe,GAAG,CAAC,CAAkC,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjF,MAAM,eAAe,GAAG,CAAC,CAAkC,EAAE,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAClF,MAAM,UAAU,GAAG,CAAC,CAAkC,EAAE,EAAE;QACxD,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,UAAU,CAAC,KAAK,CAAC,CAAC;QAClB,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACnB,CAAC,CAAC;IACF,MAAM,UAAU,GAAG,CAAC,CAAkC,EAAE,EAAE;QACxD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,cAAc,EAAE,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAClB,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAC3F,WAAW,CAAC,CAAC,eAAe,CAAC,CAC7B,WAAW,CAAC,CAAC,eAAe,CAAC,CAC7B,MAAM,CAAC,CAAC,UAAU,CAAC,CACnB,UAAU,CAAC,CAAC,UAAU,CAAC,CACxB,EAAE,GAAG,CAAC,CACR,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { classNames } from 'utils/classNames';\n\ninterface DropTargetProps {\n  onDrop: (e: React.DragEvent<HTMLDivElement>, index: number) => void;\n  id: string;\n  index: number;\n  isLast: boolean;\n}\nexport const DropTarget = ({ id, index, isLast, onDrop }: DropTargetProps) => {\n  const [hovered, setHovered] = useState(false);\n\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => setHovered(true);\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => setHovered(false);\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setHovered(false);\n    onDrop(e, index);\n  };\n  const handleOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      key={id + '-drop'}\n      className={classNames(['drop-target ', hovered ? 'hovered' : '', isLast ? 'is-last' : ''])}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDrop}\n      onDragOver={handleOver}\n    ></div>\n  );\n};\n"]}