{"version":3,"file":"createEditor.jsx","sourceRoot":"","sources":["../../../../../src/components/resource/editors/createEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ActivityReference, ResourceContent, ResourceContext } from 'data/content/resource';\nimport { StructuredContentEditor } from 'components/content/StructuredContentEditor';\nimport { ContentBlock } from './ContentBlock';\nimport { ActivityBlock } from './ActivityBlock';\nimport { getToolbarForContentType } from '../../editing/toolbars/insertion/items';\nimport * as Immutable from 'immutable';\nimport { ActivityEditContext } from 'data/content/activity';\nimport { InlineActivityEditor, EditorUpdate } from 'components/activity/InlineActivityEditor';\nimport { Objective } from 'data/content/objective';\nimport { Undoable } from 'components/activities/types';\nimport { ActivityBankSelection } from './ActivityBankSelection';\nimport { Tag } from 'data/content/tags';\nimport { ActivityEditorMap } from 'data/content/editors';\nimport { defaultActivityState } from 'data/activities/utils';\n\n// content or referenced activities\nexport const createEditor = (\n  resourceContext: ResourceContext,\n  content: ResourceContent,\n  index: number,\n  activities: Immutable.Map<string, ActivityEditContext>,\n  editMode: boolean,\n  resourceSlug: string,\n  projectSlug: string,\n  graded: boolean,\n  objectivesMap: any,\n  editorProps: any,\n  allObjectives: Objective[],\n  allTags: Tag[],\n  editorMap: ActivityEditorMap,\n  onEdit: (content: ResourceContent) => void,\n  onActivityEdit: (key: string, update: EditorUpdate) => void,\n  onPostUndoable: (key: string, undoable: Undoable) => void,\n  onRegisterNewObjective: (o: Objective) => void,\n  onRegisterNewTag: (o: Tag) => void,\n): JSX.Element => {\n  if (content.type === 'selection') {\n    return (\n      <ContentBlock {...editorProps} contentItem={content} index={index}>\n        <ActivityBankSelection\n          editorMap={editorMap}\n          key={content.id}\n          editMode={editMode}\n          selection={content}\n          onChange={onEdit}\n          projectSlug={projectSlug}\n          allObjectives={Immutable.List<Objective>(allObjectives)}\n          allTags={Immutable.List<Tag>(allTags)}\n          onRegisterNewObjective={onRegisterNewObjective}\n          onRegisterNewTag={onRegisterNewTag}\n        />\n      </ContentBlock>\n    );\n  }\n\n  if (content.type === 'content') {\n    return (\n      <ContentBlock {...editorProps} contentItem={content} index={index}>\n        <StructuredContentEditor\n          key={content.id}\n          editMode={editMode}\n          content={content}\n          onEdit={onEdit}\n          projectSlug={projectSlug}\n          toolbarItems={getToolbarForContentType(null)}\n        />\n      </ContentBlock>\n    );\n  }\n\n  const activity = activities.get((content as ActivityReference).activitySlug);\n\n  if (activity !== undefined) {\n    const previewText = activity.model.authoring?.previewText;\n\n    const slugsAsKeys = Object.keys(activity.objectives).reduce((map: any, key) => {\n      (activity.objectives as any)[key as any].forEach((slug: string) => {\n        map[slug] = true;\n      });\n      return map;\n    }, {});\n\n    const objectives = Object.keys(slugsAsKeys).map((slug) => objectivesMap[slug]);\n\n    const props = {\n      model: activity.model,\n      activitySlug: activity.activitySlug,\n      state: defaultActivityState(activity.model),\n      typeSlug: activity.typeSlug,\n      editMode: editMode,\n      graded: false,\n      projectSlug: projectSlug,\n      resourceSlug: resourceSlug,\n      resourceId: resourceContext.resourceId,\n      resourceTitle: resourceContext.title,\n      authoringElement: activity.authoringElement,\n      friendlyName: activity.friendlyName,\n      description: activity.description,\n      objectives: activity.objectives,\n      allObjectives,\n      tags: activity.tags,\n      allTags,\n      activityId: activity.activityId,\n      title: activity.title,\n      onEdit: (update: EditorUpdate) => onActivityEdit(activity.activitySlug, update),\n      onPostUndoable: (undoable: Undoable) => onPostUndoable(activity.activitySlug, undoable),\n      onRegisterNewObjective,\n      onRegisterNewTag,\n      banked: false,\n    };\n\n    return (\n      <ActivityBlock\n        {...editorProps}\n        contentItem={content}\n        label={activity.friendlyName}\n        projectSlug={projectSlug}\n        resourceSlug={resourceSlug}\n        objectives={objectives}\n        previewText={previewText}\n      >\n        <InlineActivityEditor {...props} />\n      </ActivityBlock>\n    );\n  }\n\n  return (\n    <div className=\"alert alert-danger\">\n      There was a problem rendering this content block. The content type may not be supported.\n    </div>\n  );\n};\n"]}