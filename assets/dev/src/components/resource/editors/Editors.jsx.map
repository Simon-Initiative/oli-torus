{"version":3,"file":"Editors.jsx","sourceRoot":"","sources":["../../../../../src/components/resource/editors/Editors.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as Immutable from 'immutable';\nimport React, { useState } from 'react';\nimport isHotkey from 'is-hotkey';\nimport {\n  ResourceContent,\n  ActivityPurposes,\n  ContentPurposes,\n  ResourceContext,\n} from 'data/content/resource';\nimport { ActivityEditContext } from 'data/content/activity';\nimport { ActivityEditorMap } from 'data/content/editors';\nimport { ProjectSlug, ResourceSlug } from 'data/types';\nimport { Objective, ResourceId } from 'data/content/objective';\nimport { classNames } from 'utils/classNames';\nimport { AddResourceOrDropTarget } from './AddResourceOrDropTarget';\nimport { createEditor } from './createEditor';\nimport { focusHandler } from './dragndrop/handlers/focus';\nimport { moveHandler } from './dragndrop/handlers/move';\nimport { dragEndHandler } from './dragndrop/handlers/dragEnd';\nimport { dropHandler } from './dragndrop/handlers/drop';\nimport { getDragPayload } from './dragndrop/utils';\nimport { dragStartHandler } from './dragndrop/handlers/dragStart';\nimport { EditorUpdate } from 'components/activity/InlineActivityEditor';\nimport { Undoable } from 'components/activities/types';\nimport { Tag } from 'data/content/tags';\nimport { EditorErrorBoundary } from './editor_error_boundary';\n\nexport type EditorsProps = {\n  editMode: boolean; // Whether or not we can edit\n  content: Immutable.OrderedMap<string, ResourceContent>; // Content of the resource\n  onEdit: (content: ResourceContent, key: string) => void;\n  onEditContentList: (content: Immutable.OrderedMap<string, ResourceContent>) => void;\n  onRemove: (key: string) => void;\n  onAddItem: (c: ResourceContent, index: number, a?: ActivityEditContext) => void;\n  editorMap: ActivityEditorMap; // Map of activity types to activity elements\n  graded: boolean;\n  activityContexts: Immutable.Map<string, ActivityEditContext>;\n  projectSlug: ProjectSlug;\n  resourceSlug: ResourceSlug;\n  resourceContext: ResourceContext;\n  allTags: Immutable.List<Tag>;\n  objectives: Immutable.List<Objective>;\n  childrenObjectives: Immutable.Map<ResourceId, Immutable.List<Objective>>;\n  onRegisterNewObjective: (o: Objective) => void;\n  onRegisterNewTag: (o: Tag) => void;\n  onActivityEdit: (key: string, update: EditorUpdate) => void;\n  onPostUndoable: (key: string, undoable: Undoable) => void;\n};\n\n// The list of editors\nexport const Editors = (props: EditorsProps) => {\n  const objectivesMap = props.resourceContext.allObjectives.reduce((m: any, o) => {\n    m[o.id] = o.title;\n    return m;\n  }, {});\n\n  const {\n    editMode,\n    graded,\n    content,\n    activityContexts,\n    projectSlug,\n    resourceSlug,\n    editorMap,\n    onEditContentList,\n    onAddItem,\n    onActivityEdit,\n    onPostUndoable,\n    onRegisterNewObjective,\n  } = props;\n\n  const [assistive, setAssistive] = useState('');\n  const [activeDragId, setActiveDragId] = useState<string | null>(null);\n  const isReorderMode = activeDragId !== null;\n  const onFocus = focusHandler(setAssistive, content, editorMap, activityContexts);\n  const onMove = moveHandler(content, onEditContentList, editorMap, activityContexts, setAssistive);\n  const onDragEnd = dragEndHandler(setActiveDragId);\n  const onDrop = dropHandler(content, onEditContentList, projectSlug, onDragEnd, editMode);\n  const allObjectives = props.objectives.toArray();\n  const allTags = props.allTags.toArray();\n\n  const editors = content.entrySeq().map(([contentKey, contentValue], index) => {\n    const onEdit = (u: ResourceContent) => props.onEdit(u, contentKey);\n    const onRemove = () => props.onRemove(contentKey);\n    const onEditPurpose = (purpose: string) => {\n      props.onEdit(Object.assign(contentValue, { purpose }), contentKey);\n    };\n\n    const purposes = contentValue.type === 'content' ? ContentPurposes : ActivityPurposes;\n\n    const dragPayload = getDragPayload(contentValue, activityContexts, projectSlug);\n    const onDragStart = dragStartHandler(dragPayload, contentValue, setActiveDragId);\n\n    // register keydown handlers\n    const isShiftArrowDown = isHotkey('shift+down');\n    const isShiftArrowUp = isHotkey('shift+up');\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (isShiftArrowDown(e.nativeEvent)) {\n        onMove(contentKey, false);\n      } else if (isShiftArrowUp(e.nativeEvent)) {\n        onMove(contentKey, true);\n      }\n    };\n\n    const editorProps = {\n      purposes,\n      onDragStart,\n      onDragEnd,\n      editMode,\n      onEditPurpose,\n      content,\n      onRemove,\n    };\n\n    const editor = createEditor(\n      props.resourceContext,\n      contentValue,\n      index,\n      activityContexts,\n      editMode,\n      resourceSlug,\n      projectSlug,\n      graded,\n      objectivesMap,\n      editorProps,\n      allObjectives,\n      allTags,\n      editorMap,\n      onEdit,\n      onActivityEdit,\n      onPostUndoable,\n      onRegisterNewObjective,\n      props.onRegisterNewTag,\n    );\n\n    return (\n      <div\n        key={'control-container-' + contentKey}\n        id={`re${contentKey}`}\n        className={classNames([\n          'resource-block-editor-and-controls',\n          contentKey,\n          contentKey === activeDragId ? 'is-dragging' : '',\n        ])}\n      >\n        <AddResourceOrDropTarget\n          id={contentKey}\n          objectives={props.objectives}\n          childrenObjectives={props.childrenObjectives}\n          onRegisterNewObjective={props.onRegisterNewObjective}\n          index={index}\n          editMode={editMode}\n          isReorderMode={isReorderMode}\n          editorMap={editorMap}\n          resourceContext={props.resourceContext}\n          onAddItem={onAddItem}\n          onDrop={onDrop}\n        />\n\n        <div\n          className={classNames(['resource-block-editor', isReorderMode ? 'reorder-mode' : ''])}\n          onKeyDown={handleKeyDown}\n          onFocus={(_e) => onFocus(contentKey)}\n          role=\"option\"\n          aria-describedby=\"content-list-operation\"\n          tabIndex={index + 1}\n        >\n          <EditorErrorBoundary id={contentKey}>{editor}</EditorErrorBoundary>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"editors d-flex flex-column flex-grow-1\">\n      {editors}\n\n      <AddResourceOrDropTarget\n        {...props}\n        onRegisterNewObjective={props.onRegisterNewObjective}\n        id=\"last\"\n        index={editors.size || 0}\n        editMode={editMode}\n        isReorderMode={isReorderMode}\n        editorMap={editorMap}\n        resourceContext={props.resourceContext}\n        onAddItem={onAddItem}\n        onDrop={onDrop}\n      />\n    </div>\n  );\n};\n"]}