{"version":3,"file":"ActivityBlock.jsx","sourceRoot":"","sources":["../../../../../src/components/resource/editors/ActivityBlock.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { State, Dispatch } from 'state';\nimport { DragHandle } from '../DragHandle';\nimport { Purpose } from 'components/content/Purpose';\nimport { DeleteButton } from 'components/misc/DeleteButton';\nimport { Purpose as PurposeType, ResourceContent, ActivityReference } from 'data/content/resource';\nimport * as Immutable from 'immutable';\nimport { updatePreferences } from 'state/preferences';\nimport { Preferences } from 'data/persistence/preferences';\nimport { valueOr } from 'utils/common';\nimport { Maybe } from 'tsmonad';\n\nconst getDescription = (props: ActivityBlockProps) => {\n  return props.previewText !== '' ? props.previewText : <i>Empty</i>;\n};\n\ninterface ActivityBlockProps {\n  children?: JSX.Element | JSX.Element[];\n  editMode: boolean;\n  content: Immutable.List<ResourceContent>;\n  purposes: PurposeType[];\n  contentItem: ActivityReference;\n  label: string;\n  projectSlug: string;\n  resourceSlug: string;\n  previewText: string;\n  objectives: string[];\n  preferences: Maybe<Preferences>;\n  onDragStart: (e: React.DragEvent<HTMLDivElement>, id: string) => void;\n  onDragEnd: () => void;\n  onEditPurpose: (purpose: string) => void;\n  onRemove: () => void;\n  onUpdatePreferences: (p: Partial<Preferences>) => any;\n}\n\nconst ActivityBlock = (props: ActivityBlockProps) => {\n  const id = `activity-header${props.contentItem.activitySlug}`;\n\n  return (\n    <div className=\"activity-block resource-content-frame card\">\n      <div\n        className=\"card-header px-2\"\n        draggable={props.editMode}\n        onDragStart={(e) => props.onDragStart(e, id)}\n        onDragEnd={props.onDragEnd}\n      >\n        <div className=\"d-flex flex-row align-items-center\">\n          <div className=\"d-flex align-items-center flex-grow-1\">\n            <DragHandle style={{ height: 24, marginRight: 10 }} />\n          </div>\n\n          <Purpose\n            purpose={props.contentItem.purpose}\n            purposes={props.purposes}\n            editMode={props.editMode}\n            onEdit={props.onEditPurpose}\n          />\n\n          <DeleteButton editMode={props.content.size > 1} onClick={props.onRemove} />\n        </div>\n      </div>\n      <div className=\"card-body p-2\">{props.children}</div>\n      <div className=\"reorder-mode-description\">{getDescription(props)}</div>\n    </div>\n  );\n};\n\ninterface StateProps {\n  preferences: Maybe<Preferences>;\n}\n\ninterface DispatchProps {\n  onUpdatePreferences: (p: Partial<Preferences>) => any;\n}\n\n// eslint-disable-next-line\ntype OwnProps = {};\n\nconst mapStateToProps = (state: State, ownProps: OwnProps): StateProps => {\n  const { preferences } = state.preferences;\n\n  return {\n    preferences,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: OwnProps): DispatchProps => {\n  return {\n    onUpdatePreferences: ({ live_preview_display }: Partial<Preferences>) =>\n      dispatch(updatePreferences({ live_preview_display: valueOr(live_preview_display, null) })),\n  };\n};\n\nconst controller = connect<StateProps, DispatchProps, OwnProps>(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ActivityBlock);\n\nexport { controller as ActivityBlock };\n"]}