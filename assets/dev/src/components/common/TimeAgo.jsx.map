{"version":3,"file":"TimeAgo.jsx","sourceRoot":"","sources":["../../../../src/components/common/TimeAgo.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAM5C,MAAM,OAAO,GAA2B,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,EAAE,EAAE;IACpE,IAAI,CAAC,SAAS,EAAE;QACd,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;KACtB;IAED,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC,MAAM,kCAAkC,GAAG,CAAC,MAAc,EAAE,EAAE;QAC5D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,IAAI,GAAG,CAAC,EAAE;YACZ,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,OAAO,WAAW,CAAC;aACpB;YACD,OAAO,GAAG,IAAI,YAAY,CAAC;SAC5B;aAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YACpB,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,OAAO,aAAa,CAAC;aACtB;YACD,OAAO,GAAG,KAAK,cAAc,OAAO,cAAc,CAAC;SACpD;aAAM,IAAI,OAAO,GAAG,CAAC,EAAE;YACtB,IAAI,OAAO,KAAK,CAAC,EAAE;gBACjB,OAAO,cAAc,CAAC;aACvB;YACD,OAAO,GAAG,OAAO,eAAe,CAAC;SAClC;aAAM;YACL,OAAO,mBAAmB,CAAC;SAC5B;IACH,CAAC,CAAC;IACF,MAAM,IAAI,GAAG,GAAG,EAAE;QAChB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,MAAM,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC;QAC1C,MAAM,cAAc,GAAG,kCAAkC,CAAC,SAAS,CAAC,CAAC;QACrE,OAAO,CAAC,cAAc,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,UAAU,EAAE;YACd,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;gBAChC,IAAI,EAAE,CAAC;YACT,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,EAAE,CAAC;SACR;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;IAC5B,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\n\ninterface TimeAgoProps {\n  timeStamp: number;\n  liveUpdate: boolean;\n}\nconst TimeAgo: React.FC<TimeAgoProps> = ({ timeStamp, liveUpdate }) => {\n  if (!timeStamp) {\n    return <span></span>;\n  }\n\n  const [time, setTime] = useState('');\n  const MillisToDaysHoursMinutesAndSeconds = (millis: number) => {\n    const minutes = Math.floor(millis / 60000);\n    const hours = Math.floor((millis / (1000 * 60 * 60)) % 24);\n    const days = Math.floor(millis / (1000 * 60 * 60 * 24));\n    if (days > 0) {\n      if (days === 1) {\n        return 'a day ago';\n      }\n      return `${days}  days ago`;\n    } else if (hours > 0) {\n      if (hours === 1) {\n        return 'an hour ago';\n      }\n      return `${hours} hours and ${minutes} minutes ago`;\n    } else if (minutes > 0) {\n      if (minutes === 1) {\n        return 'a minute ago';\n      }\n      return `${minutes}  minutes ago`;\n    } else {\n      return 'a few seconds ago';\n    }\n  };\n  const tick = () => {\n    const currentDate = Date.now();\n    const timeSince = currentDate - timeStamp;\n    const timeTickerText = MillisToDaysHoursMinutesAndSeconds(timeSince);\n    setTime(timeTickerText);\n  };\n\n  useEffect(() => {\n    if (liveUpdate) {\n      const interval = setInterval(() => {\n        tick();\n      }, 1000);\n      return () => clearInterval(interval);\n    } else {\n      tick();\n    }\n  }, [timeStamp, liveUpdate]);\n  return <span>{time}</span>;\n};\n\nexport default TimeAgo;\n"]}