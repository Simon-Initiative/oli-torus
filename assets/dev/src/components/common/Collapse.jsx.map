{"version":3,"file":"Collapse.jsx","sourceRoot":"","sources":["../../../../src/components/common/Collapse.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,IAAI,MAAM,YAAY,CAAC;AAgB9B,MAAM,OAAO,QAAS,SAAQ,KAAK,CAAC,aAA2C;IAC7E,YAAY,KAAoB;QAC9B,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC;QAEjB,IAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,IAAI;SAChB,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,MAAM;QACJ,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,eAAe,CAAC;QAC3E,IAAI,iBAAiB,GAAG,IAAI,CAAC;QAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YAC5D,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;SACxC;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACrE,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;SACzC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAEnD,OAAO,CACL,CAAC,GAAG,CACF;QAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CACnE;UAAA,CAAC,SAAS,CAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CACjC;QAAA,EAAE,MAAM,CACR;QAAA,CAAC,iBAAiB,CAClB;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAC1C;UAAA,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CACtB;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,GAAG,CAAC,CACP,CAAC;IACJ,CAAC;CACF","sourcesContent":["import * as React from 'react';\nimport guid from 'utils/guid';\n\nexport interface Collapse {\n  id: string;\n}\n\nexport interface CollapseProps {\n  caption: string;\n  details?: string;\n  expanded?: any; // Component to display in place of details when expanded\n}\n\nexport interface CollapseState {\n  collapsed: boolean;\n}\n\nexport class Collapse extends React.PureComponent<CollapseProps, CollapseState> {\n  constructor(props: CollapseProps) {\n    super(props);\n\n    this.id = guid();\n\n    this.state = {\n      collapsed: true,\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({ collapsed: !this.state.collapsed });\n  }\n\n  render() {\n    const collapsedOrNot = this.state.collapsed ? 'collapse' : 'collapse.show';\n    let detailsOrExpanded = null;\n    if (this.props.details !== undefined && this.state.collapsed) {\n      detailsOrExpanded = this.props.details;\n    } else if (this.props.expanded !== undefined && !this.state.collapsed) {\n      detailsOrExpanded = this.props.expanded;\n    }\n\n    const indicator = this.state.collapsed ? '+' : '-';\n\n    return (\n      <div>\n        <button onClick={this.onClick} type=\"button\" className=\"btn btn-link\">\n          {indicator} {this.props.caption}\n        </button>\n        {detailsOrExpanded}\n        <div className={collapsedOrNot} id={this.id}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n"]}