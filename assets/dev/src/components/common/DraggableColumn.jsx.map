{"version":3,"file":"DraggableColumn.jsx","sourceRoot":"","sources":["../../../../src/components/common/DraggableColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  DragDropContext,\n  Draggable as DraggableDND,\n  DraggableStateSnapshot,\n  DraggingStyle,\n  Droppable,\n  DropResult,\n  NotDraggingStyle,\n} from 'react-beautiful-dnd';\nimport guid from 'utils/guid';\nimport './DraggableColumn.scss';\n\nconst DragIndicator: React.FC = () => {\n  return <div className=\"material-icons draggableColumn__dragIndicator\">drag_indicator</div>;\n};\ninterface ItemProps {\n  id: string;\n  itemAriaLabel?: string;\n  item: any;\n  children: (item: any, index: number) => React.ReactNode;\n\n  setItems?: (items: any[]) => void;\n  items?: any[];\n  index?: number;\n  displayOutline?: boolean;\n}\nconst Item: React.FC<ItemProps> = ({\n  id,\n  index = 0,\n  itemAriaLabel,\n  item,\n  items = [],\n  setItems = () => undefined,\n  children,\n  displayOutline,\n}) => {\n  return (\n    <DraggableDND draggableId={id} key={id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className={'draggableColumn__card' + (displayOutline ? ' draggableColumn__outlined' : '')}\n          style={getStyle(provided.draggableProps.style, snapshot)}\n          aria-label={itemAriaLabel || 'Item ' + index}\n          onKeyDown={(e) => reorderByKey(e, index, items, item, setItems)}\n        >\n          {children(item, index)}\n        </div>\n      )}\n    </DraggableDND>\n  );\n};\n\ninterface ColumnProps {\n  setItems: (items: any[]) => void;\n  items: any[];\n  displayOutline?: boolean;\n}\nexport const Column: React.FC<ColumnProps> = ({ items, setItems, children, displayOutline }) => {\n  return (\n    <DragDropContext onDragEnd={(result) => reorderByMouse(result, items, setItems)}>\n      <Droppable droppableId={'items-' + guid()}>\n        {(provided) => (\n          <div\n            {...provided.droppableProps}\n            className=\"draggableColumn__container\"\n            ref={provided.innerRef}\n          >\n            {React.Children.map(children, (c, index) =>\n              React.isValidElement(c) && c.type === Item ? (\n                <Item\n                  displayOutline={displayOutline}\n                  {...c.props}\n                  index={index}\n                  items={items}\n                  setItems={setItems}\n                />\n              ) : (\n                c\n              ),\n            )}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nconst getStyle = (\n  style: DraggingStyle | NotDraggingStyle | undefined,\n  snapshot: DraggableStateSnapshot,\n) => {\n  const snapshotStyle = snapshot.draggingOver ? { 'pointer-events': 'none' } : {};\n  if (style?.transform) {\n    const axisLockY = `translate(0px, ${style.transform.split(',').pop()}`;\n    return {\n      ...style,\n      ...snapshotStyle,\n      minHeight: 41,\n      transform: axisLockY,\n    };\n  }\n  return {\n    ...style,\n    ...snapshotStyle,\n    minHeight: 41,\n  };\n};\n\nconst reorderByMouse = (\n  { destination, source }: DropResult,\n  items: unknown[],\n  setItems: (is: unknown[]) => void,\n): void => {\n  if (\n    !destination ||\n    (destination.droppableId === source.droppableId && destination.index === source.index)\n  ) {\n    return;\n  }\n\n  const item = items[source.index];\n  const newItems = Array.from(items);\n  newItems.splice(source.index, 1);\n  newItems.splice(destination.index, 0, item);\n\n  setItems(newItems);\n};\n\nconst reorderByKey = (\n  e: React.KeyboardEvent<HTMLDivElement>,\n  index: number,\n  items: any[],\n  item: any,\n  setItems: (is: any[]) => void,\n) => {\n  if (\n    (e.key === 'ArrowUp' && e.getModifierState('Shift')) ||\n    (e.key === 'ArrowDown' && e.getModifierState('Shift'))\n  ) {\n    const newItems = items.slice();\n    newItems.splice(index, 1);\n    e.stopPropagation();\n\n    if (e.key === 'ArrowUp' && index > 0) {\n      newItems.splice(index - 1, 0, item);\n    }\n    if (e.key === 'ArrowDown' && index < items.length - 1) {\n      newItems.splice(index + 1, 0, item);\n    }\n    setItems(newItems);\n  }\n};\n\nexport const Draggable = {\n  Column,\n  Item,\n  DragIndicator,\n};\n"]}