{"version":3,"file":"Clause.jsx","sourceRoot":"","sources":["../../../../src/components/logic/Clause.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Bank from 'data/content/bank';\nimport { LogicProps } from './common';\nimport { Expression } from './Expression';\nimport { CloseButton } from '../misc/CloseButton';\nimport guid from 'utils/guid';\n\nexport interface ClauseProps extends LogicProps {\n  clause: Bank.Clause;\n  onChange: (clause: Bank.Clause) => void;\n}\n\nconst replaceAt = (array: any, index: number, item: any) => {\n  const updated = array.slice();\n  updated[index] = item;\n  return updated;\n};\n\nconst removeAt = (array: any, index: number) => {\n  const updated = array.slice();\n  updated.splice(index, 1);\n  return updated;\n};\n\nexport const Clause: React.FC<ClauseProps> = (props: ClauseProps) => {\n  const [id] = React.useState(guid());\n  const { clause, editMode, onChange } = props;\n\n  const children = (clause.children as any).map((c: any, i: number) => {\n    if (c.operator === Bank.ClauseOperator.all || c.operator === Bank.ClauseOperator.any) {\n      return (\n        <Clause\n          {...props}\n          clause={c}\n          onChange={(e) => {\n            const index = i;\n            onChange(Object.assign({}, clause, { children: replaceAt(clause.children, index, e) }));\n          }}\n          onRemove={() => {\n            const index = i;\n            onChange(Object.assign({}, clause, { children: removeAt(clause.children, index) }));\n          }}\n        />\n      );\n    } else {\n      return (\n        <Expression\n          {...props}\n          expression={c as unknown as Bank.Expression}\n          onChange={(e) => {\n            const index = i;\n            onChange(Object.assign({}, clause, { children: replaceAt(clause.children, index, e) }));\n          }}\n          onRemove={() => {\n            const index = i;\n            onChange(Object.assign({}, clause, { children: removeAt(clause.children, index) }));\n          }}\n        />\n      );\n    }\n  });\n\n  const onOperatorChange = (e: any) => {\n    onChange(Object.assign({}, clause, { operator: e.currentTarget.value }));\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between mb-3\">\n        <div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              disabled={!editMode}\n              onChange={onOperatorChange}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name={'clause_radio_' + id}\n              id={'radio1_' + id}\n              value={Bank.ClauseOperator.all}\n              checked={clause.operator === Bank.ClauseOperator.all}\n            />\n            <label className=\"form-check-label\" htmlFor={'radio1_' + id}>\n              All of the following\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              disabled={!editMode}\n              onChange={onOperatorChange}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name={'clause_radio_' + id}\n              id={'radio2_' + id}\n              value={Bank.ClauseOperator.any}\n              checked={clause.operator === Bank.ClauseOperator.any}\n            />\n            <label className=\"form-check-label\" htmlFor={'radio2_' + id}>\n              Any of the following\n            </label>\n          </div>\n        </div>\n        <CloseButton editMode={props.editMode} onClick={() => props.onRemove()} />\n      </div>\n      {children}\n    </div>\n  );\n};\n"]}