{"version":3,"file":"Expression.jsx","sourceRoot":"","sources":["../../../../src/components/logic/Expression.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as Bank from 'data/content/bank';\nimport { Select } from 'components/common/Selection';\nimport { Objectives } from 'components/resource/Objectives';\nimport { Fact } from 'data/content/bank';\nimport { Tags } from 'components/resource/Tags';\nimport { ActivityTypeSelection } from './ActivityTypeSelection';\nimport { TextInput } from 'components/common/TextInput';\nimport { LogicProps } from '../../components/logic/common';\nimport { CloseButton } from '../../components/misc/CloseButton';\n\nexport interface ExpressionProps extends LogicProps {\n  expression: Bank.Expression;\n  onChange: (expression: Bank.Expression) => void;\n\n  // Controls the mode to allow usage wihin a \"fixed\" UI\n  // context where the user cannot change the fact or remove the expression\n  fixedFact?: boolean;\n}\n\nconst baseFacts = [\n  { value: 'objectives', label: 'Objectives' },\n  { value: 'type', label: 'Item Type' },\n  { value: 'tags', label: 'Tags' },\n];\n\ntype FactOperator = {\n  operator: Bank.ExpressionOperator;\n  label: string;\n  input: 'single' | 'multiple' | 'text';\n};\n\nconst operatorsByFact: { [id: string]: FactOperator[] } = {\n  objectives: [\n    { operator: Bank.ExpressionOperator.contains, label: 'Contains', input: 'multiple' },\n    {\n      operator: Bank.ExpressionOperator.doesNotContain,\n      label: 'Does Not Contain',\n      input: 'multiple',\n    },\n    { operator: Bank.ExpressionOperator.doesNotEqual, label: 'Does Not Equal', input: 'multiple' },\n    { operator: Bank.ExpressionOperator.equals, label: 'Equals', input: 'multiple' },\n  ],\n  tags: [\n    { operator: Bank.ExpressionOperator.contains, label: 'Contains', input: 'multiple' },\n    {\n      operator: Bank.ExpressionOperator.doesNotContain,\n      label: 'Does Not Contain',\n      input: 'multiple',\n    },\n    { operator: Bank.ExpressionOperator.doesNotEqual, label: 'Does Not Equal', input: 'multiple' },\n    { operator: Bank.ExpressionOperator.equals, label: 'Equals', input: 'multiple' },\n  ],\n  type: [\n    { operator: Bank.ExpressionOperator.contains, label: 'Contains', input: 'multiple' },\n    {\n      operator: Bank.ExpressionOperator.doesNotContain,\n      label: 'Does Not Contain',\n      input: 'multiple',\n    },\n  ],\n  text: [{ operator: Bank.ExpressionOperator.contains, label: 'Contains Text', input: 'text' }],\n};\n\nconst textFact = { value: 'text', label: 'Activity Content' };\n\nexport const Expression: React.FC<ExpressionProps> = (props: ExpressionProps) => {\n  const onChangeFact = (fact: string) => {\n    // change fact and reset the value list\n    const updated = Object.assign({}, props.expression, { fact, value: [] });\n\n    // As facts are changed, ensure the operator remains valid for that fact\n    if (\n      operatorsByFact[fact].filter((fo) => fo.operator === props.expression.operator).length === 0\n    ) {\n      props.onChange(Object.assign({}, updated, { operator: operatorsByFact[fact][0].operator }));\n    } else {\n      props.onChange(updated);\n    }\n  };\n  const onChangeOperator = (operator: string) => {\n    const updated = Object.assign({}, props.expression, { operator });\n    props.onChange(updated);\n  };\n\n  const facts = [...baseFacts, ...(props.allowText ? [textFact] : [])].map((f) => {\n    return (\n      <option key={f.value} value={f.value} selected={props.expression.fact.toString() === f.value}>\n        {f.label}\n      </option>\n    );\n  });\n\n  const operators = operatorsByFact[props.expression.fact.toString()].map(\n    (factOperator: FactOperator) => {\n      return (\n        <option\n          key={factOperator.operator}\n          value={factOperator.operator}\n          selected={props.expression.operator === factOperator.operator}\n        >\n          {factOperator.label}\n        </option>\n      );\n    },\n  );\n\n  const buildValueEditor = () => {\n    if (props.expression.fact === Fact.objectives) {\n      return (\n        <Objectives\n          onRegisterNewObjective={props.onRegisterNewObjective}\n          selected={props.expression.value as number[]}\n          onEdit={(value) => {\n            props.onChange(Object.assign({}, props.expression, { value }));\n          }}\n          objectives={props.allObjectives.toArray()}\n          editMode={props.editMode}\n          projectSlug={props.projectSlug}\n        />\n      );\n    } else if (props.expression.fact === Fact.type) {\n      const activityTypes = Object.keys(props.editorMap).map((k) => {\n        const e = props.editorMap[k];\n        return {\n          id: e.id,\n          label: e.friendlyName,\n        };\n      });\n\n      return (\n        <ActivityTypeSelection\n          selected={props.expression.value as number[]}\n          onEdit={(value) => {\n            props.onChange(Object.assign({}, props.expression, { value }));\n          }}\n          multiple={\n            props.expression.operator === Bank.ExpressionOperator.contains ||\n            props.expression.operator === Bank.ExpressionOperator.doesNotContain\n          }\n          activities={activityTypes}\n          editMode={props.editMode}\n        />\n      );\n    } else if (props.expression.fact === Fact.text) {\n      return (\n        <TextInput\n          editMode={props.editMode}\n          label=\"Enter search text\"\n          value={props.expression.value as string}\n          type=\"text\"\n          onEdit={(value) => {\n            props.onChange(Object.assign({}, props.expression, { value }));\n          }}\n        />\n      );\n    } else if (props.expression.fact === Fact.tags) {\n      return (\n        <Tags\n          onRegisterNewTag={props.onRegisterNewTag}\n          selected={props.expression.value as number[]}\n          onEdit={(value) => {\n            props.onChange(Object.assign({}, props.expression, { value }));\n          }}\n          tags={props.allTags.toArray()}\n          editMode={props.editMode}\n          projectSlug={props.projectSlug}\n        />\n      );\n    }\n  };\n\n  const removeButton = props.fixedFact ? null : (\n    <div className=\"remove\">\n      <CloseButton editMode={props.editMode} onClick={() => props.onRemove()} />\n    </div>\n  );\n\n  return (\n    <div className=\"expression\">\n      <div className=\"fact\">\n        <Select\n          editMode={props.editMode && !props.fixedFact}\n          value={props.expression.fact.toString()}\n          onChange={(v) => onChangeFact(v)}\n        >\n          {facts}\n        </Select>\n      </div>\n      <div className=\"operator\">\n        <Select\n          editMode={props.editMode}\n          value={props.expression.operator.toString()}\n          onChange={(v) => onChangeOperator(v)}\n        >\n          {operators}\n        </Select>\n      </div>\n      <div className=\"value\">{buildValueEditor()}</div>\n      {removeButton}\n    </div>\n  );\n};\n"]}