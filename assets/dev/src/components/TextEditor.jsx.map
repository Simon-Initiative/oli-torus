{"version":3,"file":"TextEditor.jsx","sourceRoot":"","sources":["../../../src/components/TextEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport interface TextEditorProps {\n  onEdit: (model: string) => void;\n  model: string;\n  showAffordances: boolean;\n  editMode: boolean;\n  size?: 'regular' | 'large';\n  allowEmptyContents?: boolean;\n}\n\nexport interface LabelledTextEditorProps extends TextEditorProps {\n  label: string;\n}\n\nconst ESCAPE_KEYCODE = 27;\nconst ENTER_KEYCODE = 13;\n\nexport const LabelledTextEditor = (props: LabelledTextEditorProps) => {\n  return (\n    <div>\n      {props.label}: <TextEditor {...props} />\n    </div>\n  );\n};\n\nexport const TextEditor = (props: TextEditorProps) => {\n  const { model, showAffordances, onEdit, editMode } = props;\n  const allowEmpty = props.allowEmptyContents === undefined ? true : props.allowEmptyContents;\n  const [current, setCurrent] = useState(model);\n  const [value, setValue] = useState(model);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    setCurrent(model);\n  }, [model]);\n\n  const isValid = (value: string) => value.trim() !== '';\n\n  const onTitleEdit = (e: any) => {\n    setIsEditing(false);\n    if (isValid(value)) {\n      setCurrent(value);\n      onEdit(value);\n    }\n  };\n\n  const onSave = (e: any) => {\n    setIsEditing(false);\n    if (isValid(value)) {\n      setCurrent(value);\n      onEdit(value);\n    }\n  };\n\n  const onCancel = () => setIsEditing(false);\n\n  const onBeginEdit = () => {\n    setValue(current);\n    setIsEditing(true);\n  };\n\n  const onTextChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const onKeyUp = (e: any) => {\n    if (e.keyCode === ESCAPE_KEYCODE) {\n      onCancel();\n    } else if (e.keyCode === ENTER_KEYCODE) {\n      if (allowEmpty || isValid(value)) {\n        onTitleEdit(e);\n      }\n    }\n  };\n\n  const editingUI = () => {\n    const style = { marginTop: '5px', width: '90%', display: 'inline' };\n\n    const validity = !allowEmpty && !isValid(value) ? 'is-invalid' : '';\n    const size = props.size === 'large' ? 'form-control-lg' : '';\n    const inputClass = `form-control ${validity} ${size} flex-fill`;\n\n    return (\n      <div data-slate-editor className=\"d-flex\">\n        <input\n          type=\"text\"\n          className={inputClass}\n          onKeyUp={onKeyUp}\n          onChange={onTextChange}\n          value={value}\n          style={style}\n        />\n        <button\n          key=\"save\"\n          onClick={onSave}\n          type=\"button\"\n          disabled={!allowEmpty && !isValid(value)}\n          className=\"btn btn-primary btn-sm my-2 ml-2\"\n        >\n          Save\n        </button>\n        <button\n          key=\"cancel\"\n          onClick={onCancel}\n          type=\"button\"\n          className=\"btn btn-outline-secondary btn-sm my-2 ml-2\"\n        >\n          Cancel\n        </button>\n      </div>\n    );\n  };\n\n  const readOnlyUI = () => {\n    const linkStyle: any = {\n      display: 'inline-block',\n      whiteSpace: 'normal',\n      textAlign: 'left',\n      fontWeight: 'normal',\n      fontSize: props.size === 'large' ? '1.5rem' : '1rem',\n    };\n\n    return (\n      <React.Fragment>\n        <span style={linkStyle}>{current}</span>\n        {showAffordances && (\n          <button\n            key=\"edit\"\n            onClick={onBeginEdit}\n            type=\"button\"\n            disabled={!editMode}\n            className=\"btn btn-link btn-sm\"\n          >\n            Edit Title\n          </button>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return isEditing ? editingUI() : readOnlyUI();\n};\n"]}