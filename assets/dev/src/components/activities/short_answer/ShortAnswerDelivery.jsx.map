{"version":3,"file":"ShortAnswerDelivery.jsx","sourceRoot":"","sources":["../../../../../src/components/activities/short_answer/ShortAnswerDelivery.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { assertNever, valueOr } from 'utils/common';\nimport { StemDeliveryConnected } from 'components/activities/common/stem/delivery/StemDelivery';\nimport { GradedPointsConnected } from 'components/activities/common/delivery/graded_points/GradedPointsConnected';\nimport { ResetButtonConnected } from 'components/activities/common/delivery/reset_button/ResetButtonConnected';\nimport { SubmitButtonConnected } from 'components/activities/common/delivery/submit_button/SubmitButtonConnected';\nimport { HintsDeliveryConnected } from 'components/activities/common/hints/delivery/HintsDeliveryConnected';\nimport { EvaluationConnected } from 'components/activities/common/delivery/evaluation/EvaluationConnected';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport {\n  ActivityDeliveryState,\n  initializeState,\n  isEvaluated,\n  activityDeliverySlice,\n  resetAction,\n} from 'data/activities/DeliveryState';\nimport { configureStore } from 'state/store';\nimport { safelySelectStringInputs } from 'data/activities/utils';\nimport { TextInput } from 'components/activities/common/delivery/inputs/TextInput';\nimport { TextareaInput } from 'components/activities/common/delivery/inputs/TextareaInput';\nimport { NumericInput } from 'components/activities/common/delivery/inputs/NumericInput';\nimport {\n  DeliveryElement,\n  DeliveryElementProps,\n  DeliveryElementProvider,\n  useDeliveryElementContext,\n} from 'components/activities/DeliveryElement';\nimport { Manifest } from 'components/activities/types';\nimport { InputType, ShortAnswerModelSchema } from 'components/activities/short_answer/schema';\nimport { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport { Maybe } from 'tsmonad';\n\ntype InputProps = {\n  input: string;\n  onChange: (input: any) => void;\n  inputType: InputType;\n  isEvaluated: boolean;\n};\n\nconst Input = (props: InputProps) => {\n  const shared = {\n    onChange: (e: React.ChangeEvent<any>) => props.onChange(e.target.value),\n    value: valueOr(props.input, ''),\n    disabled: props.isEvaluated,\n  };\n\n  switch (props.inputType) {\n    case 'numeric':\n      return <NumericInput {...shared} />;\n    case 'text':\n      return <TextInput {...shared} />;\n    case 'textarea':\n      return <TextareaInput {...shared} />;\n    default:\n      assertNever(props.inputType);\n  }\n};\n\nexport const ShortAnswerComponent: React.FC = () => {\n  const {\n    model,\n    state: activityState,\n    onSaveActivity,\n    onResetActivity,\n  } = useDeliveryElementContext<ShortAnswerModelSchema>();\n  const uiState = useSelector((state: ActivityDeliveryState) => state);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      initializeState(\n        activityState,\n        // Short answers only have one input, but the selection is modeled\n        // as an array just to make it consistent with the other activity types\n        safelySelectStringInputs(activityState).caseOf({\n          just: (input) => input,\n          nothing: () => ({\n            [DEFAULT_PART_ID]: [''],\n          }),\n        }),\n      ),\n    );\n  }, []);\n\n  // First render initializes state\n  if (!uiState.partState) {\n    return null;\n  }\n\n  const onInputChange = (input: string) => {\n    dispatch(\n      activityDeliverySlice.actions.setStudentInputForPart({\n        partId: DEFAULT_PART_ID,\n        studentInput: [input],\n      }),\n    );\n\n    onSaveActivity(uiState.attemptState.attemptGuid, [\n      { attemptGuid: uiState.attemptState.parts[0].attemptGuid, response: { input } },\n    ]);\n  };\n\n  return (\n    <div className=\"activity cata-activity\">\n      <div className=\"activity-content\">\n        <StemDeliveryConnected />\n        <GradedPointsConnected />\n\n        <Input\n          inputType={model.inputType}\n          // Short answers only have one selection, but are modeled as an array.\n          // Select the first element.\n          input={Maybe.maybe(uiState.partState[DEFAULT_PART_ID]?.studentInput).valueOr([''])[0]}\n          isEvaluated={isEvaluated(uiState)}\n          onChange={onInputChange}\n        />\n\n        <ResetButtonConnected\n          onReset={() => dispatch(resetAction(onResetActivity, { [DEFAULT_PART_ID]: [''] }))}\n        />\n        <SubmitButtonConnected />\n        <HintsDeliveryConnected partId={DEFAULT_PART_ID} />\n        <EvaluationConnected />\n      </div>\n    </div>\n  );\n};\n\n// Defines the web component, a simple wrapper over our React component above\nexport class ShortAnswerDelivery extends DeliveryElement<ShortAnswerModelSchema> {\n  render(mountPoint: HTMLDivElement, props: DeliveryElementProps<ShortAnswerModelSchema>) {\n    const store = configureStore({}, activityDeliverySlice.reducer);\n    ReactDOM.render(\n      <Provider store={store}>\n        <DeliveryElementProvider {...props}>\n          <ShortAnswerComponent />\n        </DeliveryElementProvider>\n      </Provider>,\n      mountPoint,\n    );\n  }\n}\n\n// Register the web component:\n// eslint-disable-next-line\nconst manifest = require('./manifest.json') as Manifest;\nwindow.customElements.define(manifest.delivery.element, ShortAnswerDelivery);\n"]}