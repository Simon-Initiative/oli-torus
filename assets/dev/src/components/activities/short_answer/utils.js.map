{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../src/components/activities/short_answer/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AAErE,OAAO,EACL,kBAAkB,EAClB,oBAAoB,EACpB,oBAAoB,EACpB,SAAS,GACV,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAY,QAAQ,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAEzE,MAAM,CAAC,MAAM,YAAY,GAAiC,GAAG,EAAE;IAC7D,OAAO;QACL,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC;QAClB,SAAS,EAAE,MAAM;QACjB,SAAS,EAAE;YACT,KAAK,EAAE;gBACL;oBACE,EAAE,EAAE,eAAe;oBACnB,eAAe,EAAE,eAAe,CAAC,OAAO;oBACxC,SAAS,EAAE,SAAS,CAAC,YAAY,EAAE;oBACnC,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;iBAClD;aACF;YACD,eAAe,EAAE,EAAE;YACnB,WAAW,EAAE,EAAE;SAChB;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,KAAe,EAAE,MAAc,EAAE,EAAE,CACtE,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,MAAM,CACxC,CAAC,QAAQ,EAAE,EAAE,CACX,QAAQ,KAAK,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC;IAC9C,QAAQ,KAAK,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CACnD,CAAC;AAEJ,MAAM,CAAC,MAAM,kBAAkB,GAA8B;IAC3D,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE;IAC5C,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE;IAC7C,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE;CACjD,CAAC","sourcesContent":["import { SelectOption } from 'components/activities/common/authoring/InputTypeDropdown';\nimport { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport { InputType, ShortAnswerModelSchema } from 'components/activities/short_answer/schema';\nimport {\n  getCorrectResponse,\n  getIncorrectResponse,\n  getResponsesByPartId,\n  Responses,\n} from 'data/activities/model/responses';\nimport { HasParts, makeHint, makeStem, ScoringStrategy } from '../types';\n\nexport const defaultModel: () => ShortAnswerModelSchema = () => {\n  return {\n    stem: makeStem(''),\n    inputType: 'text',\n    authoring: {\n      parts: [\n        {\n          id: DEFAULT_PART_ID,\n          scoringStrategy: ScoringStrategy.average,\n          responses: Responses.forTextInput(),\n          hints: [makeHint(''), makeHint(''), makeHint('')],\n        },\n      ],\n      transformations: [],\n      previewText: '',\n    },\n  };\n};\n\nexport const getTargetedResponses = (model: HasParts, partId: string) =>\n  getResponsesByPartId(model, partId).filter(\n    (response) =>\n      response !== getCorrectResponse(model, partId) &&\n      response !== getIncorrectResponse(model, partId),\n  );\n\nexport const shortAnswerOptions: SelectOption<InputType>[] = [\n  { value: 'numeric', displayValue: 'Number' },\n  { value: 'text', displayValue: 'Short Text' },\n  { value: 'textarea', displayValue: 'Paragraph' },\n];\n"]}