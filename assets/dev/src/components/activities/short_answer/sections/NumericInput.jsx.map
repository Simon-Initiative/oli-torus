{"version":3,"file":"NumericInput.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/short_answer/sections/NumericInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport React from 'react';\nimport { isOperator, RuleOperator } from 'data/activities/model/rules';\n\nconst SimpleNumericInput: React.FC<InputProps> = ({ state, setState }) => {\n  const { editMode } = useAuthoringElementContext();\n\n  if (isRangeOperator(state.operator) || typeof state.input !== 'string') {\n    return null;\n  }\n\n  return (\n    <input\n      disabled={!editMode}\n      type=\"number\"\n      className=\"form-control\"\n      onChange={(e) => {\n        setState({ input: e.target.value, operator: state.operator });\n      }}\n      value={state.input}\n    />\n  );\n};\n\nconst RangeNumericInput: React.FC<InputProps> = ({ state, setState }) => {\n  const { editMode } = useAuthoringElementContext();\n\n  if (!isRangeOperator(state.operator) || typeof state.input === 'string') {\n    return null;\n  }\n\n  return (\n    <div className=\"d-flex flex-column d-md-flex flex-md-row align-items-center\">\n      <input\n        disabled={!editMode}\n        type=\"number\"\n        className=\"form-control\"\n        onChange={(e) => {\n          const newValue = [e.target.value, state.input[1]] as [string, string];\n          setState({ input: newValue, operator: state.operator });\n        }}\n        value={state.input[0]}\n      />\n      <div className=\"mx-1\">and</div>\n      <input\n        placeholder=\"Correct answer\"\n        disabled={!editMode}\n        type=\"number\"\n        className=\"form-control\"\n        onChange={(e) => {\n          const newValue = [state.input[0], e.target.value] as [string, string];\n          setState({ input: newValue, operator: state.operator });\n        }}\n        value={state.input[1]}\n      />\n    </div>\n  );\n};\n\ninterface State {\n  operator: RuleOperator;\n  input: string | [string, string];\n}\ninterface InputProps {\n  setState: (s: State) => void;\n  state: State;\n}\nconst isRangeOperator = (op: RuleOperator) => op === 'btw' || op === 'nbtw';\n\nexport const NumericInput: React.FC<InputProps> = ({ setState, state }) => {\n  const { editMode } = useAuthoringElementContext();\n\n  const shared = {\n    state,\n    setState,\n  };\n\n  return (\n    <div className=\"d-flex flex-column flex-md-row mb-2\">\n      <select\n        disabled={!editMode}\n        className=\"form-control mr-1\"\n        value={state.operator}\n        onChange={(e) => {\n          const nextOp = e.target.value;\n          if (!isOperator(nextOp)) {\n            return;\n          }\n\n          let nextValue;\n          if (isRangeOperator(nextOp) && !isRangeOperator(state.operator)) {\n            nextValue = [state.input, state.input] as [string, string];\n          } else if (isRangeOperator(state.operator) && !isRangeOperator(nextOp)) {\n            nextValue = state.input[0];\n          } else {\n            nextValue = state.input;\n          }\n\n          setState({ operator: nextOp, input: nextValue });\n        }}\n        name=\"question-type\"\n      >\n        {numericOptions.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.displayValue}\n          </option>\n        ))}\n      </select>\n      <RangeNumericInput {...shared} />\n      <SimpleNumericInput {...shared} />\n    </div>\n  );\n};\n\nexport const numericOptions: { value: RuleOperator; displayValue: string }[] = [\n  { value: 'gt', displayValue: 'Greater than' },\n  { value: 'gte', displayValue: 'Greater than or equal to' },\n  { value: 'lt', displayValue: 'Less than' },\n  { value: 'lte', displayValue: 'Less than or equal to' },\n  { value: 'eq', displayValue: 'Equal to' },\n  { value: 'neq', displayValue: 'Not equal to' },\n  { value: 'btw', displayValue: 'Between' },\n  { value: 'nbtw', displayValue: 'Not between' },\n];\n"]}