{"version":3,"file":"ResponseCard.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/common/responses/ResponseCard.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,uBAAuB,EAAE,MAAM,mCAAmC,CAAC;AAE5E,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAC5C,OAAO,EAAE,qBAAqB,EAAE,MAAM,kEAAkE,CAAC;AASzG,MAAM,CAAC,MAAM,YAAY,GAAoB,CAAC,KAAK,EAAE,EAAE;IACrD,OAAO,CACL,CAAC,IAAI,CAAC,IAAI,CACR;MAAA,CAAC,IAAI,CAAC,KAAK,CACT;QAAA,CAAC,GAAG,CAAC,SAAS,CAAC,sCAAsC,CACnD;UAAA,CAAC,KAAK,CAAC,KAAK,CACZ;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,GAAG,CAClC;UAAA,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAChF;QAAA,EAAE,GAAG,CACP;MAAA,EAAE,IAAI,CAAC,KAAK,CACZ;MAAA,CAAC,IAAI,CAAC,OAAO,CACX;QAAA,CAAC,KAAK,CAAC,QAAQ,CACf;QAAA,CAAC,uBAAuB,CACtB,WAAW,CAAC,2DAA2D,CACvE,KAAK,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CACvC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAE1E;MAAA,EAAE,IAAI,CAAC,OAAO,CAChB;IAAA,EAAE,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ID } from 'data/content/model/other';\nimport React from 'react';\nimport { RichTextEditorConnected } from 'components/content/RichTextEditor';\nimport { Response } from 'components/activities/types';\nimport { Card } from 'components/misc/Card';\nimport { RemoveButtonConnected } from 'components/activities/common/authoring/removeButton/RemoveButton';\nimport { Descendant } from 'slate';\n\ninterface Props {\n  title: React.ReactNode;\n  response: Response;\n  updateFeedback: (responseId: ID, content: Descendant[]) => void;\n  removeResponse: (responseId: ID) => void;\n}\nexport const ResponseCard: React.FC<Props> = (props) => {\n  return (\n    <Card.Card>\n      <Card.Title>\n        <div className=\"d-flex justify-content-between w-100\">\n          {props.title}\n          <div className=\"flex-grow-1\"></div>\n          <RemoveButtonConnected onClick={() => props.removeResponse(props.response.id)} />\n        </div>\n      </Card.Title>\n      <Card.Content>\n        {props.children}\n        <RichTextEditorConnected\n          placeholder=\"Explain why the student might have arrived at this answer\"\n          value={props.response.feedback.content}\n          onEdit={(content) => props.updateFeedback(props.response.id, content)}\n        />\n      </Card.Content>\n    </Card.Card>\n  );\n};\n"]}