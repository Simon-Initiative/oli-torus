{"version":3,"file":"TargetedFeedback.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/common/responses/TargetedFeedback.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,EAAE,wBAAwB,EAAE,MAAM,wDAAwD,CAAC;AAClG,OAAO,EAAE,eAAe,EAAE,MAAM,+DAA+D,CAAC;AAChG,OAAO,EAAE,eAAe,EAAE,MAAM,wDAAwD,CAAC;AACzF,OAAO,EAAE,YAAY,EAAE,MAAM,qDAAqD,CAAC;AASnF,OAAO,EAAE,2BAA2B,EAAmB,MAAM,iCAAiC,CAAC;AAC/F,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,KAAK,MAAM,OAAO,CAAC;AAW1B,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,0BAA0B,EAEnD,CAAC;IAEJ,OAAO;QACL,gBAAgB,EAAE,2BAA2B,CAAC,KAAK,CAAC;QACpD,cAAc,EAAE,CAAC,UAAkB,EAAE,OAAiB,EAAE,EAAE,CACxD,QAAQ,CAAC,eAAe,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACrE,cAAc,EAAE,CAAC,UAAkB,EAAE,EAAE,CACrC,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;KAC/D,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAoB,CAAC,KAAK,EAAE,EAAE;IACzD,MAAM,IAAI,GAAG,mBAAmB,EAAE,CAAC;IACnC,MAAM,EAAE,KAAK,EAAE,GAAG,0BAA0B,EAEzC,CAAC;IAEJ,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,UAAU,EAAE;QACxC,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,OAAO,CACL,EACE;MAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CACtC,CAAC,YAAY,CACX,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CACzB,KAAK,CAAC,mBAAmB,CACzB,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAC3B,cAAc,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CACpC,cAAc,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAEpC;UAAA,CAAC,eAAe,CACd,cAAc,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CACrC,YAAY,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CACjC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CACxC,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAC5B,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAClD,WAAW,CAAC,CAAC,KAAK,CAAC,CACnB,OAAO,CAAC,CAAC,oBAAoB,EAAE,CAAC,EAEpC;QAAA,EAAE,YAAY,CAAC,CAChB,CAAC,CACF;MAAA,CAAC,wBAAwB,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC,CACxF;;MACF,EAAE,wBAAwB,CAC5B;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport { AuthoringButtonConnected } from 'components/activities/common/authoring/AuthoringButton';\nimport { ChoicesDelivery } from 'components/activities/common/choices/delivery/ChoicesDelivery';\nimport { ResponseActions } from 'components/activities/common/responses/responseActions';\nimport { ResponseCard } from 'components/activities/common/responses/ResponseCard';\nimport {\n  Choice,\n  ChoiceId,\n  ChoiceIdsToResponseId,\n  HasChoices,\n  HasParts,\n  RichText,\n} from 'components/activities/types';\nimport { getTargetedResponseMappings, ResponseMapping } from 'data/activities/model/responses';\nimport { defaultWriterContext } from 'data/content/writers/context';\nimport React from 'react';\n\ninterface Props {\n  choices?: Choice[];\n  toggleChoice: (id: ChoiceId, mapping: ResponseMapping) => void;\n  addTargetedResponse: () => void;\n  selectedIcon: React.ReactNode;\n  unselectedIcon: React.ReactNode;\n  children?: (xs: ReturnType<typeof useTargetedFeedback>) => React.ReactElement;\n}\n\nexport const useTargetedFeedback = () => {\n  const { model, dispatch } = useAuthoringElementContext<\n    HasParts & { authoring: { targeted: ChoiceIdsToResponseId[] } }\n  >();\n\n  return {\n    targetedMappings: getTargetedResponseMappings(model),\n    updateFeedback: (responseId: string, content: RichText) =>\n      dispatch(ResponseActions.editResponseFeedback(responseId, content)),\n    removeFeedback: (responseId: string) =>\n      dispatch(ResponseActions.removeTargetedFeedback(responseId)),\n  };\n};\n\nexport const TargetedFeedback: React.FC<Props> = (props) => {\n  const hook = useTargetedFeedback();\n  const { model } = useAuthoringElementContext<\n    HasParts & HasChoices & { authoring: { targeted: ChoiceIdsToResponseId[] } }\n  >();\n\n  if (typeof props.children === 'function') {\n    return props.children(hook);\n  }\n\n  return (\n    <>\n      {hook.targetedMappings.map((mapping) => (\n        <ResponseCard\n          key={mapping.response.id}\n          title=\"Targeted feedback\"\n          response={mapping.response}\n          updateFeedback={hook.updateFeedback}\n          removeResponse={hook.removeFeedback}\n        >\n          <ChoicesDelivery\n            unselectedIcon={props.unselectedIcon}\n            selectedIcon={props.selectedIcon}\n            choices={props.choices || model.choices}\n            selected={mapping.choiceIds}\n            onSelect={(id) => props.toggleChoice(id, mapping)}\n            isEvaluated={false}\n            context={defaultWriterContext()}\n          />\n        </ResponseCard>\n      ))}\n      <AuthoringButtonConnected className=\"btn btn-link pl-0\" action={props.addTargetedResponse}>\n        Add targeted feedback\n      </AuthoringButtonConnected>\n    </>\n  );\n};\n"]}