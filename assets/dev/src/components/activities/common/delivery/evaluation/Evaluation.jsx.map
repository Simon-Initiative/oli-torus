{"version":3,"file":"Evaluation.jsx","sourceRoot":"","sources":["../../../../../../../src/components/activities/common/delivery/evaluation/Evaluation.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ActivityState, makeContent, makeFeedback, RichText } from 'components/activities/types';\nimport { WriterContext } from 'data/content/writers/context';\nimport { HtmlContentModelRenderer } from 'data/content/writers/renderer';\nimport React from 'react';\nimport guid from 'utils/guid';\n\ninterface Props {\n  shouldShow?: boolean;\n  attemptState: ActivityState;\n  context: WriterContext;\n}\nexport const Evaluation: React.FC<Props> = ({ shouldShow = true, attemptState, context }) => {\n  const { score, outOf, parts } = attemptState;\n  if (!shouldShow || outOf === null || score === null) {\n    return null;\n  }\n\n  const errorText = makeContent('There was an error processing this response');\n  const totalScoreText: RichText = [\n    {\n      type: 'p',\n      children: [{ text: 'Total Score', strong: true }],\n      id: guid(),\n    },\n  ];\n\n  if (parts.length === 1) {\n    const error = parts[0].error;\n    const feedback = parts[0].feedback?.content;\n    return (\n      <Component\n        resultClass={resultClass(score, outOf, parts[0].error)}\n        score={score}\n        outOf={outOf}\n      >\n        <HtmlContentModelRenderer\n          content={error ? errorText.content : feedback ? feedback : makeFeedback('').content}\n          context={context}\n        />\n      </Component>\n    );\n  }\n\n  return (\n    <>\n      <Component resultClass={resultClass(score, outOf, undefined)} score={score} outOf={outOf}>\n        <HtmlContentModelRenderer content={totalScoreText} context={context} />\n      </Component>\n      {parts.map((partState) => {\n        if (!partState.score && !partState.outOf) {\n          return null;\n        }\n        const error = partState.error;\n        const feedback = partState.feedback?.content;\n        return (\n          <Component\n            key={partState.partId}\n            resultClass={resultClass(partState.score, partState.outOf, partState.error)}\n            score={partState.score}\n            outOf={partState.outOf}\n          >\n            <HtmlContentModelRenderer\n              content={error ? errorText.content : feedback ? feedback : makeFeedback('').content}\n              context={context}\n            />\n          </Component>\n        );\n      })}\n    </>\n  );\n};\n\ninterface ComponentProps {\n  resultClass: string;\n  score: number | null;\n  outOf: number | null;\n}\nconst Component: React.FC<ComponentProps> = (props) => {\n  return (\n    <div aria-label=\"result\" className={`evaluation feedback ${props.resultClass} my-1`}>\n      <div className=\"result\">\n        <span aria-label=\"score\" className=\"score\">\n          {props.score}\n        </span>\n        <span className=\"result-divider\">/</span>\n        <span aria-label=\"out of\" className=\"out-of\">\n          {props.outOf}\n        </span>\n      </div>\n      {props.children}\n    </div>\n  );\n};\n\nconst resultClass = (score: number | null, outOf: number | null, error: string | undefined) => {\n  if (typeof error === 'string' || outOf === null || score === null) {\n    return 'error';\n  }\n  if (score === outOf) {\n    return 'correct';\n  }\n  if (score === 0) {\n    return 'incorrect';\n  }\n  if (score > 0) {\n    return 'partially-correct';\n  }\n  return '';\n};\n"]}