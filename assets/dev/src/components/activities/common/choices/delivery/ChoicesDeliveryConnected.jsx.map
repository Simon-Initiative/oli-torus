{"version":3,"file":"ChoicesDeliveryConnected.jsx","sourceRoot":"","sources":["../../../../../../../src/components/activities/common/choices/delivery/ChoicesDeliveryConnected.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,+DAA+D,CAAC;AAChG,OAAO,EAAE,yBAAyB,EAAE,MAAM,uCAAuC,CAAC;AAElF,OAAO,EAAyB,WAAW,EAAE,MAAM,+BAA+B,CAAC;AACnF,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAQ1C,MAAM,CAAC,MAAM,wBAAwB,GAAoB,CAAC,EACxD,QAAQ,EACR,cAAc,EACd,YAAY,EACZ,MAAM,GACP,EAAE,EAAE;;IACH,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG,yBAAyB,EAAc,CAAC;IACzE,MAAM,OAAO,GAAG,WAAW,CAAC,CAAC,KAA4B,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IACrE,OAAO,CACL,CAAC,eAAe,CACd,cAAc,CAAC,CAAC,cAAc,CAAC,CAC/B,YAAY,CAAC,CAAC,YAAY,CAAC,CAC3B,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CACvB,QAAQ,CAAC,CAAC,CAAA,MAAA,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,0CAAE,YAAY,KAAI,EAAE,CAAC,CACxD,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,WAAW,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAClC,OAAO,CAAC,CAAC,aAAa,CAAC,EACvB,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { ChoicesDelivery } from 'components/activities/common/choices/delivery/ChoicesDelivery';\nimport { useDeliveryElementContext } from 'components/activities/DeliveryElement';\nimport { ChoiceId, HasChoices, PartId } from 'components/activities/types';\nimport { ActivityDeliveryState, isEvaluated } from 'data/activities/DeliveryState';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\ninterface Props {\n  partId: PartId;\n  onSelect: (id: ChoiceId) => void;\n  unselectedIcon: React.ReactNode;\n  selectedIcon: React.ReactNode;\n}\nexport const ChoicesDeliveryConnected: React.FC<Props> = ({\n  onSelect,\n  unselectedIcon,\n  selectedIcon,\n  partId,\n}) => {\n  const { model, writerContext } = useDeliveryElementContext<HasChoices>();\n  const uiState = useSelector((state: ActivityDeliveryState) => state);\n  return (\n    <ChoicesDelivery\n      unselectedIcon={unselectedIcon}\n      selectedIcon={selectedIcon}\n      choices={model.choices}\n      selected={uiState.partState[partId]?.studentInput || []}\n      onSelect={onSelect}\n      isEvaluated={isEvaluated(uiState)}\n      context={writerContext}\n    />\n  );\n};\n"]}