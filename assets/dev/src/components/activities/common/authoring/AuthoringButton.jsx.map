{"version":3,"file":"AuthoringButton.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/common/authoring/AuthoringButton.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAc9C,MAAM,CAAC,MAAM,eAAe,GAAoB,CAAC,KAAY,EAAE,EAAE;IAC/D,OAAO,CACL,CAAC,MAAM,CACL,UAAU,CAAC,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC,CAClC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CACnB,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAChD,QAAQ,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAC5C,IAAI,CAAC,QAAQ,CACb,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAChC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAEhE;MAAA,CAAC,KAAK,CAAC,QAAQ,CACjB;IAAA,EAAE,MAAM,CAAC,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAsC,CAAC,KAAK,EAAE,EAAE;IACnF,MAAM,EAAE,QAAQ,EAAE,GAAG,0BAA0B,EAAE,CAAC;IAClD,OAAO,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAG,CAAC;AAC5D,CAAC,CAAC","sourcesContent":["import { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport React from 'react';\nimport { classNames } from 'utils/classNames';\n\nexport type Props = {\n  action: (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> | React.KeyboardEvent<HTMLButtonElement>,\n  ) => void;\n  style?: React.CSSProperties;\n  className?: string;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  editMode: boolean;\n  ariaLabel?: string;\n};\n\nexport const AuthoringButton: React.FC<Props> = (props: Props) => {\n  return (\n    <button\n      aria-label={props.ariaLabel || ''}\n      style={props.style}\n      className={classNames(['btn', props.className])}\n      disabled={props.disabled || !props.editMode}\n      type=\"button\"\n      onClick={(e) => props.action(e)}\n      onKeyPress={(e) => (e.key === 'Enter' ? props.action(e) : null)}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport const AuthoringButtonConnected: React.FC<Omit<Props, 'editMode'>> = (props) => {\n  const { editMode } = useAuthoringElementContext();\n  return <AuthoringButton {...props} editMode={editMode} />;\n};\n"]}