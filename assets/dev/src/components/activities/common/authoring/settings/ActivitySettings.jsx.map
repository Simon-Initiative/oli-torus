{"version":3,"file":"ActivitySettings.jsx","sourceRoot":"","sources":["../../../../../../../src/components/activities/common/authoring/settings/ActivitySettings.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAC7C,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAE,wBAAwB,EAAE,MAAM,wDAAwD,CAAC;AAClG,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,yBAAyB,CAAC;AAMjC,MAAM,OAAO,GAA2B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE;IAC5E,OAAO,CACL,CAAC,MAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAC7D;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,AAAD,EAAG,CAAC,EAAE,GAAG,CACvE;MAAA,CAAC,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAClD;IAAA,EAAE,MAAM,CAAC,CACV,CAAC;AACJ,CAAC,CAAC;AAKF,MAAM,IAAI,GAAwB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACjD,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1D,MAAM,EAAE,QAAQ,EAAE,GAAG,0BAA0B,EAAE,CAAC;IAElD,OAAO,CACL,CAAC,wBAAwB,CACvB,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAC7E,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAEpD;MAAA,CAAC,OAAO,CACN,kBAAkB,CAAC,sBAAsB,CACzC,cAAc,CAAC,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAC9C,MAAM,CAAC,CAAC,aAAa,CAAC,CACtB,KAAK,CAAC,KAAK,CACX,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CACpB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAE1D;QAAA,CAAC,CAAC,CAAC,SAAS,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC,CACrD;MAAA,EAAE,OAAO,CACX;IAAA,EAAE,wBAAwB,CAAC,CAC5B,CAAC;AACJ,CAAC,CAAC;AAGF,MAAM,CAAC,MAAM,gBAAgB,GAExB,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACpB,OAAO,CACL,CAAC,IAAI,CACH;MAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CACnD,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACxD;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,OAAO,CAAC,CACX,CAAC,CACJ;IAAA,EAAE,IAAI,CAAC,CACR,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Popover } from 'react-tiny-popover';\nimport React, { useState } from 'react';\nimport { classNames } from 'utils/classNames';\nimport { Checkmark } from 'components/misc/icons/Checkmark';\nimport { AuthoringButtonConnected } from 'components/activities/common/authoring/AuthoringButton';\nimport { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport './ActivitySettings.scss';\n\ninterface SettingProps {\n  isEnabled: boolean;\n  onToggle: React.MouseEventHandler<HTMLButtonElement>;\n}\nconst Setting: React.FC<SettingProps> = ({ isEnabled, onToggle, children }) => {\n  return (\n    <button className=\"settings__setting-button\" onClick={onToggle}>\n      <div className=\"settings__is-enabled\">{isEnabled && <Checkmark />}</div>\n      <div className=\"settings__label\">{children}</div>\n    </button>\n  );\n};\n\ninterface MenuProps {\n  children: React.ReactElement<SettingProps>[];\n}\nconst Menu: React.FC<MenuProps> = ({ children }) => {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const { editMode } = useAuthoringElementContext();\n\n  return (\n    <AuthoringButtonConnected\n      className={classNames(['settings__open-button', editMode ? '' : 'disabled'])}\n      action={() => setIsPopoverOpen((isOpen) => !isOpen)}\n    >\n      <Popover\n        containerClassName=\"add-resource-popover\"\n        onClickOutside={() => setIsPopoverOpen(false)}\n        isOpen={isPopoverOpen}\n        align=\"end\"\n        positions={['left']}\n        content={<div className=\"settings__menu\">{children}</div>}\n      >\n        <i className=\"material-icons-outlined\">more_vert</i>\n      </Popover>\n    </AuthoringButtonConnected>\n  );\n};\n\nexport type Setting = { isEnabled: boolean; onToggle: () => void; label: string };\nexport const ActivitySettings: React.FC<{\n  settings: Setting[];\n}> = ({ settings }) => {\n  return (\n    <Menu>\n      {settings.map(({ isEnabled, onToggle, label }, i) => (\n        <Setting key={i} isEnabled={isEnabled} onToggle={onToggle}>\n          {label}\n        </Setting>\n      ))}\n    </Menu>\n  );\n};\n"]}