{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../../src/components/activities/check_all_that_apply/actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,wDAAwD,CAAC;AACzF,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC1F,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EACL,YAAY,EACZ,mBAAmB,EACnB,kBAAkB,EAClB,aAAa,EACb,aAAa,GACd,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAoB,YAAY,EAAE,YAAY,EAA4B,MAAM,UAAU,CAAC;AAGlG,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,SAAS,CAAC,MAAc;QACtB,OAAO,CAAC,KAAW,EAAE,IAAkB,EAAE,EAAE;YACzC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9B,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,QAAkB;QACxC,OAAO,CAAC,KAAW,EAAE,EAAE;YACrB,WAAW,CAAC,QAAQ,EAAE,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7D,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,EAAU;QACnC,OAAO,CAAC,KAAW,EAAE,IAAkB,EAAE,EAAE;YACzC,IAAI,CACF,YAAY,CAAC,gBAAgB,EAAE;gBAC7B,UAAU,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACzD,UAAU,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACtD,CAAC,CACH,CAAC;YAEF,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;YAE7B,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAClD,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAElF,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,OAAO,CAAC,KAAW,EAAE,EAAE;YACrB,MAAM,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACzD,MAAM,QAAQ,GAAG,YAAY,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAEnE,eAAe,CAAC,WAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9D,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IAED,2BAA2B,CAAC,UAAsB,EAAE,SAAqB;QACvE,OAAO,CAAC,KAAW,EAAE,EAAE;YACrB,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CACzC,CAAC,KAAU,EAAE,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,UAAU,CACpD,CAAC;YACF,IAAI,CAAC,KAAK;gBAAE,OAAO;YACnB,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;YACrB,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,mEAAmE;AACnE,sCAAsC;AACtC,MAAM,mBAAmB,GAAG,CAAC,KAAW,EAAE,EAAE;IAC1C,kBAAkB,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,IAAI,GAAG,aAAa,CAC7D,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EACnC,mBAAmB,CAAC,KAAK,CAAC,CAC3B,CAAC;IAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QACzC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,aAAa,CAC7E,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EACnC,YAAY,CAAC,KAAK,CAAC,CACpB,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { ResponseActions } from 'components/activities/common/responses/responseActions';\nimport { addOrRemove, DEFAULT_PART_ID, remove } from 'components/activities/common/utils';\nimport { Choices } from 'data/activities/model/choices';\nimport {\n  getChoiceIds,\n  getCorrectChoiceIds,\n  getCorrectResponse,\n  getResponseBy,\n  getResponseId,\n} from 'data/activities/model/responses';\nimport { matchListRule } from 'data/activities/model/rules';\nimport { clone } from 'utils/common';\nimport { Operations } from 'utils/pathOperations';\nimport { Choice, ChoiceId, makeResponse, makeUndoable, PostUndoable, ResponseId } from '../types';\nimport { CATASchema as CATA } from './schema';\n\nexport const CATAActions = {\n  addChoice(choice: Choice) {\n    return (model: CATA, post: PostUndoable) => {\n      Choices.addOne(choice)(model);\n      updateResponseRules(model);\n    };\n  },\n\n  toggleChoiceCorrectness(choiceId: ChoiceId) {\n    return (model: CATA) => {\n      addOrRemove(choiceId, getChoiceIds(model.authoring.correct));\n      updateResponseRules(model);\n    };\n  },\n\n  removeChoiceAndUpdateRules(id: string) {\n    return (model: CATA, post: PostUndoable) => {\n      post(\n        makeUndoable('Removed choice', [\n          Operations.replace('$.authoring', clone(model.authoring)),\n          Operations.replace('$.choices', clone(model.choices)),\n        ]),\n      );\n\n      Choices.removeOne(id)(model);\n\n      remove(id, getChoiceIds(model.authoring.correct));\n      model.authoring.targeted.forEach((assoc: any) => remove(id, getChoiceIds(assoc)));\n\n      updateResponseRules(model);\n    };\n  },\n\n  addTargetedFeedback() {\n    return (model: CATA) => {\n      const choiceIds = Choices.getAll(model).map((c) => c.id);\n      const response = makeResponse(matchListRule(choiceIds, []), 0, '');\n\n      ResponseActions.addResponse(response, DEFAULT_PART_ID)(model);\n      model.authoring.targeted.push([[], response.id]);\n    };\n  },\n\n  editTargetedFeedbackChoices(responseId: ResponseId, choiceIds: ChoiceId[]) {\n    return (model: CATA) => {\n      const assoc = model.authoring.targeted.find(\n        (assoc: any) => getResponseId(assoc) === responseId,\n      );\n      if (!assoc) return;\n      assoc[0] = choiceIds;\n      updateResponseRules(model);\n    };\n  },\n};\n\n// Update all response rules based on a model with new choices that\n// are not yet reflected by the rules.\nconst updateResponseRules = (model: CATA) => {\n  getCorrectResponse(model, DEFAULT_PART_ID).rule = matchListRule(\n    model.choices.map((c: any) => c.id),\n    getCorrectChoiceIds(model),\n  );\n\n  model.authoring.targeted.forEach((assoc) => {\n    getResponseBy(model, (r) => r.id === getResponseId(assoc)).rule = matchListRule(\n      model.choices.map((c: any) => c.id),\n      getChoiceIds(assoc),\n    );\n  });\n};\n"]}