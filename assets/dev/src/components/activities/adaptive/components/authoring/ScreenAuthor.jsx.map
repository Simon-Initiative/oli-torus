{"version":3,"file":"ScreenAuthor.jsx","sourceRoot":"","sources":["../../../../../../../src/components/activities/adaptive/components/authoring/ScreenAuthor.tsx"],"names":[],"mappings":"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","sourcesContent":["import ConfigurationModal from 'apps/authoring/components/EditingCanvas/ConfigurationModal';\nimport CustomFieldTemplate from 'apps/authoring/components/PropertyEditor/custom/CustomFieldTemplate';\nimport PropertyEditor from 'apps/authoring/components/PropertyEditor/PropertyEditor';\nimport partSchema, {\n  partUiSchema,\n  transformModelToSchema as transformPartModelToSchema,\n  transformSchemaToModel as transformPartSchemaToModel,\n} from 'apps/authoring/components/PropertyEditor/schemas/part';\nimport {\n  NotificationContext,\n  NotificationType,\n  subscribeToNotification,\n} from 'apps/delivery/components/NotificationContext';\nimport { AnyPartComponent } from 'components/parts/types/parts';\nimport EventEmitter from 'events';\nimport { JSONSchema7 } from 'json-schema';\nimport { isEqual } from 'lodash';\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { clone } from 'utils/common';\nimport { convertPalette } from '../common/util';\nimport AddPartToolbar from './AddPartToolbar';\nimport LayoutEditor from './LayoutEditor';\n\ninterface ScreenAuthorProps {\n  screen: any;\n  onChange?: (screen: any) => void;\n}\n\nconst screenSchema: JSONSchema7 = {\n  type: 'object',\n  properties: {\n    /* Position: {\n      type: 'object',\n      title: 'Dimensions',\n      properties: {\n        x: { type: 'number' },\n        y: { type: 'number' },\n        z: { type: 'number' },\n      },\n    }, */\n    Size: {\n      type: 'object',\n      title: 'Dimensions',\n      properties: {\n        width: { type: 'number' },\n        height: { type: 'number' },\n      },\n    },\n    palette: {\n      type: 'object',\n      properties: {\n        backgroundColor: { type: 'string', title: 'Background Color' },\n        borderColor: { type: 'string', title: 'Border Color' },\n        borderRadius: { type: 'string', title: 'Border Radius' },\n        borderStyle: { type: 'string', title: 'Border Style' },\n        borderWidth: { type: 'string', title: 'Border Width' },\n      },\n    },\n  },\n};\n\nconst screenUiSchema = {\n  'ui:title': 'Screen',\n  Position: {\n    'ui:ObjectFieldTemplate': CustomFieldTemplate,\n    'ui:title': 'Position',\n    x: {\n      classNames: 'col-4',\n    },\n    y: {\n      classNames: 'col-4',\n    },\n    z: {\n      classNames: 'col-4',\n    },\n  },\n  Size: {\n    'ui:ObjectFieldTemplate': CustomFieldTemplate,\n    'ui:title': 'Dimensions',\n    width: {\n      classNames: 'col-6',\n    },\n    height: {\n      classNames: 'col-6',\n    },\n  },\n  palette: {\n    'ui:ObjectFieldTemplate': CustomFieldTemplate,\n    'ui:title': 'Background & Border',\n    backgroundColor: {\n      'ui:widget': 'ColorPicker',\n    },\n    borderColor: {\n      'ui:widget': 'ColorPicker',\n    },\n    borderStyle: { classNames: 'col-6' },\n    borderWidth: { classNames: 'col-6' },\n  },\n};\n\nconst ScreenAuthor: React.FC<ScreenAuthorProps> = ({ screen, onChange }) => {\n  const pusherContext = useContext(NotificationContext);\n  const [pusher, setPusher] = useState(pusherContext || new EventEmitter().setMaxListeners(50));\n\n  useEffect(() => {\n    if (pusherContext) {\n      setPusher(pusherContext);\n    }\n  }, [pusherContext]);\n\n  useEffect(() => {\n    if (!pusher) {\n      return;\n    }\n    const notificationsHandled = [\n      NotificationType.CONFIGURE,\n      NotificationType.CONFIGURE_CANCEL,\n      NotificationType.CONFIGURE_SAVE,\n    ];\n    const notifications = notificationsHandled.map((notificationType: NotificationType) => {\n      const handler = (payload: any) => {\n        // nothing to do\n        /* console.log(`ScreenAuthor catching ${notificationType.toString()}`, { payload }); */\n      };\n      const unsub = subscribeToNotification(pusher, notificationType, handler);\n      return unsub;\n    });\n    return () => {\n      notifications.forEach((unsub) => {\n        unsub();\n      });\n    };\n  }, [pusher]);\n\n  const [currentScreenData, setCurrentScreenData] = useState(screen);\n\n  useEffect(() => {\n    if (onChange && !isEqual(screen, currentScreenData)) {\n      onChange(currentScreenData);\n    }\n  }, [screen, currentScreenData, onChange]);\n\n  const [screenWidth, setScreenWidth] = useState(screen.custom.width);\n  const [screenHeight, setScreenHeight] = useState(screen.custom.height);\n  const [screenBackgroundColor, setScreenBackgroundColor] = useState(\n    screen.custom.palette.backgroundColor || 'lightblue',\n  );\n\n  const [selectedPartId, setSelectedPartId] = useState('');\n\n  const [partsList, setPartsList] = useState<AnyPartComponent[]>([]);\n\n  const [showConfigModal, setShowConfigModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    // console.log('SA:Screen Changed', { screen });\n    setCurrentScreenData(screen);\n    setPartsList([...screen.partsLayout]);\n    setScreenHeight(screen.custom.height);\n    setScreenWidth(screen.custom.width);\n    const palette = convertPalette(screen.custom.palette);\n    setScreenBackgroundColor(palette.backgroundColor);\n  }, [screen]);\n\n  const [currentPropertySchema, setCurrentPropertySchema] = useState<JSONSchema7>(screenSchema);\n  const [currentPropertyUiSchema, setCurrentPropertyUiSchema] = useState<any>(screenUiSchema);\n  const [currentPropertyData, setCurrentPropertyData] = useState<any>({});\n\n  useEffect(() => {\n    if (!selectedPartId) {\n      // current should be screen, formatted to match the schema\n      // console.log('screen selected', currentScreenData);\n      const data = {\n        /* Position: {\n          x: currentScreenData.custom.x || 0,\n          y: currentScreenData.custom.y || 0,\n          z: currentScreenData.custom.z || 0,\n        }, */\n        Size: {\n          width: currentScreenData.custom.width,\n          height: currentScreenData.custom.height,\n        },\n        palette: convertPalette(currentScreenData.custom.palette),\n      };\n      setCurrentPropertyData(data);\n      setCurrentPropertySchema(screenSchema);\n      setCurrentPropertyUiSchema(screenUiSchema);\n    } else {\n      const part = partsList.find((part: AnyPartComponent) => part.id === selectedPartId);\n      if (part) {\n        const PartClass = customElements.get(part.type);\n        if (PartClass) {\n          const partInstance = new PartClass() as any;\n          if (partInstance.getSchema) {\n            const customPartSchema = partInstance.getSchema();\n\n            const mergedPartSchema: JSONSchema7 = {\n              ...partSchema,\n              properties: {\n                ...partSchema.properties,\n                custom: { type: 'object', properties: { ...customPartSchema } },\n              },\n            };\n\n            setCurrentPropertySchema(mergedPartSchema);\n          } else {\n            setCurrentPropertySchema(partSchema);\n          }\n\n          if (partInstance.getUiSchema) {\n            const customPartUiSchema = partInstance.getUiSchema();\n            const mergedUiSchema = {\n              'ui:title': 'Selected Part',\n              ...partUiSchema,\n              custom: {\n                'ui:ObjectFieldTemplate': CustomFieldTemplate,\n                'ui:title': 'Custom',\n                ...customPartUiSchema,\n              },\n            };\n\n            setCurrentPropertyUiSchema(mergedUiSchema);\n          } else {\n            setCurrentPropertySchema(partSchema);\n          }\n\n          let data = clone(part);\n          if (partInstance.transformModelToSchema) {\n            // because the part schema below only knows about the \"custom\" block\n            data.custom = { ...data.custom, ...partInstance.transformModelToSchema(data.custom) };\n          }\n          data = transformPartModelToSchema(data);\n          setCurrentPropertyData(data);\n        }\n      }\n    }\n  }, [selectedPartId, currentScreenData, partsList]);\n\n  const handleEditorChange = useCallback(\n    (parts: any[]) => {\n      // console.log('SA:LE CHANGE', { parts });\n      const newScreenData = clone(currentScreenData);\n      newScreenData.partsLayout = parts;\n      setCurrentScreenData(newScreenData);\n      setPartsList(parts);\n    },\n    [currentScreenData],\n  );\n\n  const handleEditorSelect = (partId: string) => {\n    // console.log('SA:LE SELECT', { partId });\n    setSelectedPartId(partId);\n  };\n\n  const handlePropertyEditorChange = useCallback(\n    (properties: any) => {\n      // console.log('SA:PE:Change', properties);\n      const newScreenData = clone(currentScreenData);\n      if (!selectedPartId) {\n        // modifying screen properties\n        const newWidth = properties.Size.width;\n        const newHeight = properties.Size.height;\n        setScreenWidth(newWidth);\n        setScreenHeight(newHeight);\n        newScreenData.custom.width = newWidth;\n        newScreenData.custom.height = newHeight;\n        newScreenData.custom.palette = properties.palette;\n        setScreenBackgroundColor(properties.palette.backgroundColor);\n      } else {\n        // modifying part properties\n        const partChanges = transformPartSchemaToModel(properties);\n        // console.log('FIRST', { partChanges: clone(partChanges), properties });\n        // select by selected part id because id might have been modified\n        const part = partsList.find((part: AnyPartComponent) => part.id === selectedPartId);\n        if (part) {\n          const PartClass = customElements.get(part.type);\n          if (PartClass) {\n            const instance = new PartClass() as any;\n            if (instance.transformSchemaToModel) {\n              partChanges.custom = {\n                ...partChanges.custom,\n                ...instance.transformSchemaToModel(partChanges.custom),\n              };\n              // console.log('SECOND', { partChanges: clone(partChanges) });\n            }\n          }\n          // the id may have changed, and the new one should be fully updated, replace it in array\n          const clonePartsList = clone(partsList);\n          const index = clonePartsList.findIndex((p: AnyPartComponent) => p.id === part.id);\n          clonePartsList.splice(index, 1, partChanges);\n          // console.log('CHANGING!', { partChanges, clonePartsList });\n          setPartsList(clonePartsList);\n          setSelectedPartId(partChanges.id);\n          newScreenData.partsLayout = clonePartsList;\n        }\n      }\n\n      setCurrentScreenData(newScreenData);\n    },\n    [currentScreenData, partsList, selectedPartId],\n  );\n\n  // TODO: this is for feedback and popup, configure for other things somewhere\n  const allowedParts = [\n    'janus_text_flow',\n    'janus_image',\n    'janus_audio',\n    'janus_video',\n    'janus_capi_iframe',\n  ];\n\n  const handleAddPart = useCallback(\n    (part: AnyPartComponent) => {\n      const parts = [...partsList, part];\n      /* console.log('SA:AddPart', { part, partsList, parts }); */\n      setPartsList(parts);\n      setSelectedPartId(part.id);\n    },\n    [partsList],\n  );\n\n  const canvasRef = useRef<any>(null);\n\n  const [configEditorId] = useState(`config-editor-${screen.id || `screen${Date.now()}`}`);\n\n  const handlePartConfigure = async (part: any) => {\n    /* console.log('[handlePartConfigure]', { part }); */\n    setShowConfigModal(true);\n  };\n\n  const handlePartCancelConfigure = async (partId: string) => {\n    /* console.log('[handlePartCancelConfigure]', { partId }); */\n    setShowConfigModal(false);\n  };\n\n  return (\n    <NotificationContext.Provider value={pusher}>\n      <ConfigurationModal\n        bodyId={configEditorId}\n        isOpen={showConfigModal}\n        headerText={`Configure: ${selectedPartId}`}\n        onClose={() => {\n          setShowConfigModal(false);\n          pusher.emit(NotificationType.CONFIGURE_CANCEL, { id: selectedPartId });\n        }}\n        onSave={() => {\n          setShowConfigModal(false);\n          pusher.emit(NotificationType.CONFIGURE_SAVE, { id: selectedPartId });\n        }}\n      />\n      <Container>\n        <Row style={{ padding: 2, borderBottom: '2px solid #eee' }}>\n          <Col>\n            <AddPartToolbar\n              partTypes={allowedParts}\n              priorityTypes={allowedParts}\n              onAdd={handleAddPart}\n            />\n          </Col>\n        </Row>\n        <Row style={{ minHeight: (currentScreenData.custom.height || 0) + 100 }}>\n          <Col\n            ref={canvasRef}\n            className=\"canvas-dots\"\n            style={{ paddingTop: 50, paddingBottom: 50 }}\n          >\n            <LayoutEditor\n              id=\"screen-designer-1\"\n              hostRef={canvasRef.current}\n              width={screenWidth}\n              height={screenHeight}\n              backgroundColor={screenBackgroundColor}\n              parts={partsList}\n              selected={selectedPartId}\n              onChange={handleEditorChange}\n              onSelect={handleEditorSelect}\n              onConfigurePart={handlePartConfigure}\n              onCancelConfigurePart={handlePartCancelConfigure}\n              configurePortalId={configEditorId}\n            />\n          </Col>\n          <Col sm={3}>\n            <PropertyEditor\n              key={currentPropertyData.id || 'screen'}\n              schema={currentPropertySchema}\n              uiSchema={currentPropertyUiSchema}\n              value={currentPropertyData}\n              onChangeHandler={handlePropertyEditorChange}\n              triggerOnChange={true}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </NotificationContext.Provider>\n  );\n};\n\nexport default ScreenAuthor;\n"]}