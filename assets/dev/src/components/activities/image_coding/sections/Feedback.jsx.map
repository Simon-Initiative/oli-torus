{"version":3,"file":"Feedback.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/image_coding/sections/Feedback.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,cAAc,EAAE,MAAM,mCAAmC,CAAC;AAGnE,OAAO,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAgBpD,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,KAAgB,EAAE,EAAE;IACvC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,cAAc,EAAE,GAAG,KAAK,CAAC;IAE5D,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CACrC;MAAA,CAAC,WAAW,CACV;QAAA,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,AAAD,EAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,AAAD,EAAG,CACxC;qBAAa,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAE;MACvD,EAAE,WAAW,CACb;MAAA,CAAC,cAAc,CACb,WAAW,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAC/B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,KAAK,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CACxB,cAAc,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CACrC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAExD;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,KAAoB,EAAE,EAAE;IAC/C,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAExB,OAAO,CACL,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CACnB;MAAA,CAAC,OAAO,CACN,KAAK,CAAC,UAAU,CAChB,QAAQ,CAAC;2EAC0D,CACnE,EAAE,CAAC,UAAU,EAGf;;MAAA,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAe,EAAE,KAAK,EAAE,EAAE,CAAC,CAC9C,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAG,CAC3D,CAAC,CACJ;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { Heading } from 'components/misc/Heading';\nimport { RichTextEditor } from 'components/content/RichTextEditor';\nimport { ModelEditorProps } from '../schema';\nimport { Feedback as FeedbackItem } from '../../types';\nimport { Description } from 'components/misc/Description';\nimport { Checkmark } from 'components/misc/icons/Checkmark';\nimport { Cross } from 'components/misc/icons/Cross';\nimport { ProjectSlug } from 'data/types';\nimport { Descendant } from 'slate';\n\ninterface FeedbackProps extends ModelEditorProps {\n  onEditResponse: (score: number, content: Descendant[]) => void;\n  projectSlug: ProjectSlug;\n  onRequestMedia: any;\n}\n\ninterface ItemProps extends FeedbackProps {\n  feedback: FeedbackItem;\n  score: number;\n  onRequestMedia: any;\n}\n\nexport const Item = (props: ItemProps) => {\n  const { feedback, score, editMode, onEditResponse } = props;\n\n  return (\n    <div className=\"my-3\" key={feedback.id}>\n      <Description>\n        {score === 1 ? <Checkmark /> : <Cross />}\n        Feedback for {score === 1 ? 'Correct' : 'Incorrect'} Answer:\n      </Description>\n      <RichTextEditor\n        projectSlug={props.projectSlug}\n        editMode={editMode}\n        value={feedback.content}\n        onRequestMedia={props.onRequestMedia}\n        onEdit={(content) => onEditResponse(score, content)}\n      />\n    </div>\n  );\n};\n\nexport const Feedback = (props: FeedbackProps) => {\n  const { model } = props;\n\n  return (\n    <div className=\"my-5\">\n      <Heading\n        title=\"Feedback\"\n        subtitle=\"Providing feedback when a student answers a\n        question is one of the best ways to reinforce their understanding.\"\n        id=\"feedback\"\n      />\n\n      {model.feedback.map((f: FeedbackItem, index) => (\n        <Item key={index} {...props} feedback={f} score={index} />\n      ))}\n    </div>\n  );\n};\n"]}