{"version":3,"file":"OrderingDelivery.jsx","sourceRoot":"","sources":["../../../../../src/components/activities/ordering/OrderingDelivery.tsx"],"names":[],"mappings":"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","sourcesContent":["import { EvaluationConnected } from 'components/activities/common/delivery/evaluation/EvaluationConnected';\nimport { GradedPointsConnected } from 'components/activities/common/delivery/graded_points/GradedPointsConnected';\nimport { ResetButtonConnected } from 'components/activities/common/delivery/reset_button/ResetButtonConnected';\nimport { SubmitButtonConnected } from 'components/activities/common/delivery/submit_button/SubmitButtonConnected';\nimport { HintsDeliveryConnected } from 'components/activities/common/hints/delivery/HintsDeliveryConnected';\nimport { StemDeliveryConnected } from 'components/activities/common/stem/delivery/StemDelivery';\nimport { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport { ResponseChoices } from 'components/activities/ordering/sections/ResponseChoices';\nimport {\n  activityDeliverySlice,\n  ActivityDeliveryState,\n  initializeState,\n  resetAction,\n  StudentInput,\n} from 'data/activities/DeliveryState';\nimport { Choices } from 'data/activities/model/choices';\nimport { initialPartInputs, studentInputToString } from 'data/activities/utils';\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { configureStore } from 'state/store';\nimport { Maybe } from 'tsmonad';\nimport {\n  DeliveryElement,\n  DeliveryElementProps,\n  DeliveryElementProvider,\n  useDeliveryElementContext,\n} from '../DeliveryElement';\nimport * as ActivityTypes from '../types';\nimport { OrderingSchema } from './schema';\n\nexport const OrderingComponent: React.FC = () => {\n  const {\n    model,\n    state: activityState,\n    onResetActivity,\n    onSaveActivity,\n  } = useDeliveryElementContext<OrderingSchema>();\n  const uiState = useSelector((state: ActivityDeliveryState) => state);\n  const dispatch = useDispatch();\n\n  const onSelectionChange = (studentInput: ActivityTypes.ChoiceId[]) => {\n    dispatch(\n      activityDeliverySlice.actions.setStudentInputForPart({\n        partId: DEFAULT_PART_ID,\n        studentInput,\n      }),\n    );\n\n    onSaveActivity(uiState.attemptState.attemptGuid, [\n      {\n        attemptGuid: uiState.attemptState.parts[0].attemptGuid,\n        response: { input: studentInputToString(studentInput) },\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    dispatch(\n      initializeState(\n        activityState,\n        initialPartInputs(activityState, { [DEFAULT_PART_ID]: model.choices.map((c) => c.id) }),\n      ),\n    );\n\n    // Ensure when the initial state is null that we set the state to match\n    // the initial choice ordering.  This allows submissions without student interaction\n    // to be evaluated correctly.\n    setTimeout(() => {\n      if (activityState.parts[0].response === null) {\n        const selection = model.choices.map((choice) => choice.id);\n        const input = studentInputToString(selection);\n        onSaveActivity(activityState.attemptGuid, [\n          {\n            attemptGuid: activityState.parts[0].attemptGuid,\n            response: { input },\n          },\n        ]);\n      }\n    }, 0);\n  }, []);\n\n  // First render initializes state\n  if (!uiState.partState) {\n    return null;\n  }\n\n  return (\n    <div className=\"activity ordering-activity\">\n      <div className=\"activity-content\">\n        <StemDeliveryConnected />\n        <GradedPointsConnected />\n        <ResponseChoices\n          choices={Maybe.maybe(uiState.partState[DEFAULT_PART_ID]?.studentInput)\n            .valueOr<StudentInput>([])\n            .map((id) => Choices.getOne(model, id))}\n          setChoices={(choices) => onSelectionChange(choices.map((c) => c.id))}\n        />\n        <ResetButtonConnected\n          onReset={() =>\n            dispatch(\n              resetAction(onResetActivity, {\n                [DEFAULT_PART_ID]: model.choices.map((choice) => choice.id),\n              }),\n            )\n          }\n        />\n        <SubmitButtonConnected />\n        <HintsDeliveryConnected partId={DEFAULT_PART_ID} />\n        <EvaluationConnected />\n      </div>\n    </div>\n  );\n};\n\n// Defines the web component, a simple wrapper over our React component above\nexport class OrderingDelivery extends DeliveryElement<OrderingSchema> {\n  render(mountPoint: HTMLDivElement, props: DeliveryElementProps<OrderingSchema>) {\n    const store = configureStore({}, activityDeliverySlice.reducer);\n    ReactDOM.render(\n      <Provider store={store}>\n        <DeliveryElementProvider {...props}>\n          <OrderingComponent />\n        </DeliveryElementProvider>\n      </Provider>,\n      mountPoint,\n    );\n  }\n}\n\n// Register the web component:\n// eslint-disable-next-line\nconst manifest = require('./manifest.json') as ActivityTypes.Manifest;\nwindow.customElements.define(manifest.delivery.element, OrderingDelivery);\n"]}