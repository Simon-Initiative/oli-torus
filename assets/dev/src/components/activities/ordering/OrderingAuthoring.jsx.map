{"version":3,"file":"OrderingAuthoring.jsx","sourceRoot":"","sources":["../../../../../src/components/activities/ordering/OrderingAuthoring.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ActivitySettings } from 'components/activities/common/authoring/settings/ActivitySettings';\nimport { shuffleAnswerChoiceSetting } from 'components/activities/common/authoring/settings/activitySettingsActions';\nimport { Choices as ChoicesAuthoring } from 'components/activities/common/choices/authoring/ChoicesAuthoring';\nimport { Hints } from 'components/activities/common/hints/authoring/HintsAuthoringConnected';\nimport { SimpleFeedback } from 'components/activities/common/responses/SimpleFeedback';\nimport { Stem } from 'components/activities/common/stem/authoring/StemAuthoringConnected';\nimport { DEFAULT_PART_ID } from 'components/activities/common/utils';\nimport { ResponseChoices } from 'components/activities/ordering/sections/ResponseChoices';\nimport { TargetedFeedback } from 'components/activities/ordering/sections/TargetedFeedback';\nimport { orderingV1toV2 } from 'components/activities/ordering/transformations/v2';\nimport { TabbedNavigation } from 'components/tabbed_navigation/Tabs';\nimport { Choices } from 'data/activities/model/choices';\nimport { getCorrectChoiceIds } from 'data/activities/model/responses';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'state/store';\nimport { Maybe } from 'tsmonad';\nimport {\n  AuthoringElement,\n  AuthoringElementProps,\n  AuthoringElementProvider,\n  useAuthoringElementContext,\n} from '../AuthoringElement';\nimport * as ActivityTypes from '../types';\nimport { Actions } from './actions';\nimport { OrderingSchema } from './schema';\n\nconst store = configureStore();\n\nexport const Ordering: React.FC = () => {\n  const { dispatch, model } = useAuthoringElementContext<OrderingSchema>();\n  return (\n    <TabbedNavigation.Tabs>\n      <TabbedNavigation.Tab label=\"Question\">\n        <Stem />\n        <ChoicesAuthoring\n          icon={(choice, index) => <span className=\"mr-1\">{index + 1}.</span>}\n          choices={model.choices}\n          addOne={() => dispatch(Actions.addChoice(ActivityTypes.makeChoice('')))}\n          setAll={(choices: ActivityTypes.Choice[]) => dispatch(Choices.setAll(choices))}\n          onEdit={(id, content) => dispatch(Choices.setContent(id, content))}\n          onRemove={(id) => dispatch(Actions.removeChoiceAndUpdateRules(id))}\n        />\n      </TabbedNavigation.Tab>\n\n      <TabbedNavigation.Tab label=\"Answer Key\">\n        <ResponseChoices\n          choices={getCorrectChoiceIds(model).map((id) => Choices.getOne(model, id))}\n          setChoices={(choices) => dispatch(Actions.setCorrectChoices(choices))}\n        />\n        <SimpleFeedback partId={DEFAULT_PART_ID} />\n        <TargetedFeedback />\n      </TabbedNavigation.Tab>\n\n      <TabbedNavigation.Tab label=\"Hints\">\n        <Hints partId={DEFAULT_PART_ID} />\n      </TabbedNavigation.Tab>\n\n      <ActivitySettings settings={[shuffleAnswerChoiceSetting(model, dispatch)]} />\n    </TabbedNavigation.Tabs>\n  );\n};\n\nexport class OrderingAuthoring extends AuthoringElement<OrderingSchema> {\n  migrateModelVersion(model: any) {\n    return Maybe.maybe(model.authoring.version).caseOf({\n      just: (_v2) => model,\n      nothing: () => orderingV1toV2(model),\n    });\n  }\n\n  render(mountPoint: HTMLDivElement, props: AuthoringElementProps<OrderingSchema>) {\n    ReactDOM.render(\n      <Provider store={store}>\n        <AuthoringElementProvider {...props}>\n          <Ordering />\n        </AuthoringElementProvider>\n      </Provider>,\n      mountPoint,\n    );\n  }\n}\n// eslint-disable-next-line\nconst manifest = require('./manifest.json') as ActivityTypes.Manifest;\nwindow.customElements.define(manifest.authoring.element, OrderingAuthoring);\n"]}