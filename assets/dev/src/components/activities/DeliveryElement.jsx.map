{"version":3,"file":"DeliveryElement.jsx","sourceRoot":"","sources":["../../../../src/components/activities/DeliveryElement.tsx"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport { Maybe } from 'tsmonad';\nimport { valueOr } from 'utils/common';\nimport {\n  Action,\n  ActivityModelSchema,\n  ActivityState,\n  ClientEvaluation,\n  Hint,\n  PartResponse,\n  PartState,\n  StudentResponse,\n  Success,\n  DeliveryMode,\n} from './types';\nimport React, { useContext } from 'react';\nimport { defaultWriterContext, WriterContext } from 'data/content/writers/context';\n\nexport interface EvaluationResponse extends Success {\n  actions: Action[];\n}\n\n// Notice that the hint attribute here is optional.  If a\n// client requests a hint and there are no more, the platform\n// will return an instance of this interface with hasMoreHints set to false\n// and the hint attribute missing.\nexport interface RequestHintResponse extends Success {\n  hint?: Hint;\n  hasMoreHints: boolean;\n}\n\nexport interface ResetActivityResponse extends Success {\n  attemptState: ActivityState;\n  model: ActivityModelSchema;\n}\n\nexport interface PartActivityResponse extends Success {\n  attemptState: PartState;\n}\n\nexport interface DeliveryElementProps<T extends ActivityModelSchema> {\n  graded: boolean;\n  model: T;\n  state: ActivityState;\n  mode: DeliveryMode;\n  sectionSlug?: string;\n  userId: number;\n  notify?: EventEmitter;\n  mountPoint?: HTMLElement;\n\n  onReadUserState?: (attemptGuid: string, partAttemptGuid: string, payload: any) => Promise<any>;\n  onWriteUserState?: (attemptGuid: string, partAttemptGuid: string, payload: any) => Promise<any>;\n  onSaveActivity: (attemptGuid: string, partResponses: PartResponse[]) => Promise<Success>;\n  onSubmitActivity: (\n    attemptGuid: string,\n    partResponses: PartResponse[],\n  ) => Promise<EvaluationResponse>;\n  onResetActivity: (attemptGuid: string) => Promise<ResetActivityResponse>;\n\n  onRequestHint: (attemptGuid: string, partAttemptGuid: string) => Promise<RequestHintResponse>;\n  onSavePart: (\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => Promise<Success>;\n  onSubmitPart: (\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => Promise<EvaluationResponse>;\n  onResetPart: (attemptGuid: string, partAttemptGuid: string) => Promise<PartActivityResponse>;\n  onSubmitEvaluations: (\n    attemptGuid: string,\n    clientEvaluations: ClientEvaluation[],\n  ) => Promise<EvaluationResponse>;\n  onReady?: (attemptGuid: string) => Promise<Success>;\n  onResize?: (attemptGuid: string) => Promise<Success>;\n}\n\n// An abstract delivery web component, designed to delegate to\n// a React component.  This delivery web component will re-render\n// the underlying React component when the 'model' attribute of the\n// the web component changes\nexport abstract class DeliveryElement<T extends ActivityModelSchema> extends HTMLElement {\n  mountPoint: HTMLDivElement;\n  connected: boolean;\n  review: boolean;\n  onGetData?: (attemptGuid: string, partAttemptGuid: string, payload: any) => Promise<any>;\n  onSetData?: (attemptGuid: string, partAttemptGuid: string, payload: any) => Promise<any>;\n\n  protected _notify: EventEmitter;\n\n  onRequestHint: (attemptGuid: string, partAttemptGuid: string) => Promise<RequestHintResponse>;\n\n  onSaveActivity: (attemptGuid: string, partResponses: PartResponse[]) => Promise<Success>;\n  onSubmitActivity: (\n    attemptGuid: string,\n    partResponses: PartResponse[],\n  ) => Promise<EvaluationResponse>;\n  onResetActivity: (attemptGuid: string) => Promise<ResetActivityResponse>;\n\n  onSavePart: (\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => Promise<Success>;\n  onSubmitPart: (\n    attemptGuid: string,\n    partAttemptGuid: string,\n    response: StudentResponse,\n  ) => Promise<EvaluationResponse>;\n  onResetPart: (attemptGuid: string, partAttemptGuid: string) => Promise<PartActivityResponse>;\n  onSubmitEvaluations: (\n    attemptGuid: string,\n    clientEvaluations: ClientEvaluation[],\n  ) => Promise<EvaluationResponse>;\n  onReady: (attemptGuid: string) => Promise<Success>;\n  onResize: (attemptGuid: string) => Promise<Success>;\n  constructor() {\n    super();\n    this.mountPoint = document.createElement('div');\n    this.connected = false;\n\n    // need a way to push into the react component w/o rerendering the custom element\n    this._notify = new EventEmitter().setMaxListeners(50);\n\n    this.onRequestHint = (attemptGuid: string, partAttemptGuid: string) =>\n      this.dispatch('requestHint', attemptGuid, partAttemptGuid);\n\n    this.onGetData = (attemptGuid: string, partAttemptGuid: string, payload: any) =>\n      this.dispatch('getUserData', attemptGuid, partAttemptGuid, payload);\n\n    this.onSetData = (attemptGuid: string, partAttemptGuid: string, payload: any) =>\n      this.dispatch('setUserData', attemptGuid, partAttemptGuid, payload);\n\n    this.onSaveActivity = (attemptGuid: string, partResponses: PartResponse[]) =>\n      this.dispatch('saveActivity', attemptGuid, undefined, partResponses);\n    this.onSubmitActivity = (attemptGuid: string, partResponses: PartResponse[]) =>\n      this.dispatch('submitActivity', attemptGuid, undefined, partResponses);\n    this.onResetActivity = (attemptGuid: string) =>\n      this.dispatch('resetActivity', attemptGuid, undefined);\n\n    this.onSavePart = (attemptGuid: string, partAttemptGuid: string, response: StudentResponse) =>\n      this.dispatch('savePart', attemptGuid, partAttemptGuid, response);\n    this.onSubmitPart = (attemptGuid: string, partAttemptGuid: string, response: StudentResponse) =>\n      this.dispatch('submitPart', attemptGuid, partAttemptGuid, response);\n    this.onResetPart = (attemptGuid: string, partAttemptGuid: string) =>\n      this.dispatch('resetPart', attemptGuid, partAttemptGuid);\n    this.onSubmitEvaluations = (attemptGuid: string, clientEvaluations: ClientEvaluation[]) =>\n      this.dispatch('submitEvaluations', attemptGuid, undefined, clientEvaluations);\n\n    this.onReady = (attemptGuid: string) => this.dispatch('activityReady', attemptGuid, undefined);\n    this.onResize = (attemptGuid: string) => this.dispatch('resizePart', attemptGuid, undefined);\n  }\n\n  static get observedAttributes() {\n    return ['model', 'state'];\n  }\n\n  dispatch(\n    name: string,\n    attemptGuid: string,\n    partAttemptGuid: string | undefined,\n    payload?: any,\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const continuation = (result: any, error: any) => {\n        if (error !== undefined) {\n          reject(error);\n          return;\n        }\n        resolve(result);\n      };\n      if (this.review) {\n        continuation(null, 'in review mode');\n        return;\n      }\n      this.dispatchEvent(\n        new CustomEvent(name, this.details(continuation, attemptGuid, partAttemptGuid, payload)),\n      );\n    });\n  }\n\n  notify(eventName: string, payload: any): void {\n    this._notify.emit(eventName, payload);\n  }\n\n  props(): DeliveryElementProps<T> {\n    const model = JSON.parse(this.getAttribute('model') as any);\n    const graded = JSON.parse(this.getAttribute('graded') as any);\n    const state = JSON.parse(this.getAttribute('state') as any) as ActivityState;\n    const mode = valueOr(this.getAttribute('mode'), 'delivery') as DeliveryMode;\n    const sectionSlug = valueOr(this.getAttribute('section_slug'), undefined);\n    const userId = this.getAttribute('user_id') as any;\n\n    this.review = mode === 'review';\n\n    return {\n      graded,\n      model,\n      state,\n      mode,\n      sectionSlug,\n      onWriteUserState: this.onSetData,\n      onReadUserState: this.onGetData,\n      onRequestHint: this.onRequestHint,\n      onSavePart: this.onSavePart,\n      onSubmitPart: this.onSubmitPart,\n      onResetPart: this.onResetPart,\n      onSaveActivity: this.onSaveActivity,\n      onSubmitActivity: this.onSubmitActivity,\n      onResetActivity: this.onResetActivity,\n      onSubmitEvaluations: this.onSubmitEvaluations,\n      onReady: this.onReady,\n      onResize: this.onResize,\n      userId,\n      notify: this._notify,\n      mountPoint: this.mountPoint,\n    };\n  }\n\n  details(\n    continuation: (result: any, error: any) => void,\n    attemptGuid: string,\n    partAttemptGuid: string | undefined,\n    payload?: any,\n  ) {\n    return {\n      bubbles: true,\n      detail: {\n        payload,\n        sectionSlug: this.props().sectionSlug,\n        attemptGuid,\n        partAttemptGuid,\n        continuation,\n        props: this.props(),\n      },\n    };\n  }\n\n  abstract render(mountPoint: HTMLDivElement, props: DeliveryElementProps<T>): void;\n\n  connectedCallback() {\n    this.appendChild(this.mountPoint);\n    this.render(this.mountPoint, this.props());\n    this.connected = true;\n  }\n\n  attributeChangedCallback(_name: any, _oldValue: any, _newValue: any) {\n    if (this.connected) {\n      this.render(this.mountPoint, this.props());\n    }\n  }\n}\n\nexport interface DeliveryElementState<T> extends DeliveryElementProps<T> {\n  writerContext: WriterContext;\n}\nconst DeliveryElementContext = React.createContext<DeliveryElementState<any> | undefined>(\n  undefined,\n);\nexport function useDeliveryElementContext<T>() {\n  return Maybe.maybe(\n    useContext<DeliveryElementState<T> | undefined>(DeliveryElementContext),\n  ).valueOrThrow(\n    new Error('useDeliveryElementContext must be used within an DeliveryElementProvider'),\n  );\n}\nexport const DeliveryElementProvider: React.FC<DeliveryElementProps<any>> = (props) => {\n  const writerContext = defaultWriterContext({ sectionSlug: props.sectionSlug });\n\n  return (\n    <DeliveryElementContext.Provider value={{ ...props, writerContext }}>\n      {props.children}\n    </DeliveryElementContext.Provider>\n  );\n};\n"]}