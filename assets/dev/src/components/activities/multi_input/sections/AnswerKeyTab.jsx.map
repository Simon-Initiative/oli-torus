{"version":3,"file":"AnswerKeyTab.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/multi_input/sections/AnswerKeyTab.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport { MCActions } from 'components/activities/common/authoring/actions/multipleChoiceActions';\nimport { AuthoringButtonConnected } from 'components/activities/common/authoring/AuthoringButton';\nimport { ChoicesDelivery } from 'components/activities/common/choices/delivery/ChoicesDelivery';\nimport { ResponseActions } from 'components/activities/common/responses/responseActions';\nimport { ResponseCard } from 'components/activities/common/responses/ResponseCard';\nimport { SimpleFeedback } from 'components/activities/common/responses/SimpleFeedback';\nimport { TargetedFeedback } from 'components/activities/common/responses/TargetedFeedback';\nimport { getCorrectChoice } from 'components/activities/multiple_choice/utils';\nimport {\n  Dropdown,\n  FillInTheBlank,\n  MultiInput,\n  MultiInputSchema,\n} from 'components/activities/multi_input/schema';\nimport { InputEntry } from 'components/activities/short_answer/sections/InputEntry';\nimport { getTargetedResponses } from 'components/activities/short_answer/utils';\nimport { makeResponse, Response } from 'components/activities/types';\nimport { Radio } from 'components/misc/icons/radio/Radio';\nimport { getCorrectResponse } from 'data/activities/model/responses';\nimport { containsRule, eqRule } from 'data/activities/model/rules';\nimport { defaultWriterContext } from 'data/content/writers/context';\nimport React from 'react';\n\nexport const addTargetedFeedbackFillInTheBlank = (input: FillInTheBlank) =>\n  ResponseActions.addResponse(\n    makeResponse(\n      input.inputType === 'numeric' ? eqRule('1') : containsRule('another answer'),\n      0,\n      '',\n    ),\n    input.partId,\n  );\n\ninterface Props {\n  input: MultiInput;\n}\nexport const AnswerKeyTab: React.FC<Props> = (props) => {\n  const { model, dispatch } = useAuthoringElementContext<MultiInputSchema>();\n\n  if (props.input.inputType === 'dropdown') {\n    const choices = model.choices.filter((choice) =>\n      (props.input as Dropdown).choiceIds.includes(choice.id),\n    );\n    return (\n      <>\n        <ChoicesDelivery\n          unselectedIcon={<Radio.Unchecked />}\n          selectedIcon={<Radio.Checked />}\n          choices={choices}\n          selected={[getCorrectChoice(model, props.input.partId).id]}\n          onSelect={(id) => dispatch(MCActions.toggleChoiceCorrectness(id, props.input.partId))}\n          isEvaluated={false}\n          context={defaultWriterContext()}\n        />\n        <SimpleFeedback partId={props.input.partId} />\n        <TargetedFeedback\n          choices={model.choices.filter((choice) =>\n            (props.input as Dropdown).choiceIds.includes(choice.id),\n          )}\n          toggleChoice={(choiceId, mapping) => {\n            dispatch(MCActions.editTargetedFeedbackChoice(mapping.response.id, choiceId));\n          }}\n          addTargetedResponse={() =>\n            dispatch(MCActions.addTargetedFeedback(props.input.partId, choices[0].id))\n          }\n          unselectedIcon={<Radio.Unchecked />}\n          selectedIcon={<Radio.Checked />}\n        />\n      </>\n    );\n  }\n  return (\n    <div className=\"d-flex flex-column mb-2\">\n      <InputEntry\n        key={getCorrectResponse(model, props.input.partId).id}\n        inputType={props.input.inputType}\n        response={getCorrectResponse(model, props.input.partId)}\n        onEditResponseRule={(id, rule) => dispatch(ResponseActions.editRule(id, rule))}\n      />\n      <SimpleFeedback partId={props.input.partId} />\n      {getTargetedResponses(model, props.input.partId).map((response: Response) => (\n        <ResponseCard\n          title=\"Targeted feedback\"\n          response={response}\n          updateFeedback={(_id, content) =>\n            dispatch(ResponseActions.editResponseFeedback(response.id, content))\n          }\n          removeResponse={(id) => dispatch(ResponseActions.removeResponse(id))}\n          key={response.id}\n        >\n          <InputEntry\n            key={response.id}\n            inputType={(props.input as FillInTheBlank).inputType}\n            response={response}\n            onEditResponseRule={(id, rule) => dispatch(ResponseActions.editRule(id, rule))}\n          />\n        </ResponseCard>\n      ))}\n      <AuthoringButtonConnected\n        ariaLabel=\"Add targeted feedback\"\n        className=\"align-self-start btn btn-link\"\n        action={() => dispatch(addTargetedFeedbackFillInTheBlank(props.input as FillInTheBlank))}\n      >\n        Add targeted feedback\n      </AuthoringButtonConnected>\n    </div>\n  );\n};\n"]}