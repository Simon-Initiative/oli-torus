{"version":3,"file":"HintsTab.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/multi_input/sections/HintsTab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,EAAE,cAAc,EAAE,MAAM,6DAA6D,CAAC;AAE7F,OAAO,EAAE,SAAS,EAAE,MAAM,yCAAyC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AACpD,OAAO,KAAK,MAAM,OAAO,CAAC;AAM1B,MAAM,CAAC,MAAM,QAAQ,GAAoB,CAAC,KAAK,EAAE,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,0BAA0B,EAAoB,CAAC;IAE3E,OAAO,CACL,CAAC,cAAc,CACb,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CACpB,KAAK,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAC/C,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CACpE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CACvE,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CACjD,WAAW,CAAC,MAAM,CAClB,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAC3C,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport { CognitiveHints } from 'components/activities/common/hints/authoring/HintsAuthoring';\nimport { MultiInput, MultiInputSchema } from 'components/activities/multi_input/schema';\nimport { partTitle } from 'components/activities/multi_input/utils';\nimport { makeHint } from 'components/activities/types';\nimport { Hints } from 'data/activities/model/hints';\nimport React from 'react';\n\ninterface Props {\n  input: MultiInput;\n  index: number;\n}\nexport const HintsTab: React.FC<Props> = (props) => {\n  const { model, dispatch } = useAuthoringElementContext<MultiInputSchema>();\n\n  return (\n    <CognitiveHints\n      key={props.input.id}\n      hints={Hints.byPart(model, props.input.partId)}\n      updateOne={(id, content) => dispatch(Hints.setContent(id, content))}\n      addOne={() => dispatch(Hints.addOne(makeHint(''), props.input.partId))}\n      removeOne={(id) => dispatch(Hints.removeOne(id))}\n      placeholder=\"Hint\"\n      title={partTitle(props.input, props.index)}\n    />\n  );\n};\n"]}