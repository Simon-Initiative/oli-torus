{"version":3,"file":"QuestionTab.jsx","sourceRoot":"","sources":["../../../../../../src/components/activities/multi_input/sections/QuestionTab.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AACpF,OAAO,EAAE,qBAAqB,EAAE,MAAM,kEAAkE,CAAC;AAEzG,OAAO,EAAE,sBAAsB,EAAE,MAAM,mEAAmE,CAAC;AAC3G,OAAO,EAAE,SAAS,EAAE,MAAM,yCAAyC,CAAC;AACpE,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAC5C,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAU,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAQpD,MAAM,CAAC,MAAM,WAAW,GAAoB,CAAC,KAAK,EAAE,EAAE;IACpD,MAAM,EAAE,KAAK,EAAE,GAAG,0BAA0B,EAAoB,CAAC;IAEjE,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC;YACxB,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE;gBACnC,EAAE,EAAE,EAAE;gBACN,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,CAAC,EAAE;aACxF,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAC7B;MAAA,CAAC,IAAI,CAAC,KAAK,CACT;QAAA,EACE;UAAA,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CACpC;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,GAAG,CAClC;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,yCAAyC,CACtD;YAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,EAAG,CACnF;UAAA,EAAE,GAAG,CACP;QAAA,GACF;MAAA,EAAE,IAAI,CAAC,KAAK,CACZ;MAAA,CAAC,IAAI,CAAC,OAAO,CACX;QAAA,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,KAAK,UAAU,IAAI,CACvC,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAiB,CAAC,EAAG,CAC3D,CACH;MAAA,EAAE,IAAI,CAAC,OAAO,CAChB;IAAA,EAAE,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useAuthoringElementContext } from 'components/activities/AuthoringElement';\nimport { RemoveButtonConnected } from 'components/activities/common/authoring/removeButton/RemoveButton';\nimport { Dropdown, MultiInput, MultiInputSchema } from 'components/activities/multi_input/schema';\nimport { DropdownQuestionEditor } from 'components/activities/multi_input/sections/DropdownQuestionEditor';\nimport { partTitle } from 'components/activities/multi_input/utils';\nimport { Card } from 'components/misc/Card';\nimport { getParts } from 'data/activities/model/utils';\nimport React from 'react';\nimport { Editor, Element, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\n\ninterface Props {\n  editor: ReactEditor & Editor;\n  input: MultiInput;\n  index: number;\n}\nexport const QuestionTab: React.FC<Props> = (props) => {\n  const { model } = useAuthoringElementContext<MultiInputSchema>();\n\n  const removeInputRef = () => {\n    getParts(model).length > 1 &&\n      Transforms.removeNodes(props.editor, {\n        at: [],\n        match: (n) => Element.isElement(n) && n.type === 'input_ref' && n.id === props.input.id,\n      });\n  };\n\n  return (\n    <Card.Card key={props.input.id}>\n      <Card.Title>\n        <>\n          {partTitle(props.input, props.index)}\n          <div className=\"flex-grow-1\"></div>\n          <div className=\"choicesAuthoring__removeButtonContainer\">\n            {getParts(model).length > 1 && <RemoveButtonConnected onClick={removeInputRef} />}\n          </div>\n        </>\n      </Card.Title>\n      <Card.Content>\n        {props.input.inputType === 'dropdown' && (\n          <DropdownQuestionEditor input={props.input as Dropdown} />\n        )}\n      </Card.Content>\n    </Card.Card>\n  );\n};\n"]}