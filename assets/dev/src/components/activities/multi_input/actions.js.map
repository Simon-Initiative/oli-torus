{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../../src/components/activities/multi_input/actions.ts"],"names":[],"mappings":"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","sourcesContent":["import { MCActions } from 'components/activities/common/authoring/actions/multipleChoiceActions';\nimport { StemActions } from 'components/activities/common/authoring/actions/stemActions';\nimport {\n  Dropdown,\n  MultiInput,\n  MultiInputSchema,\n  MultiInputType,\n} from 'components/activities/multi_input/schema';\nimport {\n  Choice,\n  ChoiceId,\n  makeChoice,\n  makeHint,\n  makePart,\n  makeUndoable,\n  Part,\n  PostUndoable,\n  Stem,\n} from 'components/activities/types';\nimport { elementsAdded, elementsOfType, elementsRemoved } from 'components/editing/utils';\nimport { Choices } from 'data/activities/model/choices';\nimport { List } from 'data/activities/model/list';\nimport { getCorrectResponse, Responses } from 'data/activities/model/responses';\nimport { matchRule } from 'data/activities/model/rules';\nimport { getByUnsafe, getPartById, getParts } from 'data/activities/model/utils';\nimport { InputRef } from 'data/content/model/elements/types';\nimport { Descendant, Editor, Element, Operation } from 'slate';\nimport { clone } from 'utils/common';\nimport { Operations } from 'utils/pathOperations';\n\nexport const MultiInputActions = {\n  editStemAndPreviewText(content: Descendant[], editor: Editor, operations: Operation[]) {\n    return (model: MultiInputSchema, post: PostUndoable) => {\n      const removedInputRefs = elementsRemoved<InputRef>(operations, 'input_ref');\n\n      // Handle error condition - removing an extra input ref that is not present in the model\n      if (\n        removedInputRefs.length > 0 &&\n        removedInputRefs.every((ref) => !model.inputs.find((input) => input.id === ref.id))\n      ) {\n        StemActions.editStemAndPreviewText(content)(model);\n        return;\n      }\n\n      if (getParts(model).length - removedInputRefs.length < 1) {\n        return;\n      }\n      if (\n        operations.find(\n          (op) =>\n            op.type === 'insert_node' &&\n            Element.isElement(op.node) &&\n            op.node.type === 'input_ref' &&\n            model.inputs.find((input) => input.id === (op.node as InputRef).id),\n        )\n      ) {\n        // duplicate input id, do nothing\n        return;\n      }\n\n      MultiInputActions.addMissingParts(operations)(model);\n      MultiInputActions.removeExtraParts(operations)(model, post);\n      StemActions.editStemAndPreviewText(content)(model);\n\n      // Reorder parts and inputs by new editor model\n      const inputRefIds = elementsOfType<InputRef>(editor, 'input_ref').map(({ id }) => id);\n      MultiInputActions.reorderInputs(inputRefIds)(model);\n      MultiInputActions.reorderPartsByInputs()(model);\n    };\n  },\n\n  addMissingParts(operations: Operation[]) {\n    return (model: MultiInputSchema) => {\n      elementsAdded<InputRef>(operations, 'input_ref').forEach((inputRef) =>\n        MultiInputActions.addPart(inputRef.id)(model),\n      );\n    };\n  },\n\n  removeExtraParts(operations: Operation[]) {\n    return (model: MultiInputSchema, post: PostUndoable) => {\n      const removedInputRefs = elementsRemoved<InputRef>(operations, 'input_ref');\n      const clonedStem = clone(model.stem);\n      const clonedPreviewText = clone(model.authoring.previewText);\n      removedInputRefs.forEach((inputRef) =>\n        MultiInputActions.removePart(inputRef.id, clonedStem, clonedPreviewText)(model, post),\n      );\n    };\n  },\n\n  addChoice(inputId: string, choice: Choice) {\n    return (model: MultiInputSchema) => {\n      const input = model.inputs.find((input) => input.id === inputId);\n      if (!input || input.inputType !== 'dropdown') return;\n      Choices.addOne(choice)(model);\n      input.choiceIds.push(choice.id);\n    };\n  },\n\n  reorderChoices(inputId: string, dropdownChoices: Choice[]) {\n    return (model: MultiInputSchema) => {\n      const input = model.inputs.find((input) => input.id === inputId);\n      if (!input || input.inputType !== 'dropdown') return;\n\n      model.choices = model.choices.filter(\n        (choice) => !dropdownChoices.map(({ id }) => id).includes(choice.id),\n      );\n      model.choices.push(...dropdownChoices);\n    };\n  },\n\n  reorderPartsByInputs() {\n    return (model: MultiInputSchema) => {\n      const { getOne, setAll } = List<Part>('$..parts');\n      const orderedPartIds = model.inputs.map((input) => input.partId);\n      // safety filter in case somehow there's a missing input\n      setAll(orderedPartIds.map((id) => getOne(model, id)).filter((x) => !!x))(model);\n    };\n  },\n\n  reorderInputs(reorderedIds: string[]) {\n    return (model: MultiInputSchema) => {\n      const { getOne, setAll } = List<MultiInput>('$.inputs');\n      // safety filter in case somehow there's a missing input\n      setAll(reorderedIds.map((id) => getOne(model, id)).filter((x) => !!x))(model);\n    };\n  },\n\n  removeChoice(inputId: string, choiceId: ChoiceId) {\n    return (model: MultiInputSchema, post: PostUndoable) => {\n      const input = getByUnsafe(model.inputs, (input) => input.id === inputId) as Dropdown;\n      const inputIndex = input.choiceIds.findIndex((id) => id === choiceId);\n      if (input.choiceIds.length < 2) return;\n\n      const choice = Choices.getOne(model, choiceId);\n      const choiceIndex = Choices.getAll(model).findIndex((c) => c.id === choiceId);\n\n      // Remove the choice id from the input and the choice from the model\n      Choices.removeOne(choiceId)(model);\n      input.choiceIds = input.choiceIds.filter((id) => id !== choiceId);\n\n      // if the choice being removed is the correct choice, a new correct choice\n      // must be set\n      const authoringClone = clone(model.authoring);\n      if (getCorrectResponse(model, input.partId).rule === matchRule(choiceId)) {\n        MCActions.toggleChoiceCorrectness(input.choiceIds[0], input.partId)(model, post);\n      }\n\n      post(\n        makeUndoable('Removed a choice', [\n          Operations.replace('$.authoring', authoringClone),\n          Operations.insert(`$.inputs[?(@.id==${input.id})].choiceIds`, choiceId, inputIndex),\n          Operations.insert(Choices.path, clone(choice), choiceIndex),\n        ]),\n      );\n    };\n  },\n\n  setInputType(id: string, type: MultiInputType) {\n    return (model: MultiInputSchema) => {\n      const input = getByUnsafe(model.inputs, (x) => x.id === id);\n\n      const inputTypeChanged = input.inputType !== type;\n      if (!inputTypeChanged) return;\n\n      const choices = [makeChoice('Choice A'), makeChoice('Choice B')];\n      const part = getPartById(model, input.partId);\n\n      if (input.inputType === 'dropdown') {\n        MultiInputActions.removeTargetedMappingsForPart(part)(model);\n        MultiInputActions.removeChoicesForInput(input)(model);\n      }\n\n      if (type === 'dropdown') {\n        model.choices.push(...choices);\n        (input as Dropdown).choiceIds = choices.map(({ id }) => id);\n      }\n\n      part.responses = {\n        dropdown: Responses.forMultipleChoice(choices[0].id),\n        text: Responses.forTextInput(),\n        numeric: Responses.forNumericInput(),\n      }[type];\n\n      input.inputType = type;\n    };\n  },\n\n  addPart(inputId: string) {\n    return (model: MultiInputSchema) => {\n      const part = makePart(Responses.forTextInput(), [makeHint('')]);\n      model.inputs.push({ inputType: 'text', partId: part.id, id: inputId });\n      model.authoring.parts.push(part);\n    };\n  },\n\n  removeTargetedMappingsForPart(part: Part) {\n    return (model: MultiInputSchema) => {\n      model.authoring.targeted = model.authoring.targeted.filter(\n        ([, responseId]) => !part.responses.find(({ id }) => id === responseId),\n      );\n    };\n  },\n\n  removeChoicesForInput(dropdown: Dropdown) {\n    return (model: MultiInputSchema) => {\n      model.choices = model.choices.filter((c) => !dropdown.choiceIds.includes(c.id));\n    };\n  },\n\n  removePart(inputId: string, stem: Stem, previewText: string) {\n    return (model: MultiInputSchema, post: PostUndoable) => {\n      if (getParts(model).length < 2) {\n        return;\n      }\n\n      const undoables = makeUndoable('Removed a part', [\n        Operations.replace('$.stem', stem),\n        Operations.replace('$..previewText', previewText),\n        Operations.replace('$.inputs', clone(model.inputs)),\n        Operations.replace('$.choices', clone(model.choices)),\n        Operations.replace('$.authoring', clone(model.authoring)),\n      ]);\n\n      const input = getByUnsafe(model.inputs, (input) => input.id === inputId);\n      const part = getPartById(model, input.partId);\n\n      if (input.inputType === 'dropdown') {\n        MultiInputActions.removeTargetedMappingsForPart(part)(model);\n        MultiInputActions.removeChoicesForInput(input)(model);\n      }\n\n      Operations.applyAll(model, [\n        Operations.filter('$..parts', `[?(@.id!=${part.id})]`),\n        Operations.filter('$.inputs', `[?(@.id!=${inputId})]`),\n      ]);\n\n      post(undoables);\n    };\n  },\n};\n"]}