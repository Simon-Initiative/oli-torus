{"version":3,"file":"MultiInputAuthoring.jsx","sourceRoot":"","sources":["../../../../../src/components/activities/multi_input/MultiInputAuthoring.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,kEAAkE,CAAC;AACpG,OAAO,EAAE,0BAA0B,EAAE,MAAM,yEAAyE,CAAC;AAErH,OAAO,EAAE,YAAY,EAAE,MAAM,yDAAyD,CAAC;AACvF,OAAO,EAAE,QAAQ,EAAE,MAAM,qDAAqD,CAAC;AAC/E,OAAO,EAAE,cAAc,EAAE,MAAM,2DAA2D,CAAC;AAC3F,OAAO,EAAE,WAAW,EAAE,MAAM,wDAAwD,CAAC;AAErF,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAC1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AAErE,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,QAAQ,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACvC,OAAO,EAAU,UAAU,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AAC7C,OAAO,EACL,gBAAgB,EAEhB,wBAAwB,EACxB,0BAA0B,GAC3B,MAAM,qBAAqB,CAAC;AAE7B,MAAM,KAAK,GAAG,cAAc,EAAE,CAAC;AAE/B,MAAM,CAAC,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACtC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,0BAA0B,EAAoB,CAAC;IAC3E,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAsC,CAAC;IACjF,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAuB,SAAS,CAAC,CAAC;IAEhG,uDAAuD;IACvD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAgB;YAAE,OAAO;QACzC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC5E,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAEvB,kDAAkD;IAClD,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,gBAAgB,IAAI,MAAM,EAAE;YAC/B,mBAAmB,CAAC,GAAG,EAAE,CAAC,cAAc,CAAW,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7E;IACH,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEb,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,MAAK,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,EAAE,CAAA,CAAC,CAAC;IAC9E,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,MAAK,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,EAAE,CAAA,CAAC,CAAC;IAEnF,OAAO,CACL,EACE;MAAA,CAAC,cAAc,CACb,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CACnC,mBAAmB,CAAC,CAAC,mBAAmB,CAAC,CACzC,SAAS,CAAC,CAAC,SAAS,CAAC,EAEvB;MAAA,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CACjB,CAAC,gBAAgB,CAAC,IAAI,CACpB;UAAA,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CACpC;YAAA,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAC1D;UAAA,EAAE,gBAAgB,CAAC,GAAG,CACtB;UAAA,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CACtC;YAAA,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAC7B;UAAA,EAAE,gBAAgB,CAAC,GAAG,CACtB;UAAA,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CACjC;YAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EACvC;UAAA,EAAE,gBAAgB,CAAC,GAAG,CACtB;UAAA,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,EAC5E;QAAA,EAAE,gBAAgB,CAAC,IAAI,CAAC,CACzB,CAAC,CAAC,CAAC,CACF,4BAA4B,CAC7B,CACH;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,OAAO,mBAAoB,SAAQ,gBAAkC;IACzE,MAAM,CAAC,UAA0B,EAAE,KAA8C;QAC/E,QAAQ,CAAC,MAAM,CACb,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CACrB;QAAA,CAAC,wBAAwB,CAAC,IAAI,KAAK,CAAC,CAClC;UAAA,CAAC,mBAAmB,CAAC,AAAD,EACtB;QAAA,EAAE,wBAAwB,CAC5B;MAAA,EAAE,QAAQ,CAAC,EACX,UAAU,CACX,CAAC;IACJ,CAAC;CACF;AACD,2BAA2B;AAC3B,MAAM,QAAQ,GAAG,OAAO,CAAC,iBAAiB,CAAa,CAAC;AACxD,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC","sourcesContent":["import { ActivitySettings } from 'components/activities/common/authoring/settings/ActivitySettings';\nimport { shuffleAnswerChoiceSetting } from 'components/activities/common/authoring/settings/activitySettingsActions';\nimport { MultiInputSchema } from 'components/activities/multi_input/schema';\nimport { AnswerKeyTab } from 'components/activities/multi_input/sections/AnswerKeyTab';\nimport { HintsTab } from 'components/activities/multi_input/sections/HintsTab';\nimport { MultiInputStem } from 'components/activities/multi_input/sections/MultiInputStem';\nimport { QuestionTab } from 'components/activities/multi_input/sections/QuestionTab';\nimport { Manifest } from 'components/activities/types';\nimport { elementsOfType } from 'components/editing/utils';\nimport { TabbedNavigation } from 'components/tabbed_navigation/Tabs';\nimport { InputRef } from 'data/content/model/elements/types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Editor, Transforms } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { configureStore } from 'state/store';\nimport {\n  AuthoringElement,\n  AuthoringElementProps,\n  AuthoringElementProvider,\n  useAuthoringElementContext,\n} from '../AuthoringElement';\n\nconst store = configureStore();\n\nexport const MultiInputComponent = () => {\n  const { dispatch, model } = useAuthoringElementContext<MultiInputSchema>();\n  const [editor, setEditor] = React.useState<(ReactEditor & Editor) | undefined>();\n  const [selectedInputRef, setSelectedInputRef] = React.useState<InputRef | undefined>(undefined);\n\n  // Focus the active input ref selection when it changes\n  React.useEffect(() => {\n    if (!editor || !selectedInputRef) return;\n    Transforms.select(editor, ReactEditor.findPath(editor, selectedInputRef));\n  }, [selectedInputRef]);\n\n  // Select the first input ref if none are selected\n  React.useEffect(() => {\n    if (!selectedInputRef && editor) {\n      setSelectedInputRef(() => elementsOfType<InputRef>(editor, 'input_ref')[0]);\n    }\n  }, [editor]);\n\n  const input = model.inputs.find((input) => input.id === selectedInputRef?.id);\n  const index = model.inputs.findIndex((input) => input.id === selectedInputRef?.id);\n\n  return (\n    <>\n      <MultiInputStem\n        selectedInputRef={selectedInputRef}\n        setSelectedInputRef={setSelectedInputRef}\n        setEditor={setEditor}\n      />\n      {editor && input ? (\n        <TabbedNavigation.Tabs>\n          <TabbedNavigation.Tab label=\"Question\">\n            <QuestionTab editor={editor} input={input} index={index} />\n          </TabbedNavigation.Tab>\n          <TabbedNavigation.Tab label=\"Answer Key\">\n            <AnswerKeyTab input={input} />\n          </TabbedNavigation.Tab>\n          <TabbedNavigation.Tab label=\"Hints\">\n            <HintsTab input={input} index={index} />\n          </TabbedNavigation.Tab>\n          <ActivitySettings settings={[shuffleAnswerChoiceSetting(model, dispatch)]} />\n        </TabbedNavigation.Tabs>\n      ) : (\n        'Select an input to edit it'\n      )}\n    </>\n  );\n};\n\nexport class MultiInputAuthoring extends AuthoringElement<MultiInputSchema> {\n  render(mountPoint: HTMLDivElement, props: AuthoringElementProps<MultiInputSchema>) {\n    ReactDOM.render(\n      <Provider store={store}>\n        <AuthoringElementProvider {...props}>\n          <MultiInputComponent />\n        </AuthoringElementProvider>\n      </Provider>,\n      mountPoint,\n    );\n  }\n}\n// eslint-disable-next-line\nconst manifest = require('./manifest.json') as Manifest;\nwindow.customElements.define(manifest.authoring.element, MultiInputAuthoring);\n"]}