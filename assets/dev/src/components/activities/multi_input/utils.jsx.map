{"version":3,"file":"utils.jsx","sourceRoot":"","sources":["../../../../../src/components/activities/multi_input/utils.tsx"],"names":[],"mappings":"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","sourcesContent":["import { SelectOption } from 'components/activities/common/authoring/InputTypeDropdown';\nimport { DEFAULT_PART_ID, setDifference, setUnion } from 'components/activities/common/utils';\nimport {\n  MultiInput,\n  MultiInputSchema,\n  MultiInputType,\n} from 'components/activities/multi_input/schema';\nimport {\n  makeChoice,\n  makeHint,\n  makePart,\n  makeTransformation,\n  Part,\n  Transform,\n} from 'components/activities/types';\nimport { Responses } from 'data/activities/model/responses';\nimport { isTextRule } from 'data/activities/model/rules';\nimport { inputRef } from 'data/content/model/elements/factories';\nimport { InputRef, Paragraph } from 'data/content/model/elements/types';\nimport { elementsOfType } from 'data/content/utils';\nimport React from 'react';\nimport { clone } from 'utils/common';\nimport guid from 'utils/guid';\n\nexport const multiInputOptions: SelectOption<'text' | 'numeric'>[] = [\n  { value: 'numeric', displayValue: 'Number' },\n  { value: 'text', displayValue: 'Text' },\n];\n\nexport const multiInputStem = (input: InputRef) => ({\n  id: guid(),\n  content: [\n    {\n      type: 'p',\n      id: guid(),\n      children: [{ text: 'Example question with a fill in the blank ' }, input, { text: '.' }],\n    } as Paragraph,\n  ],\n});\n\nexport const defaultModel = (): MultiInputSchema => {\n  const input = inputRef();\n\n  return {\n    stem: multiInputStem(input),\n    choices: [],\n    inputs: [{ inputType: 'text', id: input.id, partId: DEFAULT_PART_ID }],\n    authoring: {\n      parts: [makePart(Responses.forTextInput(), [makeHint('')], DEFAULT_PART_ID)],\n      targeted: [],\n      transformations: [makeTransformation('choices', Transform.shuffle)],\n      previewText: 'Example question with a fill in the blank',\n    },\n  };\n};\n\nexport const friendlyType = (type: MultiInputType) => {\n  if (type === 'dropdown') {\n    return 'Dropdown';\n  }\n  return `Input (${type === 'numeric' ? 'Number' : 'Text'})`;\n};\n\nexport const partTitle = (input: MultiInput, index: number) => (\n  <div>\n    {`Part ${index + 1}: `}\n    <span className=\"text-muted\">{friendlyType(input.inputType)}</span>\n  </div>\n);\n\nexport function guaranteeMultiInputValidity(model: MultiInputSchema): MultiInputSchema {\n  // Check whether model is valid first to save unnecessarily cloning the model\n  if (isValidModel(model)) {\n    return model;\n  }\n\n  // Model must be cloned before being passed to these mutable functions.\n  return ensureHasInput(\n    matchInputsToChoices(matchInputsToParts(matchInputsToInputRefs(clone(model)))),\n  );\n}\n\nfunction inputsMatchInputRefs(model: MultiInputSchema) {\n  const inputRefs = elementsOfType(model.stem.content, 'input_ref');\n  const union = setUnion(\n    inputRefs.map(({ id }) => id),\n    model.inputs.map(({ id }) => id),\n  );\n  return union.length === inputRefs.length && union.length === model.inputs.length;\n}\n\nfunction inputsMatchParts(model: MultiInputSchema) {\n  const parts = model.authoring.parts;\n  const union = setUnion(\n    model.inputs.map(({ partId }) => partId),\n    parts.map(({ id }) => id),\n  );\n  return union.length === model.inputs.length && union.length === parts.length;\n}\n\nfunction inputsMatchChoices(model: MultiInputSchema) {\n  const inputChoiceIds = model.inputs.reduce(\n    (acc, curr) => (curr.inputType === 'dropdown' ? acc.concat(curr.choiceIds) : acc),\n    [] as string[],\n  );\n  const union = setUnion(\n    model.choices.map(({ id }) => id),\n    inputChoiceIds,\n  );\n  return union.length === model.choices.length && union.length === inputChoiceIds.length;\n}\n\nfunction hasAnInput(model: MultiInputSchema) {\n  return model.inputs.length > 0;\n}\n\nfunction isValidModel(model: MultiInputSchema): boolean {\n  return (\n    hasAnInput(model) &&\n    inputsMatchInputRefs(model) &&\n    inputsMatchParts(model) &&\n    inputsMatchChoices(model)\n  );\n}\n\nfunction ensureHasInput(model: MultiInputSchema) {\n  if (hasAnInput(model)) {\n    return model;\n  }\n\n  // Make new input ref, add to first paragraph of stem, add new input to model.inputs,\n  // add new part.\n  const ref = inputRef();\n  const part = makePart(Responses.forTextInput(), [makeHint('')]);\n  const input: MultiInput = { id: ref.id, inputType: 'text', partId: part.id };\n\n  const firstParagraph = model.stem.content.find((elem) => elem.type === 'p') as\n    | Paragraph\n    | undefined;\n  firstParagraph?.children.push(ref);\n  firstParagraph?.children.push({ text: '' });\n\n  model.inputs.push(input);\n  model.authoring.parts.push(part);\n\n  return model;\n}\n\nfunction matchInputsToChoices(model: MultiInputSchema) {\n  if (inputsMatchChoices(model)) {\n    return model;\n  }\n\n  const choiceIds = model.choices.map(({ id }) => id);\n  const inputChoiceIds = model.inputs.reduce(\n    (acc, curr) => (curr.inputType === 'dropdown' ? acc.concat(curr.choiceIds) : acc),\n    [] as string[],\n  );\n\n  const unmatchedInputChoiceIds = setDifference(inputChoiceIds, choiceIds);\n\n  const unmatchedChoices = setDifference(choiceIds, inputChoiceIds).map((id) =>\n    model.choices.find((c) => c.id === id),\n  );\n\n  unmatchedInputChoiceIds.forEach((id) => {\n    model.choices.push(makeChoice('Choice', id));\n  });\n\n  model.choices = model.choices.filter((choice) => !unmatchedChoices.includes(choice));\n\n  return model;\n}\n\nfunction matchInputsToParts(model: MultiInputSchema) {\n  if (inputsMatchParts(model)) {\n    return model;\n  }\n\n  const inputIds = model.inputs.map(({ id }) => id);\n  const partIds = model.authoring.parts.map(({ id }) => id);\n\n  const unmatchedInputs = setDifference(inputIds, partIds).map((id) =>\n    model.inputs.find((input) => input.id === id),\n  );\n\n  const unmatchedParts = setDifference(inputIds, partIds).map((id) =>\n    model.authoring.parts.find((part) => part.id === id),\n  );\n\n  unmatchedInputs.forEach((input: MultiInput) => {\n    const choices = [makeChoice('Choice A'), makeChoice('Choice B')];\n    const part = makePart(\n      input.inputType === 'dropdown'\n        ? Responses.forMultipleChoice(choices[0].id)\n        : input.inputType === 'numeric'\n        ? Responses.forNumericInput()\n        : Responses.forTextInput(),\n    );\n    model.authoring.parts.push(part);\n  });\n\n  unmatchedParts.forEach((part: Part) => {\n    const rule = part.responses[0].rule;\n    const type = rule.match(/{\\d+}/) ? 'dropdown' : isTextRule(rule) ? 'text' : 'numeric';\n    const ref = inputRef();\n    // If it's a dropdown, change the part to a text input.\n    model.inputs.push({\n      id: ref.id,\n      inputType: type === 'dropdown' ? 'text' : type,\n      partId: part.id,\n    });\n    part.responses = type === 'dropdown' ? Responses.forTextInput() : part.responses;\n    // add inputRef to end of first paragraph in stem\n    const firstParagraph = model.stem.content.find((elem) => elem.type === 'p') as\n      | Paragraph\n      | undefined;\n    firstParagraph?.children.push(ref);\n    firstParagraph?.children.push({ text: '' });\n  });\n\n  return model;\n}\n\nfunction matchInputsToInputRefs(model: MultiInputSchema) {\n  if (inputsMatchInputRefs(model)) {\n    return model;\n  }\n\n  const inputRefIds = elementsOfType(model.stem.content, 'input_ref').map(({ id }) => id);\n  const inputIds = model.inputs.map(({ id }) => id);\n\n  const unmatchedInputs = setDifference(inputIds, inputRefIds).map((id) =>\n    model.inputs.find((input) => input.id === id),\n  );\n\n  const unmatchedInputRefs = setDifference(inputRefIds, inputIds).map(\n    (id) => ({ id, type: 'input_ref' } as InputRef),\n  );\n\n  unmatchedInputs.forEach((input: MultiInput) => {\n    // add inputRef to end of first paragraph in stem\n    const firstParagraph = model.stem.content.find((e) => e.type === 'p') as Paragraph | undefined;\n    firstParagraph?.children.push({ ...inputRef(), id: input.id });\n    firstParagraph?.children.push({ text: '' });\n  });\n\n  unmatchedInputRefs.forEach((ref) => {\n    // create new input and part for the input ref in the stem\n    const part = makePart(Responses.forTextInput(), [makeHint('')]);\n    model.inputs.push({ id: ref.id, inputType: 'text', partId: part.id } as MultiInput);\n    model.authoring.parts.push(part);\n  });\n  return model;\n}\n"]}