{"version":3,"file":"useMousePosition.jsx","sourceRoot":"","sources":["../../../../../src/components/misc/resizer/useMousePosition.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAO5C,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAA2B,EAAE;IAC3D,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAyB,IAAI,CAAC,CAAC;IAEjF,MAAM,mBAAmB,GAAG,CAAC,EAAc,EAAE,EAAE;QAC7C,gBAAgB,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;QAE1D,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;IAC5E,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,aAAa,CAAC;AACvB,CAAC,CAAC","sourcesContent":["import { Nullish } from 'types/nullish';\nimport { useState, useEffect } from 'react';\n\nexport interface MousePosition {\n  x: number;\n  y: number;\n}\n\nexport const useMousePosition = (): Nullish<MousePosition> => {\n  const [mousePosition, setMousePosition] = useState<Nullish<MousePosition>>(null);\n\n  const updateMousePosition = (ev: MouseEvent) => {\n    setMousePosition({ x: ev.clientX, y: ev.clientY });\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousemove', updateMousePosition);\n\n    return () => window.removeEventListener('mousemove', updateMousePosition);\n  }, []);\n\n  return mousePosition;\n};\n"]}