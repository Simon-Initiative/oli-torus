{"version":3,"file":"Editor.jsx","sourceRoot":"","sources":["../../../../../src/components/editing/editor/Editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ModelElement } from 'data/content/model/elements/types';\nimport { Mark } from 'data/content/model/text';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { createEditor, Descendant, Editor as SlateEditor, Operation } from 'slate';\nimport { withHistory } from 'slate-history';\nimport { Editable, RenderElementProps, RenderLeafProps, Slate, withReact } from 'slate-react';\nimport guid from 'utils/guid';\nimport { CommandContext, ToolbarItem } from '../commands/interfaces';\nimport { formatMenuCommands } from '../toolbars/formatting/items';\nimport { FormattingToolbar } from '../toolbars/formatting/Toolbar';\nimport { shouldShowFormattingToolbar } from '../toolbars/formatting/utils';\nimport { HoveringToolbar } from '../toolbars/HoveringToolbar';\nimport { InsertionToolbar } from '../toolbars/insertion/Toolbar';\nimport { hotkeyHandler } from './handlers/hotkey';\nimport { onKeyDown as listOnKeyDown } from './handlers/lists';\nimport { onPaste } from './handlers/paste';\nimport { onKeyDown as quoteOnKeyDown } from './handlers/quote';\nimport { onKeyDown as titleOnKeyDown } from './handlers/title';\nimport { onKeyDown as voidOnKeyDown } from './handlers/void';\nimport { editorFor, markFor } from './modelEditorDispatch';\nimport { installNormalizer, NormalizerContext } from './normalizers/normalizer';\nimport { withInlines } from './overrides/inlines';\nimport { withMarkdown } from './overrides/markdown';\nimport { withTables } from './overrides/tables';\nimport { withVoids } from './overrides/voids';\n\nexport type EditorProps = {\n  // Callback when there has been any change to the editor\n  onEdit: (value: Descendant[], editor: SlateEditor, operations: Operation[]) => void;\n  // The content to display\n  value: Descendant[];\n  // The insertion toolbar configuration\n  toolbarItems: ToolbarItem[];\n  // Whether or not editing is allowed\n  editMode: boolean;\n  commandContext: CommandContext;\n  normalizerContext?: NormalizerContext;\n  className?: string;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  children?: React.ReactNode;\n};\n\n// Necessary to work around FireFox focus and selection issues with Slate\n// https://github.com/ianstormtaylor/slate/issues/1984\nfunction emptyOnFocus() {\n  return;\n}\n\nfunction areEqual(prevProps: EditorProps, nextProps: EditorProps) {\n  return (\n    prevProps.editMode === nextProps.editMode &&\n    prevProps.toolbarItems === nextProps.toolbarItems &&\n    prevProps.value === nextProps.value &&\n    prevProps.placeholder === nextProps.placeholder\n  );\n}\n\nexport const Editor: React.FC<EditorProps> = React.memo((props: EditorProps) => {\n  const [isPerformingAsyncAction, setIsPerformingAsyncAction] = useState(false);\n  const [installed, setInstalled] = useState(false);\n\n  const commandContext = props.commandContext;\n\n  const editor = useMemo(\n    () =>\n      withMarkdown(commandContext)(\n        withReact(withHistory(withTables(withInlines(withVoids(createEditor()))))),\n      ),\n    [],\n  );\n\n  // Install the custom normalizer, only once\n  useEffect(() => {\n    if (!installed) {\n      installNormalizer(editor, props.normalizerContext);\n      setInstalled(true);\n    }\n  }, [installed]);\n\n  const renderElement = useCallback(\n    (props: RenderElementProps) => {\n      const model = props.element as ModelElement;\n\n      return editorFor(model, props, editor, commandContext);\n    },\n    [commandContext],\n  );\n\n  const onKeyDown = useCallback((e: React.KeyboardEvent) => {\n    voidOnKeyDown(editor, e);\n    listOnKeyDown(editor, e);\n    quoteOnKeyDown(editor, e);\n    titleOnKeyDown(editor, e);\n    hotkeyHandler(editor, e.nativeEvent, commandContext);\n  }, []);\n\n  const renderLeaf = useCallback(({ attributes, children, leaf }: RenderLeafProps) => {\n    const markup = Object.keys(leaf).reduce(\n      (m, k) => (k !== 'text' ? markFor(k as Mark, m) : m),\n      children,\n    );\n    return <span {...attributes}>{markup}</span>;\n  }, []);\n\n  const onChange = (value: Descendant[]) => {\n    const { operations } = editor;\n\n    // Determine if this onChange was due to an actual content change.\n    // Otherwise, undo/redo will save pure selection changes.\n    if (operations.filter(({ type }) => type !== 'set_selection').length) {\n      props.onEdit(value, editor, operations);\n    }\n  };\n\n  const normalizedValue: Descendant[] =\n    props.value.length === 0 ? [{ type: 'p', id: guid(), children: [{ text: '' }] }] : props.value;\n\n  return (\n    <React.Fragment>\n      <Slate editor={editor} value={normalizedValue} onChange={onChange}>\n        {props.children}\n        <InsertionToolbar\n          isPerformingAsyncAction={isPerformingAsyncAction}\n          toolbarItems={props.toolbarItems}\n          commandContext={props.commandContext}\n        />\n\n        <HoveringToolbar isOpen={shouldShowFormattingToolbar}>\n          <FormattingToolbar\n            commandDescs={formatMenuCommands}\n            commandContext={props.commandContext}\n          />\n        </HoveringToolbar>\n\n        <Editable\n          style={props.style}\n          className={'slate-editor overflow-auto' + (props.className ? ' ' + props.className : '')}\n          readOnly={!props.editMode}\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder={\n            props.placeholder === undefined ? 'Enter some content here...' : props.placeholder\n          }\n          onKeyDown={onKeyDown}\n          onFocus={emptyOnFocus}\n          onPaste={\n            () => {}\n            //   async (\n            //   e: React.ClipboardEvent<HTMLDivElement>,\n            //   editor: SlateEditor,\n            //   // eslint-disable-next-line\n            //   next: Function,\n            // ) => {\n            //   setIsPerformingAsyncAction(true);\n            //   await onPaste(editor, e, props.commandContext.projectSlug);\n            //   setIsPerformingAsyncAction(false);\n            //   next();\n            // }\n          }\n        />\n      </Slate>\n    </React.Fragment>\n  );\n}, areEqual);\nEditor.displayName = 'Editor';\n"]}