{"version":3,"file":"title.js","sourceRoot":"","sources":["../../../../../../src/components/editing/editor/handlers/title.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AACjF,OAAO,EAAE,CAAC,EAAE,MAAM,uCAAuC,CAAC;AAE1D,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,MAAmB,EAAE,CAAsB,EAAE,EAAE;IACvE,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;QACrB,sBAAsB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KACnC;AACH,CAAC,CAAC;AAEF,yFAAyF;AACzF,SAAS,sBAAsB,CAAC,MAAmB,EAAE,CAAsB;IACzE,IAAI,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;QAC3D,MAAM,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE;YACxC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CACX,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI;oBACd,CAAC,CAAC,IAAI,KAAK,IAAI;oBACf,CAAC,CAAC,IAAI,KAAK,IAAI;oBACf,CAAC,CAAC,IAAI,KAAK,IAAI;oBACf,CAAC,CAAC,IAAI,KAAK,IAAI;oBACf,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;SACrB,CAAC,CAAC;QAEH,IAAI,KAAK,EAAE;YACT,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;YAEvB,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAE1C,2CAA2C;YAC3C,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;gBAC7C,mCAAmC;gBACnC,MAAM,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;gBACzD,IAAI,SAAS,EAAE;oBACb,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,SAAS,CAAC;oBAC/B,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAEtD,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;oBACvD,IAAI,OAAO,EAAE;wBACX,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC;wBAC5B,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;qBACpC;oBAED,iDAAiD;iBAClD;qBAAM;oBACL,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAClC,IAAI,EAAE,SAAS;wBACf,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;qBAChC,CAAC,CAAC;oBAEH,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;oBACvD,IAAI,OAAO,EAAE;wBACX,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC;wBAC5B,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;qBACpC;iBACF;gBAED,CAAC,CAAC,cAAc,EAAE,CAAC;aACpB;SACF;KACF;AACH,CAAC","sourcesContent":["import React from 'react';\nimport { Point, Range, Editor as SlateEditor, Transforms, Element } from 'slate';\nimport { p } from 'data/content/model/elements/factories';\n\nexport const onKeyDown = (editor: SlateEditor, e: React.KeyboardEvent) => {\n  if (e.key === 'Enter') {\n    handleTitleTermination(editor, e);\n  }\n};\n\n// Handles exiting a header item via Enter key, setting the next block back to normal (p)\nfunction handleTitleTermination(editor: SlateEditor, e: React.KeyboardEvent) {\n  if (editor.selection && Range.isCollapsed(editor.selection)) {\n    const [match] = SlateEditor.nodes(editor, {\n      match: (n) =>\n        Element.isElement(n) &&\n        (n.type === 'h1' ||\n          n.type === 'h2' ||\n          n.type === 'h3' ||\n          n.type === 'h4' ||\n          n.type === 'h5' ||\n          n.type === 'h6'),\n    });\n\n    if (match) {\n      const [, path] = match;\n\n      const end = SlateEditor.end(editor, path);\n\n      // If the cursor is at the end of the block\n      if (Point.equals(editor.selection.focus, end)) {\n        // Insert it ahead of the next node\n        const nextMatch = SlateEditor.next(editor, { at: path });\n        if (nextMatch) {\n          const [, nextPath] = nextMatch;\n          Transforms.insertNodes(editor, p(), { at: nextPath });\n\n          const newNext = SlateEditor.next(editor, { at: path });\n          if (newNext) {\n            const [, newPath] = newNext;\n            Transforms.select(editor, newPath);\n          }\n\n          // But if there is no next node, insert it at end\n        } else {\n          Transforms.insertNodes(editor, p(), {\n            mode: 'highest',\n            at: SlateEditor.end(editor, []),\n          });\n\n          const newNext = SlateEditor.next(editor, { at: path });\n          if (newNext) {\n            const [, newPath] = newNext;\n            Transforms.select(editor, newPath);\n          }\n        }\n\n        e.preventDefault();\n      }\n    }\n  }\n}\n"]}