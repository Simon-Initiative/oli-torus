{"version":3,"file":"lists.js","sourceRoot":"","sources":["../../../../../../src/components/editing/editor/handlers/lists.ts"],"names":[],"mappings":"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","sourcesContent":["import { Transforms, Range, Node, Point, Path, Editor as SlateEditor, Element, Text } from 'slate';\nimport { KeyboardEvent } from 'react';\nimport { OrderedList, UnorderedList } from 'data/content/model/elements/types';\nimport { ListItem } from '../../../../data/content/model/elements/types';\nimport { ol, p, ul } from 'data/content/model/elements/factories';\n\n// The key down handler required to allow special list processing.\nexport const onKeyDown = (editor: SlateEditor, e: KeyboardEvent) => {\n  if (e.key === 'Tab' && e.shiftKey) {\n    handleOutdent(editor, e);\n  } else if (e.key === 'Tab' && !e.shiftKey) {\n    handleIndent(editor, e);\n  } else if (e.key === 'Enter') {\n    handleTermination(editor, e);\n  }\n};\n\nconst isList = (n: Node): n is UnorderedList | OrderedList =>\n  Element.isElement(n) && (n.type === 'ul' || n.type === 'ol');\n\n// Handles a 'tab' key down event that may indent a list item.\nfunction handleIndent(editor: SlateEditor, e: KeyboardEvent) {\n  if (editor.selection && Range.isCollapsed(editor.selection)) {\n    const [match] = SlateEditor.nodes(editor, {\n      match: (n) => Element.isElement(n) && n.type === 'li',\n    });\n\n    if (match) {\n      const [current, path] = match;\n      const start = SlateEditor.start(editor, path);\n\n      // If the cursor is at the beginning of a list item\n      if (Point.equals(editor.selection.anchor, start)) {\n        const parentMatch = SlateEditor.parent(editor, path);\n        const [parent] = parentMatch;\n\n        if (isList(parent)) {\n          // Make sure the user is not on the first item\n          if (parent.children.length > 0 && parent.children[0] !== current) {\n            // Now find a sublist, if any\n            for (let i = 0; i < parent.children.length; i += 1) {\n              const item = parent.children[i];\n              if (isList(item)) {\n                const newList = item.type === 'ul' ? ul() : ol();\n                newList.children.pop();\n\n                Transforms.wrapNodes(editor, newList, { at: editor.selection });\n                e.preventDefault();\n                return;\n              }\n            }\n          }\n\n          // Allow indent with the same list type as current parent\n          const newList = parent.type === 'ul' ? ul() : ol();\n          newList.children.pop();\n\n          Transforms.wrapNodes(editor, newList, { at: editor.selection });\n          e.preventDefault();\n        }\n      }\n    }\n  }\n}\n\n// Handles a shift+tab press to possibly outdent a list item\nfunction handleOutdent(editor: SlateEditor, e: KeyboardEvent) {\n  if (editor.selection && Range.isCollapsed(editor.selection)) {\n    const [match] = SlateEditor.nodes(editor, {\n      match: (n) => Element.isElement(n) && n.type === 'li',\n    });\n\n    if (match) {\n      const [, path] = match;\n      const start = SlateEditor.start(editor, path);\n\n      // If the cursor is at the beginning of a list item\n      if (Point.equals(editor.selection.anchor, start)) {\n        // Check to see if the list item is in a nested list\n        const parentMatch = SlateEditor.parent(editor, path);\n        const [parent, parentPath] = parentMatch;\n        const grandParentMatch = SlateEditor.parent(editor, parentPath);\n        const [grandParent] = grandParentMatch;\n\n        if (isList(grandParent) && isList(parent)) {\n          // Lift the current node up one level, effectively promoting\n          // it up as a list item into the parent list\n          Transforms.liftNodes(editor, { at: editor.selection });\n          e.preventDefault();\n        }\n      }\n    }\n  }\n}\n\n// Handles pressing enter on an empty list item to turn it\n// This handler should fail fast - given that every enter press\n// in the editor passes through it\nfunction handleTermination(editor: SlateEditor, e: KeyboardEvent) {\n  if (editor.selection && Range.isCollapsed(editor.selection)) {\n    const [match] = SlateEditor.nodes<ListItem>(editor, {\n      match: (n) => Element.isElement(n) && n.type === 'li',\n    });\n\n    if (match) {\n      const [node, path] = match;\n\n      if (\n        node.children.length === 1 &&\n        Text.isText(node.children[0]) &&\n        node.children[0].text === ''\n      ) {\n        const parentMatch = SlateEditor.parent(editor, path);\n        const [parent, parentPath] = parentMatch;\n        const grandParentMatch = SlateEditor.parent(editor, parentPath);\n        const [grandParent] = grandParentMatch;\n\n        // If we are in a nested list we want to simply outdent\n        if (isList(grandParent) && isList(parent)) {\n          handleOutdent(editor, e);\n        } else {\n          // otherwise, remove the list item and add a paragraph\n          // outside of the parent list\n          Transforms.removeNodes(editor, { at: path });\n\n          // Insert it ahead of the next node\n          Transforms.insertNodes(editor, p(), { at: Path.next(parentPath) });\n          Transforms.select(editor, Path.next(parentPath));\n\n          e.preventDefault();\n        }\n      }\n    }\n  }\n}\n"]}