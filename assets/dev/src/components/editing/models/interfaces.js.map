{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../../src/components/editing/models/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import * as ContentModel from 'data/content/model/elements/types';\nimport { Editor } from 'slate';\nimport { CommandContext } from '../commands/interfaces';\n\n// This is the interface that all editing components must implement.\n// Note the lack of an onEdit callback. The components instead directly\n// use the editor reference to change the model element (using updateModel helper\n// from ./utils is the preferred way to do this).  The top level slate onChange\n// event will then fire and the model update will be reflected in the complete\n// slate data model.\n\nexport interface EditorProps<T extends ContentModel.ModelElement> {\n  commandContext: CommandContext;\n  model: T; // The model (like an image, or youtube)\n  editor: Editor; // The slate instance containing this editor component\n  attributes: any; // Slate attributes that must be rendering as part of the\n  // top level dom element that the component renders.\n  children: any; // The child elements that the component must render.\n}\n"]}