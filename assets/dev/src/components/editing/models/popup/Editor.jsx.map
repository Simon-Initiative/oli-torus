{"version":3,"file":"Editor.jsx","sourceRoot":"","sources":["../../../../../../src/components/editing/models/popup/Editor.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAC7C,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAC;AAE/E,OAAO,EAAE,iBAAiB,EAAE,MAAM,mDAAmD,CAAC;AACtF,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAC;AAC9D,OAAO,EAAE,iBAAiB,EAAE,MAAM,gDAAgD,CAAC;AACnF,OAAO,EAAE,eAAe,EAAE,MAAM,6CAA6C,CAAC;AAE9E,OAAO,EAAE,aAAa,EAAE,MAAM,oBAAoB,CAAC;AACnD,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAC;AAC9B,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,eAAe,CAAC;AAGvB,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAAY,EAAE,EAAE;IAC1C,MAAM,OAAO,GAAG,UAAU,EAAE,CAAC;IAC7B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC;IAEtD,MAAM,MAAM,GAAG,CAAC,OAAoC,EAAE,EAAE;QACtD,WAAW,CAAqB,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG;QACf;YACE,uBAAuB,CAAC;gBACtB,IAAI,EAAE,MAAM;gBACZ,WAAW,EAAE,cAAc;gBAC3B,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE;oBACtC,MAAM,OAAO,GAAG,GAAG,EAAE,CAAE,MAAc,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC1E,MAAM,OAAO,GAAG,CAAC,CAAM,EAAE,EAAE,CAAE,MAAc,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEjF,OAAO,CACL,CAAC,iBAAiB,CAChB,cAAc,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CACrC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CACnB,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;4BAClB,OAAO,EAAE,CAAC;4BACV,MAAM,CAAC,OAAO,CAAC,CAAC;wBAClB,CAAC,CAAC,CACF,QAAQ,CAAC,CAAC,GAAG,EAAE;4BACb,OAAO,EAAE,CAAC;wBACZ,CAAC,CAAC,EACF,CACH,CAAC;gBACJ,CAAC;aACF,CAAC;SACH;KACF,CAAC;IAEF,OAAO,CACL,CAAC,eAAe,CACd,MAAM,CAAC,CAAC,GAAG,EAAE,CACX,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CACjF,CACD,SAAS,CACT,MAAM,CAAC,CACL,CAAC,IAAI,CACH,IAAI,UAAU,CAAC,CACf,KAAK,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CACnB,SAAS,CAAC,mBAAmB,CAE7B;UAAA,CAAC,QAAQ,CACX;QAAA,EAAE,IAAI,CAAC,CACR,CACD,eAAe,CAAC,CAAC,aAAa,CAAC,CAE/B;MAAA,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,EAClF;IAAA,EAAE,eAAe,CAAC,CACnB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { modalActions } from 'actions/modal';\nimport { createButtonCommandDesc } from 'components/editing/commands/commands';\nimport { EditorProps } from 'components/editing/models/interfaces';\nimport { PopupContentModal } from 'components/editing/models/popup/PopupContentModal';\nimport { updateModel } from 'components/editing/models/utils';\nimport { FormattingToolbar } from 'components/editing/toolbars/formatting/Toolbar';\nimport { HoveringToolbar } from 'components/editing/toolbars/HoveringToolbar';\nimport * as ContentModel from 'data/content/model/elements/types';\nimport { centeredAbove } from 'data/content/utils';\nimport React from 'react';\nimport { Range } from 'slate';\nimport { useFocused, useSelected } from 'slate-react';\nimport './Editor.scss';\n\ninterface Props extends EditorProps<ContentModel.Popup> {}\nexport const PopupEditor = (props: Props) => {\n  const focused = useFocused();\n  const selected = useSelected();\n\n  const { attributes, children, editor, model } = props;\n\n  const onEdit = (changes: Partial<ContentModel.Popup>) => {\n    updateModel<ContentModel.Popup>(editor, model, changes);\n  };\n\n  const commands = [\n    [\n      createButtonCommandDesc({\n        icon: 'edit',\n        description: 'Edit content',\n        execute: (_context, _editor, _params) => {\n          const dismiss = () => (window as any).oliDispatch(modalActions.dismiss());\n          const display = (c: any) => (window as any).oliDispatch(modalActions.display(c));\n\n          display(\n            <PopupContentModal\n              commandContext={props.commandContext}\n              model={props.model}\n              onDone={(changes) => {\n                dismiss();\n                onEdit(changes);\n              }}\n              onCancel={() => {\n                dismiss();\n              }}\n            />,\n          );\n        },\n      }),\n    ],\n  ];\n\n  return (\n    <HoveringToolbar\n      isOpen={() =>\n        focused && selected && !!editor.selection && Range.isCollapsed(editor.selection)\n      }\n      showArrow\n      target={\n        <span\n          {...attributes}\n          style={{ paddingRight: 2 }}\n          id={props.model.id}\n          className=\"popup__anchorText\"\n        >\n          {children}\n        </span>\n      }\n      contentLocation={centeredAbove}\n    >\n      <FormattingToolbar commandDescs={commands} commandContext={props.commandContext} />\n    </HoveringToolbar>\n  );\n};\n"]}