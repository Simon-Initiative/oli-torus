{"version":3,"file":"Settings.jsx","sourceRoot":"","sources":["../../../../../../src/components/editing/models/youtube/Settings.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as ContentModel from 'data/content/model/elements/types';\nimport * as Settings from 'components/editing/models/settings/Settings';\nimport { CUTE_OTTERS } from './Editor';\nimport { CommandContext } from 'components/editing/commands/interfaces';\n\nconst onVisit = (href: string) => {\n  window.open(href, '_blank');\n};\n\nconst onCopy = (href: string) => {\n  navigator.clipboard.writeText(href);\n};\n\ntype YouTubeSettingsProps = {\n  model: ContentModel.YouTube;\n  onEdit: (model: ContentModel.YouTube) => void;\n  onRemove: () => void;\n  commandContext: CommandContext;\n  editMode: boolean;\n};\n\nconst toLink = (src: string) => 'https://www.youtube.com/embed/' + (src === '' ? CUTE_OTTERS : src);\n\nexport const YouTubeSettings = (props: YouTubeSettingsProps) => {\n  // Which selection is active, URL or in course page\n  const [model, setModel] = useState(props.model);\n\n  const ref = useRef();\n\n  useEffect(() => {\n    // Inits the tooltips, since this popover rendres in a react portal\n    // this was necessary\n    if (ref !== null && ref.current !== null) {\n      (window as any).$('[data-toggle=\"tooltip\"]').tooltip();\n    }\n  });\n\n  const setSrc = (src: string) => setModel(Object.assign({}, model, { src }));\n  const setAlt = (alt: string) => setModel(Object.assign({}, model, { alt }));\n\n  const applyButton = (disabled: boolean) => (\n    <button\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        props.onEdit(model);\n      }}\n      disabled={disabled}\n      className=\"btn btn-primary ml-1\"\n    >\n      Apply\n    </button>\n  );\n\n  return (\n    <div className=\"settings-editor-wrapper\">\n      <div className=\"settings-editor\" ref={ref as any}>\n        <div className=\"d-flex justify-content-between mb-2\">\n          <div>YouTube</div>\n\n          <div>\n            <Settings.Action\n              icon=\"fab fa-youtube\"\n              tooltip=\"Open YouTube to Find a Video\"\n              onClick={() => onVisit('https://www.youtube.com')}\n            />\n            <Settings.Action\n              icon=\"fas fa-external-link-alt\"\n              tooltip=\"Open link\"\n              onClick={() => onVisit(toLink(model.src))}\n            />\n            <Settings.Action\n              icon=\"far fa-copy\"\n              tooltip=\"Copy link\"\n              onClick={() => onCopy(toLink(model.src))}\n            />\n            <Settings.Action\n              icon=\"fas fa-trash\"\n              tooltip=\"Remove YouTube Video\"\n              id=\"remove-button\"\n              onClick={() => props.onRemove()}\n            />\n          </div>\n        </div>\n\n        <form className=\"form\">\n          <label>YouTube Video ID</label>\n          <input\n            type=\"text\"\n            value={model.src}\n            onChange={(e) => setSrc(e.target.value)}\n            className=\"form-control mr-sm-2\"\n          />\n          <div className=\"mb-2\">\n            <small>\n              e.g. https://www.youtube.com/watch?v=<strong>zHIIzcWqsP0</strong>\n            </small>\n          </div>\n\n          <label>Alt Text</label>\n          <input\n            type=\"text\"\n            value={model.alt}\n            onChange={(e) => setAlt(e.target.value)}\n            onKeyPress={(e) => Settings.onEnterApply(e, () => props.onEdit(model))}\n            className=\"form-control mr-sm-2\"\n          />\n        </form>\n\n        {applyButton(!props.editMode)}\n      </div>\n    </div>\n  );\n};\n"]}