{"version":3,"file":"Editor.jsx","sourceRoot":"","sources":["../../../../../../src/components/editing/models/youtube/Editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ReactEditor, useSelected, useFocused } from 'slate-react';\nimport { Transforms } from 'slate';\nimport { updateModel, getEditMode } from 'components/editing/models/utils';\nimport * as ContentModel from 'data/content/model/elements/types';\nimport { EditorProps } from 'components/editing/models/interfaces';\nimport * as Settings from 'components/editing/models/settings/Settings';\nimport { displayModelToClassName } from 'data/content/utils';\n\nexport const CUTE_OTTERS = 'zHIIzcWqsP0';\n\nexport type YouTubeProps = EditorProps<ContentModel.YouTube>;\n\nexport const YouTubeEditor = (props: YouTubeProps) => {\n  const { attributes, children, editor, model } = props;\n\n  const editMode = getEditMode(editor);\n\n  const focused = useFocused();\n  const selected = useSelected();\n\n  const { src } = model;\n  const parameters = 'disablekb=1&modestbranding=1&showinfo=0&rel=0&controls=0';\n  const fullSrc =\n    'https://www.youtube.com/embed/' + (src === '' ? CUTE_OTTERS : src) + '?' + parameters;\n\n  const onEdit = (updated: ContentModel.YouTube) => {\n    updateModel<ContentModel.YouTube>(editor, model, updated);\n  };\n\n  const update = (attrs: Partial<ContentModel.YouTube>) => Object.assign({}, model, attrs);\n\n  const setCaption = (caption: string) => {\n    onEdit(update({ caption }));\n  };\n\n  const borderStyle =\n    focused && selected\n      ? { border: 'solid 3px lightblue', borderRadius: 0 }\n      : { border: 'solid 3px transparent' };\n\n  // Note that it is important that any interactive portions of a void editor\n  // must be enclosed inside of a \"contentEditable=false\" container. Otherwise,\n  // slate does some weird things that non-deterministically interface with click\n  // events.\n  return (\n    <div\n      {...attributes}\n      style={{ userSelect: 'none' }}\n      className={'youtube-editor ' + displayModelToClassName(model.display)}\n    >\n      <div\n        contentEditable={false}\n        onClick={(_e) => Transforms.select(editor, ReactEditor.findPath(editor, model))}\n        className=\"embed-responsive embed-responsive-16by9 img-thumbnail\"\n        style={borderStyle}\n      >\n        <iframe className=\"embed-responsive-item\" src={fullSrc} allowFullScreen></iframe>\n      </div>\n      <div contentEditable={false}>\n        <Settings.Input\n          editMode={editMode}\n          value={model.caption}\n          onChange={setCaption}\n          editor={editor}\n          model={model}\n          placeholder=\"Set a caption for this YouTube video\"\n        />\n      </div>\n\n      {children}\n    </div>\n  );\n};\n"]}