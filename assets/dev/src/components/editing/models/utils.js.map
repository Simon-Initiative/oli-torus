{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../src/components/editing/models/utils.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAC1C,OAAO,EAAU,UAAU,EAAE,MAAM,OAAO,CAAC;AAE3C;;;;;GAKG;AACH,MAAM,UAAU,WAAW,CACzB,MAAc,EACd,KAAQ,EACR,OAAmB;IAEnB,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACjD,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;AACrD,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,WAAW,CAAC,MAAmB;IAC7C,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC","sourcesContent":["import * as ContentModel from 'data/content/model/elements/types';\nimport { ReactEditor } from 'slate-react';\nimport { Editor, Transforms } from 'slate';\n\n/**\n * Updates a model element that is contained in a slate data model hierarchy.\n * @param editor the slate instance containing the model\n * @param model the current state of the model\n * @param changes a partial object containing the changes that are to be applied to the model\n */\nexport function updateModel<T extends ContentModel.ModelElement>(\n  editor: Editor,\n  model: T,\n  changes: Partial<T>,\n) {\n  const path = ReactEditor.findPath(editor, model);\n  Transforms.setNodes(editor, changes, { at: path });\n}\n\n/**\n * Determines the edit mode of a slate instance. Returns true if\n * the slate editor is allowing edits, false otherwise.\n * @param editor the slate instance\n */\nexport function getEditMode(editor: ReactEditor) {\n  return !ReactEditor.isReadOnly(editor);\n}\n"]}