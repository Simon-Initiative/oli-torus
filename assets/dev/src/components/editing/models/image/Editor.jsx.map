{"version":3,"file":"Editor.jsx","sourceRoot":"","sources":["../../../../../../src/components/editing/models/image/Editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useFocused, useSelected, ReactEditor } from 'slate-react';\nimport { updateModel, getEditMode } from 'components/editing/models/utils';\nimport * as ContentModel from 'data/content/model/elements/types';\nimport { EditorProps } from 'components/editing/models/interfaces';\nimport * as Settings from '../settings/Settings';\nimport { Transforms } from 'slate';\nimport { HoveringToolbar } from 'components/editing/toolbars/HoveringToolbar';\nimport { FormattingToolbar } from 'components/editing/toolbars/formatting/Toolbar';\nimport { initCommands } from './commands';\nimport { centeredAbove, displayModelToClassName } from 'data/content/utils';\nimport { Resizer } from 'components/misc/resizer/Resizer';\n\nexport interface ImageProps extends EditorProps<ContentModel.Image> {}\nexport const ImageEditor = (props: ImageProps): JSX.Element => {\n  const { attributes, children, editor, model } = props;\n\n  const focused = useFocused();\n  const selected = useSelected();\n\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  const editMode = getEditMode(editor);\n\n  const commands = initCommands(model, (img) => onEdit(update(img)));\n\n  const onEdit = (updated: ContentModel.Image) => {\n    updateModel<ContentModel.Image>(editor, props.model, updated);\n  };\n\n  const update = (attrs: Partial<ContentModel.Image>) => Object.assign({}, model, attrs);\n\n  const setCaption = (caption: string) => {\n    onEdit(update({ caption }));\n  };\n\n  return (\n    <div\n      {...attributes}\n      style={{ userSelect: 'none' }}\n      className={'image-editor text-center ' + displayModelToClassName(model.display)}\n    >\n      <figure contentEditable={false}>\n        <HoveringToolbar\n          isOpen={() => focused && selected}\n          showArrow\n          target={\n            <div>\n              {ReactEditor.isFocused(editor) && selected && imageRef.current && (\n                <Resizer\n                  element={imageRef.current}\n                  onResize={({ width, height }) => onEdit(update({ width, height }))}\n                />\n              )}\n              <img\n                width={model.width}\n                height={model.height}\n                ref={imageRef}\n                onClick={() => {\n                  ReactEditor.focus(editor);\n                  Transforms.select(editor, ReactEditor.findPath(editor, model));\n                }}\n                className={displayModelToClassName(model.display)}\n                src={model.src}\n              />\n            </div>\n          }\n          contentLocation={centeredAbove}\n        >\n          <FormattingToolbar commandDescs={commands} commandContext={props.commandContext} />\n        </HoveringToolbar>\n\n        <figcaption contentEditable={false}>\n          <Settings.Input\n            editMode={editMode}\n            value={model.caption}\n            onChange={setCaption}\n            editor={editor}\n            model={model}\n            placeholder=\"Set a caption for this image\"\n          />\n        </figcaption>\n      </figure>\n      {children}\n    </div>\n  );\n};\n"]}