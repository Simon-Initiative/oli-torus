{"version":3,"file":"Settings.jsx","sourceRoot":"","sources":["../../../../../../src/components/editing/models/audio/Settings.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as ContentModel from 'data/content/model/elements/types';\nimport * as Settings from 'components/editing/models/settings/Settings';\nimport { selectAudio } from 'components/editing/commands/AudioCmd';\nimport { CommandContext } from 'components/editing/commands/interfaces';\n\ntype AudioSettingsProps = {\n  model: ContentModel.Audio;\n  onEdit: (model: ContentModel.Audio) => void;\n  onRemove: () => void;\n  commandContext: CommandContext;\n  editMode: boolean;\n};\n\n// const onRemove = () => {\n//   ($('#remove-button') as any).tooltip('hide');\n\n//   const path = ReactEditor.findPath(editor, model);\n//   Transforms.removeNodes(editor, { at: path });\n\n//   setIsPopoverOpen(false);\n// };\n\nexport const AudioSettings = (props: AudioSettingsProps) => {\n  // Which selection is active, URL or in course page\n  const [model, setModel] = useState(props.model);\n\n  const ref = useRef();\n\n  useEffect(() => {\n    // Inits the tooltips, since this popover rendres in a react portal\n    // this was necessary\n    if (ref !== null && ref.current !== null) {\n      (window as any).$('[data-toggle=\"tooltip\"]').tooltip();\n    }\n  });\n\n  const setAlt = (alt: string) => setModel(Object.assign({}, model, { alt }));\n\n  const applyButton = (disabled: boolean) => (\n    <button\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        props.onEdit(model);\n      }}\n      disabled={disabled}\n      className=\"btn btn-primary ml-1\"\n    >\n      Apply\n    </button>\n  );\n\n  const fileName = model.src.substr(model.src.lastIndexOf('/') + 1);\n\n  return (\n    <div className=\"settings-editor-wrapper\">\n      <div className=\"settings-editor\" ref={ref as any}>\n        <div className=\"d-flex justify-content-between mb-2\">\n          <div>Audio</div>\n\n          <div>\n            <Settings.Action\n              icon=\"fas fa-trash\"\n              tooltip=\"Remove YouTube Video\"\n              id=\"remove-button\"\n              onClick={() => props.onRemove()}\n            />\n          </div>\n        </div>\n\n        <form className=\"form\">\n          <label>File</label>\n          <div className=\"input-group mb-3 mr-sm-2\">\n            <input type=\"text\" readOnly value={fileName} className=\"form-control\" />\n            <div className=\"input-group-append\">\n              <button\n                onClick={() =>\n                  selectAudio(props.commandContext.projectSlug, model).then((_img) => null)\n                }\n                // setSrc(img.src)\n                className=\"btn btn-outline-primary\"\n                type=\"button\"\n              >\n                Select\n              </button>\n            </div>\n          </div>\n\n          <label>Alt Text</label>\n          <input\n            type=\"text\"\n            value={model.alt}\n            onChange={(e) => setAlt(e.target.value)}\n            onKeyPress={(e) => Settings.onEnterApply(e, () => props.onEdit(model))}\n            className=\"form-control mr-sm-2\"\n          />\n        </form>\n\n        {applyButton(!props.editMode)}\n      </div>\n    </div>\n  );\n};\n"]}