{"version":3,"file":"commands.js","sourceRoot":"","sources":["../../../../../src/components/editing/commands/commands.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAWxC,MAAM,UAAU,UAAU,CAAC,MAAc,EAAE,IAAU;IACnD,MAAM,QAAQ,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAE5C,IAAI,QAAQ,EAAE;QACZ,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACjC;SAAM;QACL,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACpC;AACH,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,KAKzC;IACC,OAAO,iBAAiB,iCACnB,KAAK,KACR,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,EAC5D,MAAM,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,IACpD,CAAC;AACL,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,KAA0B;IAChE,OAAO,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAClC,CAAC;AAED,SAAS,iBAAiB,CAAC,EACzB,IAAI,EACJ,WAAW,EACX,OAAO,EACP,MAAM,EACN,YAAY,GACQ;IACpB,qCACE,IAAI,EAAE,aAAa,EACnB,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,EAChB,WAAW,EAAE,GAAG,EAAE,CAAC,WAAW,IAC3B,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAC7B,OAAO,kBACL,OAAO,EAAE,CAAC,OAAO,EAAE,MAAc,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,IAC3D,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,KAE5E;AACJ,CAAC","sourcesContent":["import { Editor } from 'slate';\nimport { CommandDesc, Command } from './interfaces';\nimport { isMarkActive } from '../utils';\nimport { Mark } from 'data/content/model/text';\n\ninterface CommandWrapperProps {\n  icon: string;\n  description: string;\n  execute: Command['execute'];\n  mark?: Mark;\n  active?: CommandDesc['active'];\n  precondition?: Command['precondition'];\n}\nexport function toggleMark(editor: Editor, mark: Mark) {\n  const isActive = isMarkActive(editor, mark);\n\n  if (isActive) {\n    Editor.removeMark(editor, mark);\n  } else {\n    Editor.addMark(editor, mark, true);\n  }\n}\n\nexport function createToggleFormatCommand(attrs: {\n  icon: string;\n  description: string;\n  mark: Mark;\n  precondition?: Command['precondition'];\n}) {\n  return createCommandDesc({\n    ...attrs,\n    execute: (context, editor) => toggleMark(editor, attrs.mark),\n    active: (editor) => isMarkActive(editor, attrs.mark),\n  });\n}\n\nexport function createButtonCommandDesc(attrs: CommandWrapperProps) {\n  return createCommandDesc(attrs);\n}\n\nfunction createCommandDesc({\n  icon,\n  description,\n  execute,\n  active,\n  precondition,\n}: CommandWrapperProps): CommandDesc {\n  return {\n    type: 'CommandDesc',\n    icon: () => icon,\n    description: () => description,\n    ...(active ? { active } : {}),\n    command: {\n      execute: (context, editor: Editor) => execute(context, editor),\n      ...(precondition ? { precondition } : { precondition: (_editor) => true }),\n    },\n  };\n}\n"]}