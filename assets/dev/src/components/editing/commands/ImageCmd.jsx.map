{"version":3,"file":"ImageCmd.jsx","sourceRoot":"","sources":["../../../../../src/components/editing/commands/ImageCmd.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Editor, Transforms } from 'slate';\nimport { MIMETYPE_FILTERS, SELECTION_TYPES } from 'components/media/manager/MediaManager';\nimport ModalSelection, { sizes } from 'components/modal/ModalSelection';\nimport { modalActions } from 'actions/modal';\nimport { MediaItem } from 'types/media';\nimport { Command, CommandDesc } from 'components/editing/commands/interfaces';\nimport { UrlOrUpload } from 'components/media/UrlOrUpload';\nimport { image } from 'data/content/model/elements/factories';\n\nconst dismiss = () => (window as any).oliDispatch(modalActions.dismiss());\nconst display = (c: any) => (window as any).oliDispatch(modalActions.display(c));\n\nexport function selectImage(\n  projectSlug: string,\n  _selectedUrl?: string,\n): Promise<string | undefined> {\n  return new Promise((resolve, _reject) => {\n    let selectedUrl: string | undefined = undefined;\n\n    const mediaLibrary = (\n      <ModalSelection\n        title=\"Select Image\"\n        size={sizes.extraLarge}\n        onInsert={() => {\n          dismiss();\n          resolve(selectedUrl);\n        }}\n        onCancel={() => dismiss()}\n        disableInsert={true}\n        okLabel=\"Select\"\n      >\n        <UrlOrUpload\n          onUrlChange={(url: string) => (selectedUrl = url)}\n          onMediaSelectionChange={(mediaOrUrl: MediaItem[]) => (selectedUrl = mediaOrUrl[0]?.url)}\n          projectSlug={projectSlug}\n          onEdit={() => {}}\n          mimeFilter={MIMETYPE_FILTERS.IMAGE}\n          selectionType={SELECTION_TYPES.SINGLE}\n          initialSelectionPaths={selectedUrl ? [selectedUrl] : []}\n        />\n      </ModalSelection>\n    );\n\n    display(mediaLibrary);\n  });\n}\n\nconst libraryCommand: Command = {\n  execute: (context, editor) => {\n    const at = editor.selection;\n    selectImage(context.projectSlug, undefined).then((src) =>\n      Transforms.insertNodes(editor, image(src), at ? { at } : undefined),\n    );\n  },\n  precondition: (_editor) => {\n    return true;\n  },\n};\n\nfunction createCustomEventCommand(onRequestMedia: (r: any) => Promise<string | boolean>) {\n  const customEventCommand: Command = {\n    execute: (context, editor: Editor) => {\n      const at = editor.selection;\n\n      const request = {\n        type: 'MediaItemRequest',\n        mimeTypes: MIMETYPE_FILTERS.IMAGE,\n      };\n\n      onRequestMedia(request).then((r) => {\n        if (typeof r === 'string') {\n          Transforms.insertNodes(editor, image(r), at ? { at } : undefined);\n        }\n      });\n    },\n    precondition: (_editor) => {\n      return true;\n    },\n  };\n  return customEventCommand;\n}\n\nexport function getCommand(onRequestMedia: any) {\n  const commandDesc: CommandDesc = {\n    type: 'CommandDesc',\n    icon: () => 'image',\n    description: () => 'Image',\n    command:\n      onRequestMedia === null || onRequestMedia === undefined\n        ? libraryCommand\n        : createCustomEventCommand(onRequestMedia),\n  };\n  return commandDesc;\n}\n"]}