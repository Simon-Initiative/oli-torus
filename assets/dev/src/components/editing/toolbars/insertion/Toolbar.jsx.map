{"version":3,"file":"Toolbar.jsx","sourceRoot":"","sources":["../../../../../../src/components/editing/toolbars/insertion/Toolbar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingSpinner, LoadingSpinnerSize } from 'components/common/LoadingSpinner';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ArrowContainer, Popover } from 'react-tiny-popover';\nimport { useFocused, useSlate } from 'slate-react';\nimport { classNames } from 'utils/classNames';\nimport guid from 'utils/guid';\nimport { CommandContext, ToolbarItem } from '../../commands/interfaces';\nimport { DropdownToolbarButton, hideToolbar, showToolbar, Spacer, ToolbarButton } from '../common';\nimport { positionInsertion, shouldShowInsertionToolbar } from './utils';\n\ntype InsertionToolbarProps = {\n  isPerformingAsyncAction: boolean;\n  toolbarItems: ToolbarItem[];\n  commandContext: CommandContext;\n};\n\nfunction insertionAreEqual(prevProps: InsertionToolbarProps, nextProps: InsertionToolbarProps) {\n  return (\n    prevProps.commandContext === nextProps.commandContext &&\n    prevProps.toolbarItems === nextProps.toolbarItems &&\n    prevProps.isPerformingAsyncAction === nextProps.isPerformingAsyncAction\n  );\n}\nexport const InsertionToolbar: React.FC<InsertionToolbarProps> = React.memo((props) => {\n  const { toolbarItems } = props;\n  const ref = useRef<HTMLDivElement>(null);\n  const editor = useSlate();\n  const focused = useFocused();\n  const id = guid();\n\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n\n    const reposition = () => positionInsertion(el, editor);\n    if (!isPopoverOpen) {\n      hideToolbar(el);\n    }\n\n    if (isPopoverOpen || (focused && shouldShowInsertionToolbar(editor))) {\n      reposition();\n      showToolbar(el);\n    } else {\n      hideToolbar(el);\n    }\n\n    window.addEventListener('resize', reposition);\n    return () => {\n      hideToolbar(el);\n      window.removeEventListener('resize', reposition);\n    };\n  });\n\n  if (!isPopoverOpen && !shouldShowInsertionToolbar(editor)) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{ display: 'none' }}\n      ref={ref}\n      id={id}\n      className={classNames(['toolbar add-resource-content', isPopoverOpen ? 'active' : ''])}\n    >\n      <div className=\"insert-button-container\">\n        <Popover\n          containerClassName=\"add-resource-popover\"\n          onClickOutside={(_e) => setIsPopoverOpen(false)}\n          isOpen={isPopoverOpen}\n          align=\"center\"\n          padding={5}\n          reposition={false}\n          positions={['top']}\n          boundaryElement={document.body}\n          parentElement={ref.current || undefined}\n          content={({ position, childRect, popoverRect }) => (\n            <ArrowContainer\n              position={position}\n              childRect={childRect}\n              popoverRect={popoverRect}\n              arrowSize={8}\n              arrowColor=\"rgb(38,38,37)\"\n              // Position the arrow in the middle of the popover\n              arrowStyle={{ left: popoverRect.width / 2 - 8 }}\n            >\n              <div className=\"hovering-toolbar\">\n                <div className=\"btn-group btn-group-vertical btn-group-sm\" role=\"group\">\n                  {[\n                    ...toolbarItems.map((t, i) => {\n                      if (t.type !== 'CommandDesc') {\n                        return <Spacer key={'spacer-' + i} />;\n                      }\n                      if (!t.command.precondition(editor)) {\n                        return null;\n                      }\n\n                      const shared = {\n                        style: 'btn-dark',\n                        key: t.description(editor),\n                        icon: t.icon(editor),\n                        tooltip: t.description(editor),\n                        command: t.command,\n                        context: props.commandContext,\n                        parentElement: id,\n                        setParentPopoverOpen: setIsPopoverOpen,\n                      };\n\n                      if (t.command.obtainParameters === undefined) {\n                        return <ToolbarButton {...shared} />;\n                      }\n                      // eslint-disable-next-line\n                      return <DropdownToolbarButton {...shared} />;\n                    }),\n                  ].filter((x) => x)}\n                </div>\n              </div>\n            </ArrowContainer>\n          )}\n        >\n          <div className=\"insert-button\" onClick={() => setIsPopoverOpen(!isPopoverOpen)}>\n            {props.isPerformingAsyncAction ? (\n              <LoadingSpinner size={LoadingSpinnerSize.Normal} />\n            ) : (\n              <i className=\"fa fa-plus\"></i>\n            )}\n          </div>\n        </Popover>\n      </div>\n    </div>\n  );\n}, insertionAreEqual);\nInsertionToolbar.displayName = 'InsertionToolbar';\n"]}