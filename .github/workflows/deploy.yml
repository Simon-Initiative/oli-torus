name: Deploy

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'              # production release tags vX.Y.Z
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'     # release candidate tags vX.Y.Z-rc1
      - deploy-test                          # manually trigger build and deploy to test

jobs:
  deploy-release:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🧾 Build info
        id: info
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=app_version::$(cat mix.exs | grep version | sed -e 's/.*version: "\(.*\)",/\1/')"
          echo "::set-output name=deploy_host::$(if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then echo proton.oli.cmu.edu ; else echo tokamak.oli.cmu.edu ; fi)"

      - name: 📦💽 Package
        uses: ./.github/actions/phoenix-builder
        with:
          build-sha: ${{ steps.info.outputs.sha_short }}

      - name: 🗜️🚢 Zip it & ship it
        run: |
          zip -r oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip _build/prod/rel/oli
          mkdir ~/.ssh
          echo "${{ secrets.SIMON_BOT_PRIVATE_KEY}}" > ~/.ssh/simon-bot
          chmod 600 ~/.ssh/simon-bot
          sftp -i ~/.ssh/simon-bot -o StrictHostKeyChecking=no simon-bot@${{ steps.info.outputs.deploy_host }}  <<< $'cd /torus\n put oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip'

      - name: 🚢💰 Deploy using SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd /torus
            sh deploy.sh ${{ steps.info.outputs.app_version }} ${{ steps.info.outputs.sha_short }}
            # sh deploy.sh ${{ steps.info.outputs.app_version }} ${{ steps.info.outputs.sha_short }} ${{ secrets.ACCESS_TOKEN }}
          host: ${{ steps.info.outputs.deploy_host }}
          user: simon-bot
          key: ${{ secrets.SIMON_BOT_PRIVATE_KEY}}
