name: Package & Deploy Test
on:
  push:
    branches:
      - master
      - hotfix-* # include hotfix branches
  # manually trigger a package build from the Actions tab
  workflow_dispatch:

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🧾 Build info
        id: info
        run: |
          echo "name=sha_short::$(git rev-parse --short HEAD)" >> $GITHUB_STATE
          echo "name=app_version::$(cat mix.exs | grep version | sed -e 's/.*version: "\(.*\)",/\1/')" >> $GITHUB_STATE
          echo "name=deploy_host::$(echo tokamak.oli.cmu.edu)" >> $GITHUB_STATE
          echo "name=workspace::$GITHUB_WORKSPACE" >> $GITHUB_STATE

      - name: 📦 Package
        uses: ./.github/actions/torus-builder
        with:
          build-sha: ${{ env.sha_short }}

      - name: 🗜️ Zip it
        run: |
          mkdir oli-torus-releases
          cd _build/prod/rel/oli
          zip -r ../../../../oli-torus-releases/oli-${{ env.app_version }}-${{ env.sha_short }}.zip *

      - name: ⬆️💽 Upload release to S3 archive
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: "oli-torus-releases"
          AWS_ACCESS_KEY_ID: ${{ secrets.SIMON_BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SIMON_BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-2"
          SOURCE_DIR: "oli-torus-releases"

  docs:
    runs-on: ubuntu-latest
    # only deploy docs if the workflow is running on the master branch
    if: github.ref == 'refs/heads/master'

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: 🔧 Setup
        uses: actions/setup-node@v1
        with:
          node-version: "16.14.2"

      - name: 🔧 Configure
        run: cp oli.example.env oli.env

      - name: 🧪 Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: 1.14.0 # Define the elixir version [required]
          otp-version: 24.0 # Define the OTP version [required]

      - name: ⬇️ Install Elixir Dependencies
        run: mix deps.get

      - name: 🔨📦 Build Dependencies
        run: mix deps.compile

      - name: Install node_module dependencies 📦
        run: npm install -g yarn && cd assets && yarn

      - name: Build client-side API markdown docs
        run: cd assets && npx typedoc --tsconfig tsconfig.sdk.json --plugin typedoc-plugin-markdown  --out typedocs src/components/activities/index.ts

      - name: 🔨📄 Build Docs
        run: mix docs

      - name: 🚀 Deploy Docs
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: doc # The folder the action should deploy.

  deployment:
    runs-on: ubuntu-latest
    needs: package
    if: github.ref == 'refs/heads/master'

    environment:
      name: ${{ env.deploy_host }}
      url: ${{ env.deploy_host }}

    steps:
      - run: echo "deploying ${{ github.sha }} ${{ github.ref }} ${{ github.ref_name }} to ${{ env.deploy_host }}"

      - name: 🚢💰 Deploy to test using SSH
        uses: fifsky/ssh-action@master
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          command: |
            cd /torus
            sh deploy.sh -r ${{ github.ref }} ${{ env.app_version }} ${{ env.sha_short }}
          host: ${{ env.deploy_host }}
          user: simon-bot
          key: ${{ secrets.SIMON_BOT_PRIVATE_KEY}}
          port: 44067
