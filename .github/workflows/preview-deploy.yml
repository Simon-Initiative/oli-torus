name: Preview Deploy

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  simon-token-available:
    name: Check simon-bot Access Token
    runs-on: ubuntu-latest
    outputs:
      available: ${{ steps.check_token.outputs.available }}
    steps:
      - name: Check whether SIMON_BOT_PERSONAL_ACCESS_TOKEN is set
        id: check_token
        run: echo "available=$(if [ "${{ secrets.SIMON_BOT_PERSONAL_ACCESS_TOKEN }}" != "" ] ; then echo true ; else echo false ; fi)" >> $GITHUB_OUTPUT

  build-container:
    name: Build Container
    runs-on: ubuntu-latest
    needs: simon-token-available
    if: needs.simon-token-available.outputs.available == 'true'
    permissions:
      contents: read
      packages: write

    outputs:
      app_version: ${{ steps.info.outputs.app_version }}
      sha_short: ${{ steps.info.outputs.sha_short }}

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 🧾 Build info
        id: info
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "app_version=$(cat mix.exs | grep version | sed -e 's/.*version: "\(.*\)",/\1/')" >> $GITHUB_OUTPUT

      - name: 🧾 Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/simon-initiative/oli-torus
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,prefix=sha-,format=long

      - name: 🔑 Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # builds the official oli-torus app image
      - name: 🐳 Docker Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: APP_VERSION=${{ steps.info.outputs.app_version }}
            SHA_SHORT=${{ steps.info.outputs.sha_short }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Preview Deploy
    runs-on: plasma
    needs: build-container
    env:
      PR: ${{ github.event.number }}
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      IMAGE_REPO: ghcr.io/simon-initiative/oli-torus
      IMAGE_TAG: sha-${{ github.sha }}
      PREVIEW_DOMAIN: ${{ vars.PREVIEW_DOMAIN || 'plasma.oli.cmu.edu' }}
    steps:
      - uses: actions/checkout@v4

      - name: Apply cluster RBAC baseline
        run: kubectl apply -f devops/k8s/rbac/pr-admin.yaml

      - name: Prepare namespace and policies
        run: devops/scripts/apply-preview-policies.sh "pr-${PR}"

      - name: Ensure image pull secret
        env:
          CR_PAT: ${{ secrets.SIMON_BOT_PERSONAL_ACCESS_TOKEN }}
          REGISTRY_USER: simon-bot
        run: |
          kubectl -n "pr-${PR}" delete secret ghcr-creds --ignore-not-found
          kubectl -n "pr-${PR}" create secret docker-registry ghcr-creds \
            --docker-server=ghcr.io \
            --docker-username="${REGISTRY_USER}" \
            --docker-password="${CR_PAT}" \
            --docker-email="${REGISTRY_USER}@users.noreply.github.com"

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "5.4.1"

      - name: Render and apply Kustomize overlay
        run: |
          set -euo pipefail

          BUILD_ROOT="$(mktemp -d)"
          trap 'rm -rf "$BUILD_ROOT"' EXIT

          cp -R devops "${BUILD_ROOT}/"

          OVERLAY_DIR="${BUILD_ROOT}/devops/kustomize/overlays/preview"

          printf 'PR_NUMBER=%s\nPREVIEW_DOMAIN=%s\n' "${PR}" "${PREVIEW_DOMAIN}" > "${OVERLAY_DIR}/params.env"

          kubectl -n "pr-${PR}" delete job release-setup --ignore-not-found

          cd "${OVERLAY_DIR}"
          kustomize edit set namespace "pr-${PR}"
          kustomize edit set image ${IMAGE_REPO}=${IMAGE_REPO}:${IMAGE_TAG}

          kustomize build --load-restrictor LoadRestrictionsNone . | kubectl apply -f -

      - name: Wait for release setup job
        run: kubectl -n "pr-${PR}" wait --for=condition=complete --timeout=10m job/release-setup

      - name: Scale application
        run: |
          kubectl -n "pr-${PR}" scale deployment/app --replicas=1
          kubectl -n "pr-${PR}" rollout status deployment/app --timeout=5m

      - name: Post preview URL
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          message: |
            Preview deployed to: https://pr-${{ env.PR }}.${{ env.PREVIEW_DOMAIN }}
