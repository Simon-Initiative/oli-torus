name: Build & Test PR

on:
  pull_request:
    branches:
      - master
      - test
      - production

jobs:
  elixir-build-test:
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🔧 Configure
        run: |
          cp oli.example.env oli.env
          cp postgres.example.env postgres.env
          sed -i 's/DB_HOST=/# DB_HOST=/g' oli.env
          printf "\n\nDB_HOST=localhost" >> oli.env

      - name: 🗄 Start test database
        run: docker-compose up -d postgres

      - name: 🧪 Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: 1.11.1 # Define the elixir version [required]
          otp-version: 23.1 # Define the OTP version [required]

      - name: ⬇️ Install elixir dependencies
        run: mix deps.get

      - name: 🔨 Build dependencies
        run: mix deps.compile

      - name: 🔨 Build project
        run: set -a;source oli.env && mix clean && mix compile --warnings-as-errors

      - name: ▶️ Run tests
        run: set -a;source oli.env && mix coveralls.github

  ts-build-test:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🔧 Configure
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: 🧪 Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: 1.11.1 # Define the elixir version [required]
          otp-version: 23.1 # Define the OTP version [required]

      - name: ⬇️ Install elixir dependencies
        run: mix deps.get

      - name: Install node_module dependencies 📦
        run: cd assets && npm install

      - name: 🧹 Lint
        run: cd assets && npm run lint

      - name: 🔨 Build
        run: cd assets && npm run deploy

      - name: ⚙️ Test
        run: cd assets && npm run test
