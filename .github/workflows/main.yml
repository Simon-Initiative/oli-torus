name: Build & Test CI

on:
  pull_request:
    branches:
      - master
      - test
      - production
  push:
    branches:
      - master
      - test
      - production

jobs:
  elixir-build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Configure 🔧
      run: cp oli.example.env oli.env && cp postgres.example.env postgres.env

    - name: Start Test Database 🗄
      run: docker-compose up -d postgres

    - name: Setup Elixir 🧪
      uses: actions/setup-elixir@v1
      with:
        elixir-version: 1.10.2 # Define the elixir version [required]
        otp-version: 22.2 # Define the OTP version [required]

    - name: Install Elixir Dependencies ⬇️
      run: mix deps.get

    - name: Build Dependencies 🔨📦
      run: mix deps.compile

    - name: Build Project 🔨
      run: set -a;source oli.env && mix clean && mix compile --warnings-as-errors

    - name: Run Tests ⚙️
      run: set -a;source oli.env && mix test.coverage

  ts-build-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Configure 🔧
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Setup Elixir 🧪
      uses: actions/setup-elixir@v1
      with:
        elixir-version: 1.10.2 # Define the elixir version [required]
        otp-version: 22.2 # Define the OTP version [required]

    - name: Install Elixir Dependencies ⬇️
      run: mix deps.get

    - name: Install node_module Dependencies 📦
      run: cd assets && npm install

    - name: Lint 🧹
      run: cd assets && npm run lint

    - name: Build 🔨
      run: cd assets && npm run deploy

    - name: Test ⚙️
      run: cd assets && npm run test
