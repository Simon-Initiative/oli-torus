name: Deploy Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'             # production release tags vX.Y.Z
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'     # release candidate tags vX.Y.Z-rc1

jobs:
  deploy-release:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🧾 Build info
        id: info
        run: |
          sha_short=$(git rev-parse --short HEAD)
          app_version=$(cat mix.exs | grep version | sed -e 's/.*version: "\(.*\)",/\1/')
          deploy_host=$(if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then echo proton.oli.cmu.edu ; else echo tokamak.oli.cmu.edu ; fi)
          archive_download_url=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/Simon-Initiative/oli-torus/actions/artifacts | jq -r '.artifacts[] | select(.name == "oli-$app_version-$sha_short") | .archive_download_url')
          echo "::set-output name=sha_short::$sha_short"
          echo "::set-output name=app_version::$app_version"
          echo "::set-output name=deploy_host::$deploy_host"
          echo "::set-output name=archive_download_url::$archive_download_url"

      - name: ⬇️🚢 Fetch archived build & ship it
        run: |
          # print error message and exit if archive_download_url is not set
          if [ -z "${{ steps.info.outputs.archive_download_url }}" ]; then echo "Build archive for oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip not found"; exit 1 ; fi

          wget -O oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip ${{ steps.info.outputs.archive_download_url }}
          mkdir ~/.ssh
          echo "${{ secrets.SIMON_BOT_PRIVATE_KEY}}" > ~/.ssh/simon-bot
          chmod 600 ~/.ssh/simon-bot
          sftp -i ~/.ssh/simon-bot -o StrictHostKeyChecking=no simon-bot@${{ steps.info.outputs.deploy_host }}  <<< $'cd /torus\n put oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip'

      - name: 💰 Deploy using SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd /torus
            sh deploy.sh ${{ steps.info.outputs.app_version }} ${{ steps.info.outputs.sha_short }}
          host: ${{ steps.info.outputs.deploy_host }}
          user: simon-bot
          key: ${{ secrets.SIMON_BOT_PRIVATE_KEY}}
