name: Build & Test PR

on:
  pull_request:
    branches:
      - master
      - hotfix-*

jobs:
  elixir-build-test:
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🔧 Configure
        run: |
          cp postgres.example.env postgres.env
          cat > oli.env <<EOL
          ${{ secrets.CI_OLI_ENV }}
          EOL

      - name: 🗄 Start test database
        run: docker-compose up -d postgres

      - name: 🧪 Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: 1.13.2 # Define the elixir version [required]
          otp-version: 24.0 # Define the OTP version [required]

      - name: ⬇️ Install elixir dependencies
        run: mix deps.get

      - name: 🔨 Build dependencies
        run: mix deps.compile

      - name: 🔨 Build project
        run: set -a;source oli.env && mix clean && mix compile --warnings-as-errors

      - name: ▶️ Run unit tests
        run: set -a;source oli.env && MIX_ENV=test mix ecto.reset && mix test

      - name: Install node_module dependencies 📦
        run: cd assets && yarn --frozen-lockfile

      - name: ▶️ Run integration tests
        run: |
          /usr/local/share/chrome_driver/chromedriver &
          timeout 90 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9515)" != "404" ]]; do sleep 1; done' || false
          set -a;source oli.env && MIX_ENV=hound mix test.hound

      - name: 📈 Save test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: integration-test-results
          path: test-results
          if-no-files-found: ignore

  ts-build-test:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🔧 Configure
        uses: actions/setup-node@v1
        with:
          node-version: "16.13.2"

      - name: 🧪 Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: 1.13.2 # Define the elixir version [required]
          otp-version: 24.0 # Define the OTP version [required]

      - name: ⬇️ Install elixir dependencies
        run: mix deps.get

      - name: Install node_module dependencies 📦
        run: cd assets && yarn --frozen-lockfile

      - name: 🧹 Lint
        run: cd assets && npm run lint

      - name: 🔨 Build
        run: cd assets && npm run deploy

      - name: ⚙️ Test
        run: cd assets && npm run test
