{{- if .Values.minio.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "oli-torus-preview.minioName" . }}
  labels:
    {{- include "oli-torus-preview.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
    - name: http
      port: {{ .Values.minio.service.port }}
      targetPort: {{ .Values.minio.service.port }}
    - name: console
      port: {{ .Values.minio.service.consolePort }}
      targetPort: {{ .Values.minio.service.consolePort }}
  selector:
    {{- include "oli-torus-preview.selectorLabels" . | nindent 4 }}
    component: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "oli-torus-preview.minioName" . }}
  labels:
    {{- include "oli-torus-preview.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "oli-torus-preview.minioName" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "oli-torus-preview.selectorLabels" . | nindent 6 }}
      component: minio
  template:
    metadata:
      labels:
        {{- include "oli-torus-preview.selectorLabels" . | nindent 8 }}
        component: minio
    spec:
      containers:
        - name: minio
          image: {{ .Values.minio.image }}
          imagePullPolicy: IfNotPresent
          args:
            - server
            - --console-address
            - ":{{ .Values.minio.service.consolePort }}"
            - /data
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.rootUser | quote }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.minio.rootPassword | quote }}
          ports:
            - containerPort: {{ .Values.minio.service.port }}
              name: http
            - containerPort: {{ .Values.minio.service.consolePort }}
              name: console
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
          {{- with .Values.minio.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          {{- range .Values.minio.persistence.accessModes }}
          - {{ . }}
          {{- end }}
        {{- if .Values.minio.persistence.storageClass }}
        storageClassName: {{ .Values.minio.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.minio.persistence.size }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "oli-torus-preview.minioName" . }}-buckets
  labels:
    {{- include "oli-torus-preview.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "oli-torus-preview.labels" . | nindent 8 }}
        component: minio
    spec:
      restartPolicy: OnFailure
      containers:
        - name: create-buckets
          image: {{ .Values.minio.mcImage }}
          imagePullPolicy: IfNotPresent
          env:
            - name: MINIO_ENDPOINT
              value: http://{{ include "oli-torus-preview.minioName" . }}:{{ .Values.minio.service.port }}
            - name: MINIO_ROOT_USER
              value: {{ .Values.minio.rootUser | quote }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.minio.rootPassword | quote }}
          command:
            - /bin/sh
            - -c
            - |
              set -euo pipefail
              until mc alias set local "$MINIO_ENDPOINT" "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"; do
                echo "Waiting for MinIO..."
                sleep 3
              done
              {{- range .Values.minio.buckets }}
              mc mb --ignore-existing local/{{ .name }}
              {{- if eq .policy "public" }}
              mc anonymous set public local/{{ .name }}
              {{- else if eq .policy "private" }}
              mc anonymous set private local/{{ .name }}
              {{- end }}
              {{- end }}
{{- end }}
