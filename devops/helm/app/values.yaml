replicaCount: 1

image:
  repository: ghcr.io/oli-torus/app
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

prNumber: ""
previewDomain: "plasma.oli.cmu.edu"

serviceAccount:
  create: true
  name: ""
  annotations: {}

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 80
  targetPort: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
  tls: []

appEnv:
  overrides: {}

extraEnv:
  - name: MIX_ENV
    value: prod
extraEnvFrom: []

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 30
  periodSeconds: 15

readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 15
  periodSeconds: 10

# resources:
#   limits:
#     cpu: 500m
#     memory: 4Gi
#   requests:
#     cpu: 200m
#     memory: 1Gi

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

volumes: []
volumeMounts: []

releaseSetup:
  enabled: true
  command: /app/bin/oli eval "Oli.Release.setup"

postgres:
  enabled: true
  image: ankane/pgvector:latest
  auth:
    username: postgres
    password: postgres
    database: postgres
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: ""
  resources: {}

minio:
  enabled: true
  image: minio/minio:latest
  mcImage: minio/mc:latest
  rootUser: minio-user
  rootPassword: minio-password
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClass: ""
  service:
    port: 9000
    consolePort: 9001
  buckets:
    - name: torus-media
      policy: public
    - name: torus-xapi
      policy: public
    - name: torus-blob-dev
      policy: public
  resources: {}
