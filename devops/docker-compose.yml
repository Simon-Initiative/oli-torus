services:
  app:
    image: ghcr.io/simon-initiative/oli-torus:${APP_IMAGE_TAG}
    restart: unless-stopped
    hostname: ${HOST}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
    networks:
      - default
      - webproxy-public
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    environment:
      PHX_SERVER: "true"
      # Tell Phoenix we're behind a proxy that handles SSL
      FORCE_SSL: "false"
      # Use HTTP scheme since SSL is terminated by HAProxy
      SCHEME: "https"
      PORT: "443"
      SECRET_KEY_BASE: "ba1sX03RVQyAk3MPRfUeG7LQxUPRe3IB3iN3VnTHYFxUgsz2vAUDof/kGCiyaigs"
      LIVE_VIEW_SALT: "vf6j/P8XSYOVNs3aKUQ5SQCfunWheQPQ+EDzfBJM0FBTLcyTHZlmQGXbBBbSJwkV"
      HOST: ${HOST}
      S3_MEDIA_BUCKET_NAME: "torus-media"
      S3_XAPI_BUCKET_NAME: "torus-xapi"
      MEDIA_URL: https://${HOST}/s3/torus-media
      # MinIO S3 configuration
      AWS_S3_ACCESS_KEY_ID: "minio-user"
      AWS_S3_SECRET_ACCESS_KEY: "minio-password"
      AWS_S3_SCHEME: "http"
      AWS_S3_PORT: "9000"
      AWS_S3_HOST: "minio"
      CLOAK_VAULT_KEY: "HXCdm5z61eNgUpnXObJRv94k3JnKSrnfwppyb60nz6w="
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      ADMIN_EMAIL: "admin@example.edu"
      ADMIN_PASSWORD: "changeme"
      EMAIL_FROM_NAME: "OLI Torus"
      EMAIL_FROM_ADDRESS: "no-reply@example.edu"
      EMAIL_REPLY_TO: "admin@example.edu"
      BRANDING_LOGO: "/branding/dev/oli_torus_logo.png"
      BRANDING_LOGO_DARK: "/branding/dev/oli_torus_logo_dark.png"
      BRANDING_FAVICONS_DIR: "/branding/dev/favicons"
      VENDOR_PROPERTY_WORKSPACE_LOGO: "/branding/dev/oli_torus_icon.png"
    labels:
      - "traefik.enable=true"
      # Specify the network for Traefik to use
      - "traefik.docker.network=webproxy-public"
      # Route everything except /s3 to app
      - "traefik.http.routers.${PROJECT}-app.rule=Host(`${HOST}`) && PathPrefix(`/`)"
      - "traefik.http.routers.${PROJECT}-app.priority=10"
      - "traefik.http.routers.${PROJECT}-app.entrypoints=web"
      - "traefik.http.services.${PROJECT}-app.loadbalancer.server.port=80"
      # Health check for the service
      - "traefik.http.services.${PROJECT}-app.loadbalancer.healthcheck.path=/healthz"
      - "traefik.http.services.${PROJECT}-app.loadbalancer.healthcheck.interval=30s"
      # Add headers to indicate HTTPS is being used upstream
      - "traefik.http.middlewares.${PROJECT}-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.${PROJECT}-headers.headers.customrequestheaders.X-Forwarded-Port=443"
      - "traefik.http.routers.${PROJECT}-app.middlewares=${PROJECT}-headers"

  postgres:
    image: ankane/pgvector
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: 5m
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-password
    volumes:
      - minio_data:/data
    networks:
      - default
      - webproxy-public
    labels:
      - "traefik.enable=true"
      # Specify the network for Traefik to use
      - "traefik.docker.network=webproxy-public"
      # Route only /s3 to minio
      - "traefik.http.routers.${PROJECT}-minio.rule=Host(`${HOST}`) && PathPrefix(`/s3`)"
      - "traefik.http.routers.${PROJECT}-minio.priority=20"
      - "traefik.http.routers.${PROJECT}-minio.entrypoints=web"
      - "traefik.http.services.${PROJECT}-minio.loadbalancer.server.port=9000"
      # Strip /s3 prefix before forwarding
      - "traefik.http.middlewares.${PROJECT}-stripprefix.stripprefix.prefixes=/s3"
      - "traefik.http.routers.${PROJECT}-minio.middlewares=${PROJECT}-stripprefix"
    command: ["server", "--console-address", ":9001", "/data"]

volumes:
  postgres_data:
  minio_data:

networks:
  webproxy-public:
    external: true
