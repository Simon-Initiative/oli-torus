services:
  haproxy:
    image: haproxy
    networks:
      webproxy-public:
        aliases:
          - ${PROJECT}
      default: {}
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
  app:
    image: oli-torus:${APP_IMAGE_TAG}
    hostname: ${HOST}
    depends_on:
      - postgres
      - minio
    environment:
      SECRET_KEY_BASE: "ba1sX03RVQyAk3MPRfUeG7LQxUPRe3IB3iN3VnTHYFxUgsz2vAUDof/kGCiyaigs"
      LIVE_VIEW_SALT: "vf6j/P8XSYOVNs3aKUQ5SQCfunWheQPQ+EDzfBJM0FBTLcyTHZlmQGXbBBbSJwkV"
      HOST: ${HOST}
      S3_MEDIA_BUCKET_NAME: "oli-torus-media-dev"
      S3_XAPI_BUCKET_NAME: "oli-torus-xapi-dev"
      MEDIA_URL: ${HOST}/media
      CLOAK_VAULT_KEY: "HXCdm5z61eNgUpnXObJRv94k3JnKSrnfwppyb60nz6w="
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      ADMIN_EMAIL: "admin@example.edu"
      ADMIN_PASSWORD: "changeme"
      EMAIL_FROM_NAME: "OLI Torus"
      EMAIL_FROM_ADDRESS: "no-reply@example.edu"
      EMAIL_REPLY_TO: "admin@example.edu"

  postgres:
    image: ankane/pgvector
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: 5m
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio-user
      MINIO_ROOT_PASSWORD: minio-password
    volumes:
      - minio_data:/data
    command: ["server", "--console-address", ":9001", "/data"]

volumes:
  postgres_data:
  minio_data:

networks:
  webproxy-public:
    external: true
