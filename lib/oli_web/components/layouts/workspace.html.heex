<main role="main" class="relative flex flex-col">
  <div class="sticky top-0 z-50">
    <div
      :if={assigns[:header_enabled?] && !@disable_sidebar? && assigns[:active_workspace]}
      class="w-full py-2.5 h-14 flex flex-row bg-delivery-header dark:bg-black border-b border-[#0F0D0F]/5 dark:border-[#0F0D0F]"
    >
      <% header_title = assigns[:header_title] || assigns[:resource_title] %>
      <div class={"mr-3 my-auto #{if header_title, do: "flex items-center justify-between w-full", else: "ml-auto"}"}>
        <div
          :if={header_title}
          class={"text-[#757682] dark:text-[#FFF] font-medium #{if @sidebar_expanded, do: "ml-60", else: "ml-20"}"}
        >
          <%= header_title %>
        </div>
        <Components.Delivery.UserAccount.workspace_menu
          id="workspace-user-menu"
          ctx={@ctx}
          is_admin={@is_admin}
          active_workspace={@active_workspace}
        />
      </div>
    </div>
    <div class={"top-0 #{if @disable_sidebar?, do: "w-full", else: "absolute"}"}>
      <Components.Delivery.Layouts.workspace_sidebar_nav
        :if={!@disable_sidebar?}
        ctx={@ctx}
        is_admin={@is_admin}
        active_workspace={assigns[:active_workspace] || :student}
        active_view={assigns[:active_view]}
        preview_mode={@preview_mode}
        sidebar_expanded={@sidebar_expanded}
        resource_title={assigns[:resource_title]}
        resource_slug={assigns[:resource_slug]}
        active_tab={assigns[:active_tab]}
        uri={assigns[:uri] || ""}
      />
      <Components.Delivery.Layouts.header
        :if={@disable_sidebar?}
        ctx={@ctx}
        include_logo
        is_admin={@is_admin}
        preview_mode={@preview_mode}
        sidebar_expanded={@sidebar_expanded}
      />
    </div>
  </div>
  <div
    id="content"
    class={[
      "transition-all duration-100  min-h-screen dark:bg-[#0F0D0F] bg-[#F3F4F8]",
      if(@sidebar_expanded,
        do: "md:w-[calc(100%-200px)] md:ml-[200px]",
        else: "md:w-[calc(100%-60px)] md:ml-[60px]"
      ),
      if(@disable_sidebar?, do: "md:!w-full md:!ml-0")
    ]}
  >
    <div class="mb-[28px] overview">
      <%= if Phoenix.Flash.get(@flash, :info) do %>
        <div class="alert alert-info flex flex-row" role="alert">
          <div class="flex-1">
            <%= Phoenix.Flash.get(@flash, :info) %>
          </div>

          <button
            type="button"
            class="close"
            data-bs-dismiss="alert"
            aria-label="Close"
            phx-click="lv:clear-flash"
            phx-value-key="info"
          >
            <i class="fa-solid fa-xmark fa-lg"></i>
          </button>
        </div>
      <% end %>
      <%= if Phoenix.Flash.get(@flash, :error) do %>
        <div class="alert alert-danger flex flex-row" role="alert">
          <div class="flex-1">
            <%= Phoenix.Flash.get(@flash, :error) %>
          </div>

          <button
            type="button"
            class="close"
            data-bs-dismiss="alert"
            aria-label="Close"
            phx-click="lv:clear-flash"
            phx-value-key="danger"
          >
            <i class="fa-solid fa-xmark fa-lg"></i>
          </button>
        </div>
      <% end %>
    </div>
    <div class={OliWeb.Workspaces.Utils.maybe_add_padding(assigns[:uri])}>
      <div class="-mt-[28px]">
        <Components.Delivery.Layouts.breadcrumb_trail
          :if={assigns[:breadcrumbs]}
          breadcrumbs={assigns[:breadcrumbs]}
          socket={@socket}
        />
      </div>

      <%= @inner_content %>
    </div>
  </div>
  <div
    :if={assigns[:footer_enabled?] && true}
    id="footer_contaner"
    class={[
      "relative transition-all duration-100 mt-14",
      if(@sidebar_expanded,
        do: "md:w-[calc(100%-200px)] md:ml-[200px]",
        else: "md:w-[calc(100%-60px)] md:ml-[60px]"
      ),
      if(@disable_sidebar?, do: "md:!w-full md:!ml-0")
    ]}
  >
    <OliWeb.Components.Footer.delivery_footer license={
      Map.get(assigns, :has_license) && assigns[:license]
    } />
  </div>
  <%= react_component("Components.ModalDisplay") %>
</main>
